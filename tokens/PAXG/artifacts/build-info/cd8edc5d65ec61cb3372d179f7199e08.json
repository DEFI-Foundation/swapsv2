{
	"id": "cd8edc5d65ec61cb3372d179f7199e08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/PAXG/PAXGImplementation.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2019-08-29\r\n */\r\n\r\n// File: contracts/zeppelin/SafeMath.sol\r\n\r\npragma solidity 0.4.24;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Adds two numbers, reverts on overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Multiplies two unsigned integers, reverts on overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\n// File: contracts/PAXGImplementation.sol\r\n\r\npragma solidity 0.4.24;\r\npragma experimental \"v0.5.0\";\r\n\r\n/**\r\n * @title PAXGImplementation\r\n * @dev this contract is a Pausable ERC20 token with Burn and Mint\r\n * controlled by a central SupplyController. By implementing PaxosImplementation\r\n * this contract also includes external methods for setting\r\n * a new implementation contract for the Proxy.\r\n * NOTE: The storage defined here will actually be held in the Proxy\r\n * contract and all calls to this contract should be made through\r\n * the proxy, including admin actions done as owner or supplyController.\r\n * Any call to transfer against this contract should fail\r\n * with insufficient funds since no tokens will be issued there.\r\n */\r\ncontract PAXGImplementation {\r\n    /**\r\n     * MATH\r\n     */\r\n\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * DATA\r\n     */\r\n\r\n    // INITIALIZATION DATA\r\n    bool private initialized = false;\r\n\r\n    // ERC20 BASIC DATA\r\n    mapping(address => uint256) internal balances;\r\n    uint256 internal totalSupply_;\r\n    string public constant name = 'Paxos Gold'; // solium-disable-line\r\n    string public constant symbol = 'PAXG'; // solium-disable-line uppercase\r\n    uint8 public constant decimals = 18; // solium-disable-line uppercase\r\n\r\n    // ERC20 DATA\r\n    mapping(address => mapping(address => uint256)) internal allowed;\r\n\r\n    // OWNER DATA\r\n    address public owner;\r\n    address public proposedOwner;\r\n\r\n    // PAUSABILITY DATA\r\n    bool public paused = false;\r\n\r\n    // ASSET PROTECTION DATA\r\n    address public assetProtectionRole;\r\n    mapping(address => bool) internal frozen;\r\n\r\n    // SUPPLY CONTROL DATA\r\n    address public supplyController;\r\n\r\n    // DELEGATED TRANSFER DATA\r\n    address public betaDelegateWhitelister;\r\n    mapping(address => bool) internal betaDelegateWhitelist;\r\n    mapping(address => uint256) internal nextSeqs;\r\n    // EIP191 header for EIP712 prefix\r\n    string internal constant EIP191_HEADER = '\\x19\\x01';\r\n    // Hash of the EIP712 Domain Separator Schema\r\n    bytes32 internal constant EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH =\r\n        keccak256('EIP712Domain(string name,address verifyingContract)');\r\n    bytes32 internal constant EIP712_DELEGATED_TRANSFER_SCHEMA_HASH =\r\n        keccak256(\r\n            'BetaDelegatedTransfer(address to,uint256 value,uint256 serviceFee,uint256 seq,uint256 deadline)'\r\n        );\r\n    // Hash of the EIP712 Domain Separator data\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    bytes32 public EIP712_DOMAIN_HASH;\r\n\r\n    // FEE CONTROLLER DATA\r\n    // fee decimals is only set for informational purposes.\r\n    // 1 feeRate = .000001 oz of gold\r\n    uint8 public constant feeDecimals = 6;\r\n\r\n    // feeRate is measured in 100th of a basis point (parts per 1,000,000)\r\n    // ex: a fee rate of 200 = 0.02% of an oz of gold\r\n    uint256 public constant feeParts = 1000000;\r\n    uint256 public feeRate;\r\n    address public feeController;\r\n    address public feeRecipient;\r\n\r\n    /**\r\n     * EVENTS\r\n     */\r\n\r\n    // ERC20 BASIC EVENTS\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // ERC20 EVENTS\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    // OWNABLE EVENTS\r\n    event OwnershipTransferProposed(\r\n        address indexed currentOwner,\r\n        address indexed proposedOwner\r\n    );\r\n    event OwnershipTransferDisregarded(address indexed oldProposedOwner);\r\n    event OwnershipTransferred(\r\n        address indexed oldOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    // PAUSABLE EVENTS\r\n    event Pause();\r\n    event Unpause();\r\n\r\n    // ASSET PROTECTION EVENTS\r\n    event AddressFrozen(address indexed addr);\r\n    event AddressUnfrozen(address indexed addr);\r\n    event FrozenAddressWiped(address indexed addr);\r\n    event AssetProtectionRoleSet(\r\n        address indexed oldAssetProtectionRole,\r\n        address indexed newAssetProtectionRole\r\n    );\r\n\r\n    // SUPPLY CONTROL EVENTS\r\n    event SupplyIncreased(address indexed to, uint256 value);\r\n    event SupplyDecreased(address indexed from, uint256 value);\r\n    event SupplyControllerSet(\r\n        address indexed oldSupplyController,\r\n        address indexed newSupplyController\r\n    );\r\n\r\n    // DELEGATED TRANSFER EVENTS\r\n    event BetaDelegatedTransfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 value,\r\n        uint256 seq,\r\n        uint256 serviceFee\r\n    );\r\n    event BetaDelegateWhitelisterSet(\r\n        address indexed oldWhitelister,\r\n        address indexed newWhitelister\r\n    );\r\n    event BetaDelegateWhitelisted(address indexed newDelegate);\r\n    event BetaDelegateUnwhitelisted(address indexed oldDelegate);\r\n\r\n    // FEE CONTROLLER EVENTS\r\n    event FeeCollected(address indexed from, address indexed to, uint256 value);\r\n    event FeeRateSet(uint256 indexed oldFeeRate, uint256 indexed newFeeRate);\r\n    event FeeControllerSet(\r\n        address indexed oldFeeController,\r\n        address indexed newFeeController\r\n    );\r\n    event FeeRecipientSet(\r\n        address indexed oldFeeRecipient,\r\n        address indexed newFeeRecipient\r\n    );\r\n\r\n    /**\r\n     * FUNCTIONALITY\r\n     */\r\n\r\n    // INITIALIZATION FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev sets 0 initial tokens, the owner, the supplyController,\r\n     * the fee controller and fee recipient.\r\n     * this serves as the constructor for the proxy but compiles to the\r\n     * memory model of the Implementation contract.\r\n     */\r\n    function initialize() public {\r\n        require(!initialized, 'already initialized');\r\n        owner = msg.sender;\r\n        proposedOwner = address(0);\r\n        assetProtectionRole = address(0);\r\n        totalSupply_ = 0;\r\n        supplyController = msg.sender;\r\n        feeRate = 0;\r\n        feeController = msg.sender;\r\n        feeRecipient = msg.sender;\r\n        initializeDomainSeparator();\r\n        initialized = true;\r\n    }\r\n\r\n    /**\r\n     * The constructor is used here to ensure that the implementation\r\n     * contract is initialized. An uncontrolled implementation\r\n     * contract might lead to misleading state\r\n     * for users who accidentally interact with it.\r\n     */\r\n    constructor() public {\r\n        initialize();\r\n        pause();\r\n    }\r\n\r\n    /**\r\n     * @dev To be called when upgrading the contract using upgradeAndCall to add delegated transfers\r\n     */\r\n    function initializeDomainSeparator() public {\r\n        // hash the name context with the contract address\r\n        EIP712_DOMAIN_HASH = keccak256(\r\n            abi.encodePacked( // solium-disable-line\r\n                EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH,\r\n                keccak256(bytes(name)),\r\n                bytes32(address(this))\r\n            )\r\n        );\r\n    }\r\n\r\n    // ERC20 BASIC FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Total number of tokens in existence\r\n     */\r\n    function totalSupply() public view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer token to a specified address from msg.sender\r\n     * Transfer additionally sends the fee to the fee controller\r\n     * Note: the use of Safemath ensures that _value is nonnegative.\r\n     * @param _to The address to transfer to.\r\n     * @param _value The amount to be transferred.\r\n     */\r\n    function transfer(address _to, uint256 _value)\r\n        public\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        require(_to != address(0), 'cannot transfer to address zero');\r\n        require(!frozen[_to] && !frozen[msg.sender], 'address frozen');\r\n        require(_value <= balances[msg.sender], 'insufficient funds');\r\n\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the balance of the specified address.\r\n     * @param _addr The address to query the the balance of.\r\n     * @return An uint256 representing the amount owned by the passed address.\r\n     */\r\n    function balanceOf(address _addr) public view returns (uint256) {\r\n        return balances[_addr];\r\n    }\r\n\r\n    // ERC20 FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Transfer tokens from one address to another\r\n     * @param _from address The address which you want to send tokens from\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amount of tokens to be transferred\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public whenNotPaused returns (bool) {\r\n        require(_to != address(0), 'cannot transfer to address zero');\r\n        require(\r\n            !frozen[_to] && !frozen[_from] && !frozen[msg.sender],\r\n            'address frozen'\r\n        );\r\n        require(_value <= balances[_from], 'insufficient funds');\r\n        require(_value <= allowed[_from][msg.sender], 'insufficient allowance');\r\n\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n        _transfer(_from, _to, _value);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\r\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     * @param _spender The address which will spend the funds.\r\n     * @param _value The amount of tokens to be spent.\r\n     */\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        require(!frozen[_spender] && !frozen[msg.sender], 'address frozen');\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\r\n     * @param _owner address The address which owns the funds.\r\n     * @param _spender address The address which will spend the funds.\r\n     * @return A uint256 specifying the amount of tokens still available for the spender.\r\n     */\r\n    function allowance(address _owner, address _spender)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function _transfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) internal returns (uint256) {\r\n        uint256 _fee = getFeeFor(_value);\r\n        uint256 _principle = _value.sub(_fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(_principle);\r\n        emit Transfer(_from, _to, _principle);\r\n        emit Transfer(_from, feeRecipient, _fee);\r\n        if (_fee > 0) {\r\n            balances[feeRecipient] = balances[feeRecipient].add(_fee);\r\n            emit FeeCollected(_from, feeRecipient, _fee);\r\n        }\r\n\r\n        return _principle;\r\n    }\r\n\r\n    // OWNER FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, 'onlyOwner');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner to begin transferring control of the contract to a proposedOwner\r\n     * @param _proposedOwner The address to transfer ownership to.\r\n     */\r\n    function proposeOwner(address _proposedOwner) public onlyOwner {\r\n        require(\r\n            _proposedOwner != address(0),\r\n            'cannot transfer ownership to address zero'\r\n        );\r\n        require(msg.sender != _proposedOwner, 'caller already is owner');\r\n        proposedOwner = _proposedOwner;\r\n        emit OwnershipTransferProposed(owner, proposedOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the current owner or proposed owner to cancel transferring control of the contract to a proposedOwner\r\n     */\r\n    function disregardProposeOwner() public {\r\n        require(\r\n            msg.sender == proposedOwner || msg.sender == owner,\r\n            'only proposedOwner or owner'\r\n        );\r\n        require(\r\n            proposedOwner != address(0),\r\n            'can only disregard a proposed owner that was previously set'\r\n        );\r\n        address _oldProposedOwner = proposedOwner;\r\n        proposedOwner = address(0);\r\n        emit OwnershipTransferDisregarded(_oldProposedOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the proposed owner to complete transferring control of the contract to the proposedOwner.\r\n     */\r\n    function claimOwnership() public {\r\n        require(msg.sender == proposedOwner, 'onlyProposedOwner');\r\n        address _oldOwner = owner;\r\n        owner = proposedOwner;\r\n        proposedOwner = address(0);\r\n        emit OwnershipTransferred(_oldOwner, owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Reclaim all PAXG at the contract address.\r\n     * This sends the PAXG tokens that this contract add holding to the owner.\r\n     * Note: this is not affected by freeze constraints.\r\n     */\r\n    function reclaimPAXG() external onlyOwner {\r\n        uint256 _balance = balances[this];\r\n        balances[this] = 0;\r\n        balances[owner] = balances[owner].add(_balance);\r\n        emit Transfer(this, owner, _balance);\r\n    }\r\n\r\n    // PAUSABILITY FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused, 'whenNotPaused');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev called by the owner to pause, triggers stopped state\r\n     */\r\n    function pause() public onlyOwner {\r\n        require(!paused, 'already paused');\r\n        paused = true;\r\n        emit Pause();\r\n    }\r\n\r\n    /**\r\n     * @dev called by the owner to unpause, returns to normal state\r\n     */\r\n    function unpause() public onlyOwner {\r\n        require(paused, 'already unpaused');\r\n        paused = false;\r\n        emit Unpause();\r\n    }\r\n\r\n    // ASSET PROTECTION FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Sets a new asset protection role address.\r\n     * @param _newAssetProtectionRole The new address allowed to freeze/unfreeze addresses and seize their tokens.\r\n     */\r\n    function setAssetProtectionRole(address _newAssetProtectionRole) public {\r\n        require(\r\n            msg.sender == assetProtectionRole || msg.sender == owner,\r\n            'only assetProtectionRole or Owner'\r\n        );\r\n        emit AssetProtectionRoleSet(\r\n            assetProtectionRole,\r\n            _newAssetProtectionRole\r\n        );\r\n        assetProtectionRole = _newAssetProtectionRole;\r\n    }\r\n\r\n    modifier onlyAssetProtectionRole() {\r\n        require(msg.sender == assetProtectionRole, 'onlyAssetProtectionRole');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Freezes an address balance from being transferred.\r\n     * @param _addr The new address to freeze.\r\n     */\r\n    function freeze(address _addr) public onlyAssetProtectionRole {\r\n        require(!frozen[_addr], 'address already frozen');\r\n        frozen[_addr] = true;\r\n        emit AddressFrozen(_addr);\r\n    }\r\n\r\n    /**\r\n     * @dev Unfreezes an address balance allowing transfer.\r\n     * @param _addr The new address to unfreeze.\r\n     */\r\n    function unfreeze(address _addr) public onlyAssetProtectionRole {\r\n        require(frozen[_addr], 'address already unfrozen');\r\n        frozen[_addr] = false;\r\n        emit AddressUnfrozen(_addr);\r\n    }\r\n\r\n    /**\r\n     * @dev Wipes the balance of a frozen address, burning the tokens\r\n     * and setting the approval to zero.\r\n     * @param _addr The new frozen address to wipe.\r\n     */\r\n    function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\r\n        require(frozen[_addr], 'address is not frozen');\r\n        uint256 _balance = balances[_addr];\r\n        balances[_addr] = 0;\r\n        totalSupply_ = totalSupply_.sub(_balance);\r\n        emit FrozenAddressWiped(_addr);\r\n        emit SupplyDecreased(_addr, _balance);\r\n        emit Transfer(_addr, address(0), _balance);\r\n    }\r\n\r\n    /**\r\n     * @dev Gets whether the address is currently frozen.\r\n     * @param _addr The address to check if frozen.\r\n     * @return A bool representing whether the given address is frozen.\r\n     */\r\n    function isFrozen(address _addr) public view returns (bool) {\r\n        return frozen[_addr];\r\n    }\r\n\r\n    // SUPPLY CONTROL FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Sets a new supply controller address.\r\n     * @param _newSupplyController The address allowed to burn/mint tokens to control supply.\r\n     */\r\n    function setSupplyController(address _newSupplyController) public {\r\n        require(\r\n            msg.sender == supplyController || msg.sender == owner,\r\n            'only SupplyController or Owner'\r\n        );\r\n        require(\r\n            _newSupplyController != address(0),\r\n            'cannot set supply controller to address zero'\r\n        );\r\n        emit SupplyControllerSet(supplyController, _newSupplyController);\r\n        supplyController = _newSupplyController;\r\n    }\r\n\r\n    modifier onlySupplyController() {\r\n        require(msg.sender == supplyController, 'onlySupplyController');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Increases the total supply by minting the specified number of tokens to the supply controller account.\r\n     * @param _value The number of tokens to add.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function increaseSupply(uint256 _value)\r\n        public\r\n        onlySupplyController\r\n        returns (bool success)\r\n    {\r\n        totalSupply_ = totalSupply_.add(_value);\r\n        balances[supplyController] = balances[supplyController].add(_value);\r\n        emit SupplyIncreased(supplyController, _value);\r\n        emit Transfer(address(0), supplyController, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Decreases the total supply by burning the specified number of tokens from the supply controller account.\r\n     * @param _value The number of tokens to remove.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function decreaseSupply(uint256 _value)\r\n        public\r\n        onlySupplyController\r\n        returns (bool success)\r\n    {\r\n        require(_value <= balances[supplyController], 'not enough supply');\r\n        balances[supplyController] = balances[supplyController].sub(_value);\r\n        totalSupply_ = totalSupply_.sub(_value);\r\n        emit SupplyDecreased(supplyController, _value);\r\n        emit Transfer(supplyController, address(0), _value);\r\n        return true;\r\n    }\r\n\r\n    // DELEGATED TRANSFER FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev returns the next seq for a target address.\r\n     * The transactor must submit nextSeqOf(transactor) in the next transaction for it to be valid.\r\n     * Note: that the seq context is specific to this smart contract.\r\n     * @param target The target address.\r\n     * @return the seq.\r\n     */\r\n    //\r\n    function nextSeqOf(address target) public view returns (uint256) {\r\n        return nextSeqs[target];\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a transfer on behalf of the from address, identified by its signature on the delegatedTransfer msg.\r\n     * Splits a signature byte array into r,s,v for convenience.\r\n     * @param sig the signature of the delgatedTransfer msg.\r\n     * @param to The address to transfer to.\r\n     * @param value The amount to be transferred.\r\n     * @param serviceFee an optional ERC20 service fee paid to the executor of betaDelegatedTransfer by the from address.\r\n     * @param seq a sequencing number included by the from address specific to this contract to protect from replays.\r\n     * @param deadline a block number after which the pre-signed transaction has expired.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function betaDelegatedTransfer(\r\n        bytes sig,\r\n        address to,\r\n        uint256 value,\r\n        uint256 serviceFee,\r\n        uint256 seq,\r\n        uint256 deadline\r\n    ) public returns (bool) {\r\n        require(sig.length == 65, 'signature should have length 65');\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n        assembly {\r\n            r := mload(add(sig, 32))\r\n            s := mload(add(sig, 64))\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n        require(\r\n            _betaDelegatedTransfer(\r\n                r,\r\n                s,\r\n                v,\r\n                to,\r\n                value,\r\n                serviceFee,\r\n                seq,\r\n                deadline\r\n            ),\r\n            'failed transfer'\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a transfer on behalf of the from address, identified by its signature on the betaDelegatedTransfer msg.\r\n     * Note: both the delegate and transactor sign in the service fees. The transactor, however,\r\n     * has no control over the gas price, and therefore no control over the transaction time.\r\n     * Beta prefix chosen to avoid a name clash with an emerging standard in ERC865 or elsewhere.\r\n     * Internal to the contract - see betaDelegatedTransfer and betaDelegatedTransferBatch.\r\n     * @param r the r signature of the delgatedTransfer msg.\r\n     * @param s the s signature of the delgatedTransfer msg.\r\n     * @param v the v signature of the delgatedTransfer msg.\r\n     * @param to The address to transfer to.\r\n     * @param value The amount to be transferred.\r\n     * @param serviceFee an optional ERC20 service fee paid to the delegate of betaDelegatedTransfer by the from address.\r\n     * @param seq a sequencing number included by the from address specific to this contract to protect from replays.\r\n     * @param deadline a block number after which the pre-signed transaction has expired.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function _betaDelegatedTransfer(\r\n        bytes32 r,\r\n        bytes32 s,\r\n        uint8 v,\r\n        address to,\r\n        uint256 value,\r\n        uint256 serviceFee,\r\n        uint256 seq,\r\n        uint256 deadline\r\n    ) internal whenNotPaused returns (bool) {\r\n        require(\r\n            betaDelegateWhitelist[msg.sender],\r\n            'Beta feature only accepts whitelisted delegates'\r\n        );\r\n        require(\r\n            value > 0 || serviceFee > 0,\r\n            'cannot transfer zero tokens with zero service fee'\r\n        );\r\n        require(block.number <= deadline, 'transaction expired');\r\n        // prevent sig malleability from ecrecover()\r\n        require(\r\n            uint256(s) <=\r\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\r\n            'signature incorrect'\r\n        );\r\n        require(v == 27 || v == 28, 'signature incorrect');\r\n\r\n        // EIP712 scheme: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md\r\n        bytes32 hash = keccak256(\r\n            abi.encodePacked(\r\n                EIP191_HEADER,\r\n                EIP712_DOMAIN_HASH,\r\n                keccak256(\r\n                    abi.encodePacked( // solium-disable-line\r\n                        EIP712_DELEGATED_TRANSFER_SCHEMA_HASH,\r\n                        bytes32(to),\r\n                        value,\r\n                        serviceFee,\r\n                        seq,\r\n                        deadline\r\n                    )\r\n                )\r\n            )\r\n        );\r\n        address _from = ecrecover(hash, v, r, s);\r\n\r\n        require(\r\n            _from != address(0),\r\n            'error determining from address from signature'\r\n        );\r\n        require(to != address(0), 'cannot use address zero');\r\n        require(\r\n            !frozen[to] && !frozen[_from] && !frozen[msg.sender],\r\n            'address frozen'\r\n        );\r\n        require(\r\n            value.add(serviceFee) <= balances[_from],\r\n            'insufficient funds or bad signature'\r\n        );\r\n        require(nextSeqs[_from] == seq, 'incorrect seq');\r\n\r\n        nextSeqs[_from] = nextSeqs[_from].add(1);\r\n\r\n        uint256 _principle = _transfer(_from, to, value);\r\n\r\n        if (serviceFee != 0) {\r\n            balances[_from] = balances[_from].sub(serviceFee);\r\n            balances[msg.sender] = balances[msg.sender].add(serviceFee);\r\n            emit Transfer(_from, msg.sender, serviceFee);\r\n        }\r\n\r\n        emit BetaDelegatedTransfer(_from, to, _principle, seq, serviceFee);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs an atomic batch of transfers on behalf of the from addresses, identified by their signatures.\r\n     * Lack of nested array support in arguments requires all arguments to be passed as equal size arrays where\r\n     * delegated transfer number i is the combination of all arguments at index i\r\n     * @param r the r signatures of the delgatedTransfer msg.\r\n     * @param s the s signatures of the delgatedTransfer msg.\r\n     * @param v the v signatures of the delgatedTransfer msg.\r\n     * @param to The addresses to transfer to.\r\n     * @param value The amounts to be transferred.\r\n     * @param serviceFee optional ERC20 service fees paid to the delegate of betaDelegatedTransfer by the from address.\r\n     * @param seq sequencing numbers included by the from address specific to this contract to protect from replays.\r\n     * @param deadline block numbers after which the pre-signed transactions have expired.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function betaDelegatedTransferBatch(\r\n        bytes32[] r,\r\n        bytes32[] s,\r\n        uint8[] v,\r\n        address[] to,\r\n        uint256[] value,\r\n        uint256[] serviceFee,\r\n        uint256[] seq,\r\n        uint256[] deadline\r\n    ) public returns (bool) {\r\n        require(\r\n            r.length == s.length &&\r\n                r.length == v.length &&\r\n                r.length == to.length &&\r\n                r.length == value.length,\r\n            'length mismatch'\r\n        );\r\n        require(\r\n            r.length == serviceFee.length &&\r\n                r.length == seq.length &&\r\n                r.length == deadline.length,\r\n            'length mismatch'\r\n        );\r\n\r\n        for (uint256 i = 0; i < r.length; i++) {\r\n            require(\r\n                _betaDelegatedTransfer(\r\n                    r[i],\r\n                    s[i],\r\n                    v[i],\r\n                    to[i],\r\n                    value[i],\r\n                    serviceFee[i],\r\n                    seq[i],\r\n                    deadline[i]\r\n                ),\r\n                'failed transfer'\r\n            );\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Gets whether the address is currently whitelisted for betaDelegateTransfer.\r\n     * @param _addr The address to check if whitelisted.\r\n     * @return A bool representing whether the given address is whitelisted.\r\n     */\r\n    function isWhitelistedBetaDelegate(address _addr)\r\n        public\r\n        view\r\n        returns (bool)\r\n    {\r\n        return betaDelegateWhitelist[_addr];\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new betaDelegate whitelister.\r\n     * @param _newWhitelister The address allowed to whitelist betaDelegates.\r\n     */\r\n    function setBetaDelegateWhitelister(address _newWhitelister) public {\r\n        require(\r\n            msg.sender == betaDelegateWhitelister || msg.sender == owner,\r\n            'only Whitelister or Owner'\r\n        );\r\n        betaDelegateWhitelister = _newWhitelister;\r\n        emit BetaDelegateWhitelisterSet(\r\n            betaDelegateWhitelister,\r\n            _newWhitelister\r\n        );\r\n    }\r\n\r\n    modifier onlyBetaDelegateWhitelister() {\r\n        require(\r\n            msg.sender == betaDelegateWhitelister,\r\n            'onlyBetaDelegateWhitelister'\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Whitelists an address to allow calling BetaDelegatedTransfer.\r\n     * @param _addr The new address to whitelist.\r\n     */\r\n    function whitelistBetaDelegate(address _addr)\r\n        public\r\n        onlyBetaDelegateWhitelister\r\n    {\r\n        require(!betaDelegateWhitelist[_addr], 'delegate already whitelisted');\r\n        betaDelegateWhitelist[_addr] = true;\r\n        emit BetaDelegateWhitelisted(_addr);\r\n    }\r\n\r\n    /**\r\n     * @dev Unwhitelists an address to disallow calling BetaDelegatedTransfer.\r\n     * @param _addr The new address to whitelist.\r\n     */\r\n    function unwhitelistBetaDelegate(address _addr)\r\n        public\r\n        onlyBetaDelegateWhitelister\r\n    {\r\n        require(betaDelegateWhitelist[_addr], 'delegate not whitelisted');\r\n        betaDelegateWhitelist[_addr] = false;\r\n        emit BetaDelegateUnwhitelisted(_addr);\r\n    }\r\n\r\n    // FEE CONTROLLER FUNCTIONALITY\r\n\r\n    /**\r\n     * @dev Sets a new fee controller address.\r\n     * @param _newFeeController The address allowed to set the fee rate and the fee recipient.\r\n     */\r\n    function setFeeController(address _newFeeController) public {\r\n        require(\r\n            msg.sender == feeController || msg.sender == owner,\r\n            'only FeeController or Owner'\r\n        );\r\n        require(\r\n            _newFeeController != address(0),\r\n            'cannot set fee controller to address zero'\r\n        );\r\n        address _oldFeeController = feeController;\r\n        feeController = _newFeeController;\r\n        emit FeeControllerSet(_oldFeeController, feeController);\r\n    }\r\n\r\n    modifier onlyFeeController() {\r\n        require(msg.sender == feeController, 'only FeeController');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new fee recipient address.\r\n     * @param _newFeeRecipient The address allowed to collect transfer fees for transfers.\r\n     */\r\n    function setFeeRecipient(address _newFeeRecipient)\r\n        public\r\n        onlyFeeController\r\n    {\r\n        require(\r\n            _newFeeRecipient != address(0),\r\n            'cannot set fee recipient to address zero'\r\n        );\r\n        address _oldFeeRecipient = feeRecipient;\r\n        feeRecipient = _newFeeRecipient;\r\n        emit FeeRecipientSet(_oldFeeRecipient, feeRecipient);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new fee rate.\r\n     * @param _newFeeRate The new fee rate to collect as transfer fees for transfers.\r\n     */\r\n    function setFeeRate(uint256 _newFeeRate) public onlyFeeController {\r\n        require(_newFeeRate <= feeParts, 'cannot set fee rate above 100%');\r\n        uint256 _oldFeeRate = feeRate;\r\n        feeRate = _newFeeRate;\r\n        emit FeeRateSet(_oldFeeRate, feeRate);\r\n    }\r\n\r\n    /**\r\n     * @dev Gets a fee for a given value\r\n     * ex: given feeRate = 200 and feeParts = 1,000,000 then getFeeFor(10000) = 2\r\n     * @param _value The amount to get the fee for.\r\n     */\r\n    function getFeeFor(uint256 _value) public view returns (uint256) {\r\n        if (feeRate == 0) {\r\n            return 0;\r\n        }\r\n\r\n        return _value.mul(feeRate).div(feeParts);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens/PAXG/PAXGImplementation.sol": {
				"PAXGImplementation": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "disregardProposeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "reclaimPAXG",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "assetProtectionRole",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "getFeeFor",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "r",
									"type": "bytes32[]"
								},
								{
									"name": "s",
									"type": "bytes32[]"
								},
								{
									"name": "v",
									"type": "uint8[]"
								},
								{
									"name": "to",
									"type": "address[]"
								},
								{
									"name": "value",
									"type": "uint256[]"
								},
								{
									"name": "serviceFee",
									"type": "uint256[]"
								},
								{
									"name": "seq",
									"type": "uint256[]"
								},
								{
									"name": "deadline",
									"type": "uint256[]"
								}
							],
							"name": "betaDelegatedTransferBatch",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sig",
									"type": "bytes"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								},
								{
									"name": "serviceFee",
									"type": "uint256"
								},
								{
									"name": "seq",
									"type": "uint256"
								},
								{
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "betaDelegatedTransfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "initializeDomainSeparator",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newFeeController",
									"type": "address"
								}
							],
							"name": "setFeeController",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newFeeRate",
									"type": "uint256"
								}
							],
							"name": "setFeeRate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "unfreeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "claimOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newSupplyController",
									"type": "address"
								}
							],
							"name": "setSupplyController",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeParts",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeController",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "target",
									"type": "address"
								}
							],
							"name": "nextSeqOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newAssetProtectionRole",
									"type": "address"
								}
							],
							"name": "setAssetProtectionRole",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "freeze",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newWhitelister",
									"type": "address"
								}
							],
							"name": "setBetaDelegateWhitelister",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "decreaseSupply",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isWhitelistedBetaDelegate",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "whitelistBetaDelegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_proposedOwner",
									"type": "address"
								}
							],
							"name": "proposeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "increaseSupply",
							"outputs": [
								{
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "betaDelegateWhitelister",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeDecimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "proposedOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "unwhitelistBetaDelegate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "wipeFrozenAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "EIP712_DOMAIN_HASH",
							"outputs": [
								{
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "isFrozen",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newFeeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "supplyController",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "currentOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "proposedOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferProposed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldProposedOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferDisregarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "addr",
									"type": "address"
								}
							],
							"name": "AddressFrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "addr",
									"type": "address"
								}
							],
							"name": "AddressUnfrozen",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "addr",
									"type": "address"
								}
							],
							"name": "FrozenAddressWiped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldAssetProtectionRole",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newAssetProtectionRole",
									"type": "address"
								}
							],
							"name": "AssetProtectionRoleSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SupplyIncreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SupplyDecreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldSupplyController",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newSupplyController",
									"type": "address"
								}
							],
							"name": "SupplyControllerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "seq",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "serviceFee",
									"type": "uint256"
								}
							],
							"name": "BetaDelegatedTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldWhitelister",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newWhitelister",
									"type": "address"
								}
							],
							"name": "BetaDelegateWhitelisterSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "newDelegate",
									"type": "address"
								}
							],
							"name": "BetaDelegateWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldDelegate",
									"type": "address"
								}
							],
							"name": "BetaDelegateUnwhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "FeeCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldFeeRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"name": "newFeeRate",
									"type": "uint256"
								}
							],
							"name": "FeeRateSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldFeeController",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newFeeController",
									"type": "address"
								}
							],
							"name": "FeeControllerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "oldFeeRecipient",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newFeeRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientSet",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint256 specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_addr": "The address to query the the balance of.\r"
								},
								"return": "An uint256 representing the amount owned by the passed address.\r"
							},
							"betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256)": {
								"details": "Performs a transfer on behalf of the from address, identified by its signature on the delegatedTransfer msg.\r Splits a signature byte array into r,s,v for convenience.\r",
								"params": {
									"deadline": "a block number after which the pre-signed transaction has expired.\r",
									"seq": "a sequencing number included by the from address specific to this contract to protect from replays.\r",
									"serviceFee": "an optional ERC20 service fee paid to the executor of betaDelegatedTransfer by the from address.\r",
									"sig": "the signature of the delgatedTransfer msg.\r",
									"to": "The address to transfer to.\r",
									"value": "The amount to be transferred.\r"
								},
								"return": "A boolean that indicates if the operation was successful.\r"
							},
							"betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[])": {
								"details": "Performs an atomic batch of transfers on behalf of the from addresses, identified by their signatures.\r Lack of nested array support in arguments requires all arguments to be passed as equal size arrays where\r delegated transfer number i is the combination of all arguments at index i\r",
								"params": {
									"deadline": "block numbers after which the pre-signed transactions have expired.\r",
									"r": "the r signatures of the delgatedTransfer msg.\r",
									"s": "the s signatures of the delgatedTransfer msg.\r",
									"seq": "sequencing numbers included by the from address specific to this contract to protect from replays.\r",
									"serviceFee": "optional ERC20 service fees paid to the delegate of betaDelegatedTransfer by the from address.\r",
									"to": "The addresses to transfer to.\r",
									"v": "the v signatures of the delgatedTransfer msg.\r",
									"value": "The amounts to be transferred.\r"
								},
								"return": "A boolean that indicates if the operation was successful.\r"
							},
							"claimOwnership()": {
								"details": "Allows the proposed owner to complete transferring control of the contract to the proposedOwner.\r"
							},
							"decreaseSupply(uint256)": {
								"details": "Decreases the total supply by burning the specified number of tokens from the supply controller account.\r",
								"params": {
									"_value": "The number of tokens to remove.\r"
								},
								"return": "A boolean that indicates if the operation was successful.\r"
							},
							"disregardProposeOwner()": {
								"details": "Allows the current owner or proposed owner to cancel transferring control of the contract to a proposedOwner\r"
							},
							"freeze(address)": {
								"details": "Freezes an address balance from being transferred.\r",
								"params": {
									"_addr": "The new address to freeze.\r"
								}
							},
							"getFeeFor(uint256)": {
								"details": "Gets a fee for a given value\r ex: given feeRate = 200 and feeParts = 1,000,000 then getFeeFor(10000) = 2\r",
								"params": {
									"_value": "The amount to get the fee for.\r"
								}
							},
							"increaseSupply(uint256)": {
								"details": "Increases the total supply by minting the specified number of tokens to the supply controller account.\r",
								"params": {
									"_value": "The number of tokens to add.\r"
								},
								"return": "A boolean that indicates if the operation was successful.\r"
							},
							"initialize()": {
								"details": "sets 0 initial tokens, the owner, the supplyController,\r the fee controller and fee recipient.\r this serves as the constructor for the proxy but compiles to the\r memory model of the Implementation contract.\r"
							},
							"initializeDomainSeparator()": {
								"details": "To be called when upgrading the contract using upgradeAndCall to add delegated transfers\r"
							},
							"isFrozen(address)": {
								"details": "Gets whether the address is currently frozen.\r",
								"params": {
									"_addr": "The address to check if frozen.\r"
								},
								"return": "A bool representing whether the given address is frozen.\r"
							},
							"isWhitelistedBetaDelegate(address)": {
								"details": "Gets whether the address is currently whitelisted for betaDelegateTransfer.\r",
								"params": {
									"_addr": "The address to check if whitelisted.\r"
								},
								"return": "A bool representing whether the given address is whitelisted.\r"
							},
							"nextSeqOf(address)": {
								"details": "returns the next seq for a target address.\r The transactor must submit nextSeqOf(transactor) in the next transaction for it to be valid.\r Note: that the seq context is specific to this smart contract.\r",
								"params": {
									"target": "The target address.\r"
								},
								"return": "the seq.\r"
							},
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"proposeOwner(address)": {
								"details": "Allows the current owner to begin transferring control of the contract to a proposedOwner\r",
								"params": {
									"_proposedOwner": "The address to transfer ownership to.\r"
								}
							},
							"reclaimPAXG()": {
								"details": "Reclaim all PAXG at the contract address.\r This sends the PAXG tokens that this contract add holding to the owner.\r Note: this is not affected by freeze constraints.\r"
							},
							"setAssetProtectionRole(address)": {
								"details": "Sets a new asset protection role address.\r",
								"params": {
									"_newAssetProtectionRole": "The new address allowed to freeze/unfreeze addresses and seize their tokens.\r"
								}
							},
							"setBetaDelegateWhitelister(address)": {
								"details": "Sets a new betaDelegate whitelister.\r",
								"params": {
									"_newWhitelister": "The address allowed to whitelist betaDelegates.\r"
								}
							},
							"setFeeController(address)": {
								"details": "Sets a new fee controller address.\r",
								"params": {
									"_newFeeController": "The address allowed to set the fee rate and the fee recipient.\r"
								}
							},
							"setFeeRate(uint256)": {
								"details": "Sets a new fee rate.\r",
								"params": {
									"_newFeeRate": "The new fee rate to collect as transfer fees for transfers.\r"
								}
							},
							"setFeeRecipient(address)": {
								"details": "Sets a new fee recipient address.\r",
								"params": {
									"_newFeeRecipient": "The address allowed to collect transfer fees for transfers.\r"
								}
							},
							"setSupplyController(address)": {
								"details": "Sets a new supply controller address.\r",
								"params": {
									"_newSupplyController": "The address allowed to burn/mint tokens to control supply.\r"
								}
							},
							"totalSupply()": {
								"details": "Total number of tokens in existence\r"
							},
							"transfer(address,uint256)": {
								"details": "Transfer token to a specified address from msg.sender\r Transfer additionally sends the fee to the fee controller\r Note: the use of Safemath ensures that _value is nonnegative.\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint256 the amount of tokens to be transferred\r"
								}
							},
							"unfreeze(address)": {
								"details": "Unfreezes an address balance allowing transfer.\r",
								"params": {
									"_addr": "The new address to unfreeze.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							},
							"unwhitelistBetaDelegate(address)": {
								"details": "Unwhitelists an address to disallow calling BetaDelegatedTransfer.\r",
								"params": {
									"_addr": "The new address to whitelist.\r"
								}
							},
							"whitelistBetaDelegate(address)": {
								"details": "Whitelists an address to allow calling BetaDelegatedTransfer.\r",
								"params": {
									"_addr": "The new address to whitelist.\r"
								}
							},
							"wipeFrozenAddress(address)": {
								"details": "Wipes the balance of a frozen address, burning the tokens\r and setting the approval to zero.\r",
								"params": {
									"_addr": "The new frozen address to wipe.\r"
								}
							}
						},
						"title": "PAXGImplementation\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2470:32752  contract PAXGImplementation {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2661:2666  false */\n  0x0\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2634:2666  bool private initialized = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3215:3241  bool public paused = false */\n  0x5\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7973:8043  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8005:8017  initialize() */\n  tag_4\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8005:8015  initialize */\n  0x100000000\n  tag_5\n  dup2\n  mul\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8005:8017  initialize() */\n  div\n  jump\t// in\ntag_4:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8028:8035  pause() */\n  tag_6\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8028:8033  pause */\n  0x100000000\n  tag_7\n  dup2\n  mul\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8028:8035  pause() */\n  div\n  jump\t// in\ntag_6:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2470:32752  contract PAXGImplementation {\r... */\n  jump(tag_8)\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7281:7711  function initialize() public {\r... */\ntag_5:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7330:7341  initialized */\n  and(0xff, sload(0x0))\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7329:7341  !initialized */\n  iszero\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7321:7365  require(!initialized, 'already initialized') */\n  tag_10\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0x13\n  0x24\n  dup3\n  add\n  mstore\n  0x616c726561647920696e697469616c697a656400000000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_10:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7376:7381  owner */\n  0x4\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7376:7394  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7384:7394  msg.sender */\n  caller\n  not(sub(exp(0x2, 0xa0), 0x1))\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7376:7394  owner = msg.sender */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7405:7418  proposedOwner */\n  0x5\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7405:7431  proposedOwner = address(0) */\n  dup1\n  sload\n  dup3\n  and\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7442:7461  assetProtectionRole */\n  0x6\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7442:7474  assetProtectionRole = address(0) */\n  dup1\n  sload\n  dup3\n  and\n  swap1\n  sstore\n  0x0\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7485:7497  totalSupply_ */\n  0x2\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7485:7501  totalSupply_ = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7512:7528  supplyController */\n  0x8\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7512:7541  supplyController = msg.sender */\n  dup1\n  sload\n  dup4\n  and\n  dup5\n  or\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7552:7559  feeRate */\n  0xd\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7552:7563  feeRate = 0 */\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7574:7587  feeController */\n  0xe\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7574:7600  feeController = msg.sender */\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7611:7623  feeRecipient */\n  0xf\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7611:7636  feeRecipient = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7647:7674  initializeDomainSeparator() */\n  tag_11\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7647:7672  initializeDomainSeparator */\n  0x100000000\n  tag_12\n  dup2\n  mul\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7647:7674  initializeDomainSeparator() */\n  div\n  jump\t// in\ntag_11:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7685:7696  initialized */\n  0x0\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7685:7703  initialized = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7699:7703  true */\n  0x1\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7685:7703  initialized = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7281:7711  function initialize() public {\r... */\n  jump\t// out\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15505:15639  function pause() public onlyOwner {\r... */\ntag_7:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13074:13079  owner */\n  and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13070  msg.sender */\n  caller\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13079  msg.sender == owner */\n  eq\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13052:13093  require(msg.sender == owner, 'onlyOwner') */\n  tag_14\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0x9\n  0x24\n  dup3\n  add\n  mstore\n  0x6f6e6c794f776e65720000000000000000000000000000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_14:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15559:15565  paused */\n  sload(0x5)\n  0x10000000000000000000000000000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15558:15565  !paused */\n  iszero\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15550:15584  require(!paused, 'already paused') */\n  tag_16\n  jumpi\n  0x40\n  dup1\n  mload\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  0x4\n  dup3\n  add\n  mstore\n  0xe\n  0x24\n  dup3\n  add\n  mstore\n  0x616c726561647920706175736564000000000000000000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_16:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15595:15601  paused */\n  0x5\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15595:15608  paused = true */\n  dup1\n  sload\n  not(mul(0xff, exp(0x2, 0xa0)))\n  and\n  0x10000000000000000000000000000000000000000\n  or\n  swap1\n  sstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15624:15631  Pause() */\n  mload(0x40)\n  0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n  swap1\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15595:15608  paused = true */\n  0x0\n  swap1\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15624:15631  Pause() */\n  log1\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15505:15639  function pause() public onlyOwner {\r... */\n  jump\t// out\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8171:8540  function initializeDomainSeparator() public {\r... */\ntag_12:\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3851:3915  keccak256('EIP712Domain(string name,address verifyingContract)') */\n  0x40\n  dup1\n  mload\n  0x454950373132446f6d61696e28737472696e67206e616d652c61646472657373\n  dup2\n  mstore\n  0x20766572696679696e67436f6e74726163742900000000000000000000000000\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup3\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x33\n  add\n  dup3\n  keccak256\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8459:8463  name */\n  dup3\n  dup5\n  add\n  dup5\n  mstore\n  0xa\n  dup1\n  dup5\n  mstore\n  0x5061786f7320476f6c6400000000000000000000000000000000000000000000\n  swap3\n  dup5\n  add\n  swap3\n  dup4\n  mstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n  swap4\n  mload\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3851:3915  keccak256('EIP712Domain(string name,address verifyingContract)') */\n  swap1\n  swap4\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8459:8463  name */\n  dup1\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n  dup4\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8459:8463  name */\n  dup4\n    /* \"--CODEGEN--\":36:189   */\ntag_18:\n    /* \"--CODEGEN--\":66:68   */\n  0x20\n    /* \"--CODEGEN--\":58:69   */\n  dup4\n  lt\n    /* \"--CODEGEN--\":36:189   */\n  tag_19\n  jumpi\n    /* \"--CODEGEN--\":176:186   */\n  dup1\n  mload\n    /* \"--CODEGEN--\":164:187   */\n  dup3\n  mstore\n  not(0x1f)\n    /* \"--CODEGEN--\":139:151   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"--CODEGEN--\":98:100   */\n  0x20\n    /* \"--CODEGEN--\":89:101   */\n  swap2\n  dup3\n  add\n  swap2\n    /* \"--CODEGEN--\":114:126   */\n  add\n    /* \"--CODEGEN--\":36:189   */\n  jump(tag_18)\ntag_19:\n    /* \"--CODEGEN--\":299:309   */\n  mload\n    /* \"--CODEGEN--\":344:354   */\n  dup2\n  mload\n    /* \"--CODEGEN--\":263:265   */\n  0x20\n    /* \"--CODEGEN--\":259:271   */\n  swap4\n  dup5\n  sub\n    /* \"--CODEGEN--\":254:257   */\n  0x100\n    /* \"--CODEGEN--\":250:272   */\n  exp\n  not(0x0)\n    /* \"--CODEGEN--\":246:276   */\n  add\n    /* \"--CODEGEN--\":311:320   */\n  dup1\n  not\n    /* \"--CODEGEN--\":295:321   */\n  swap1\n  swap3\n  and\n    /* \"--CODEGEN--\":340:361   */\n  swap2\n  and\n    /* \"--CODEGEN--\":377:397   */\n  or\n    /* \"--CODEGEN--\":365:398   */\n  swap1\n  mstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n  0x40\n  dup1\n  mload\n  swap3\n  swap1\n  swap5\n  add\n  dup3\n  swap1\n  sub\n  dup3\n  keccak256\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n  dup3\n  dup3\n  add\n  swap8\n  swap1\n  swap8\n  mstore\n  dup2\n  dup5\n  add\n  swap7\n  swap1\n  swap7\n  mstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8500:8504  this */\n  address\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n  0x60\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup4\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup4\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n  0x80\n  swap1\n  swap2\n  add\n  swap3\n  dup4\n  swap1\n  mstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n  dup1\n  mload\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n  swap1\n  swap6\n  swap3\n  swap5\n  pop\n  dup5\n  swap4\n  pop\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n  swap2\n  dup6\n  add\n  swap2\n  swap1\n  pop\n  dup1\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n  dup4\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n  dup4\n    /* \"--CODEGEN--\":36:189   */\ntag_21:\n    /* \"--CODEGEN--\":66:68   */\n  0x20\n    /* \"--CODEGEN--\":58:69   */\n  dup4\n  lt\n    /* \"--CODEGEN--\":36:189   */\n  tag_22\n  jumpi\n    /* \"--CODEGEN--\":176:186   */\n  dup1\n  mload\n    /* \"--CODEGEN--\":164:187   */\n  dup3\n  mstore\n  not(0x1f)\n    /* \"--CODEGEN--\":139:151   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"--CODEGEN--\":98:100   */\n  0x20\n    /* \"--CODEGEN--\":89:101   */\n  swap2\n  dup3\n  add\n  swap2\n    /* \"--CODEGEN--\":114:126   */\n  add\n    /* \"--CODEGEN--\":36:189   */\n  jump(tag_21)\ntag_22:\n    /* \"--CODEGEN--\":299:309   */\n  mload\n    /* \"--CODEGEN--\":344:354   */\n  dup2\n  mload\n    /* \"--CODEGEN--\":263:265   */\n  0x20\n    /* \"--CODEGEN--\":259:271   */\n  swap4\n  swap1\n  swap4\n  sub\n    /* \"--CODEGEN--\":254:257   */\n  0x100\n    /* \"--CODEGEN--\":250:272   */\n  exp\n  not(0x0)\n    /* \"--CODEGEN--\":246:276   */\n  add\n    /* \"--CODEGEN--\":311:320   */\n  dup1\n  not\n    /* \"--CODEGEN--\":295:321   */\n  swap1\n  swap2\n  and\n    /* \"--CODEGEN--\":340:361   */\n  swap3\n  and\n    /* \"--CODEGEN--\":377:397   */\n  swap2\n  swap1\n  swap2\n  or\n    /* \"--CODEGEN--\":365:398   */\n  swap1\n  mstore\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n  mload(0x40)\n  swap3\n  add\n  dup3\n  swap1\n  sub\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8286:8304  EIP712_DOMAIN_HASH */\n  0xc\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8286:8532  EIP712_DOMAIN_HASH = keccak256(\r... */\n  sstore\n  pop\n  pop\n  pop\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8171:8540  function initializeDomainSeparator() public {\r... */\n  jump\t// out\n    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2470:32752  contract PAXGImplementation {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2470:32752  contract PAXGImplementation {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x3acb448\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8abdeba\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa91b601\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xabe469a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1b670561\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x21ab11f7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2ff79161\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3ed4c678\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x45596e2e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x45c8b1a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x4e71e0c8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x52875bc3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x57526b3f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x6999b377\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x89f72c21\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8ceed9cb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8d1fdf2f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x978bbdb9\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x97d60d56\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x98e52f9a\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xa7d87ed0\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xac69275c\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xb5ed298a\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xb921e163\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xc4f62fee\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xcc0f1786\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xd153b60c\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xd990c618\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xe2f72f03\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xe306f779\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xe5839836\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xe7ba1012\n      eq\n      tag_49\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13838:14323  function disregardProposeOwner() public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13838:14323  function disregardProposeOwner() public {\r... */\n      pop\n      tag_51\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2788:2830  string public constant name = 'Paxos Gold' */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_53:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2788:2830  string public constant name = 'Paxos Gold' */\n      pop\n      tag_54\n      jump(tag_55)\n    tag_54:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_56:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_56)\n    tag_57:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2788:2830  string public constant name = 'Paxos Gold' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_59:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14946:15174  function reclaimPAXG() external onlyOwner {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14946:15174  function reclaimPAXG() external onlyOwner {\r... */\n      pop\n      tag_51\n      jump(tag_62)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11421:11751  function approve(address _spender, uint256 _value)\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_63:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11421:11751  function approve(address _spender, uint256 _value)\r... */\n      tag_64\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_65)\n    tag_64:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3280:3314  address public assetProtectionRole */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_66:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3280:3314  address public assetProtectionRole */\n      pop\n      tag_67\n      jump(tag_68)\n    tag_67:\n      0x40\n      dup1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32560:32749  function getFeeFor(uint256 _value) public view returns (uint256) {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_69:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32560:32749  function getFeeFor(uint256 _value) public view returns (uint256) {\r... */\n      tag_70\n      calldataload(0x4)\n      jump(tag_71)\n    tag_70:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8651:8742  function totalSupply() public view returns (uint256) {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8651:8742  function totalSupply() public view returns (uint256) {\r... */\n      pop\n      tag_70\n      jump(tag_74)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27362:28509  function betaDelegatedTransferBatch(\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_75:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27362:28509  function betaDelegatedTransferBatch(\r... */\n      0x40\n      dup1\n      mload\n      0x20\n      0x4\n      dup1\n      calldataload\n      dup1\n      dup3\n      add\n      calldataload\n      dup4\n      dup2\n      mul\n      dup1\n      dup7\n      add\n      dup6\n      add\n      swap1\n      swap7\n      mstore\n      dup1\n      dup6\n      mstore\n      tag_64\n      swap6\n      calldatasize\n      swap6\n      swap4\n      swap5\n      0x24\n      swap5\n      swap4\n      dup6\n      add\n      swap3\n      swap2\n      dup3\n      swap2\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup8\n      calldataload\n      dup10\n      add\n      dup1\n      calldataload\n      0x20\n      dup2\n      dup2\n      mul\n      dup5\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap6\n      mstore\n      dup2\n      dup5\n      mstore\n      swap9\n      swap12\n      swap11\n      swap10\n      dup10\n      add\n      swap9\n      swap3\n      swap8\n      pop\n      swap1\n      dup3\n      add\n      swap6\n      pop\n      swap4\n      pop\n      dup4\n      swap3\n      pop\n      dup6\n      add\n      swap1\n      dup5\n      swap1\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      swap5\n      swap8\n      pop\n      tag_77\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21749:22561  function betaDelegatedTransfer(\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21749:22561  function betaDelegatedTransfer(\r... */\n      0x40\n      dup1\n      mload\n      0x20\n      0x4\n      dup1\n      calldataload\n      dup1\n      dup3\n      add\n      calldataload\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup6\n      add\n      dup5\n      add\n      swap1\n      swap6\n      mstore\n      dup5\n      dup5\n      mstore\n      tag_64\n      swap5\n      calldatasize\n      swap5\n      swap3\n      swap4\n      0x24\n      swap4\n      swap3\n      dup5\n      add\n      swap2\n      swap1\n      dup2\n      swap1\n      dup5\n      add\n      dup4\n      dup3\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      pop\n      swap5\n      swap8\n      pop\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n      dup6\n      calldataload\n      and\n      swap6\n      pop\n      pop\n      pop\n      0x20\n      dup4\n      add\n      calldataload\n      swap3\n      0x40\n      dup2\n      add\n      calldataload\n      swap3\n      pop\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      pop\n      0x80\n      add\n      calldataload\n      jump(tag_80)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10135:10772  function transferFrom(\r... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_81:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10135:10772  function transferFrom(\r... */\n      tag_64\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      calldataload(0x44)\n      jump(tag_83)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8171:8540  function initializeDomainSeparator() public {\r... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_84:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8171:8540  function initializeDomainSeparator() public {\r... */\n      pop\n      tag_51\n      jump(tag_86)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2938:2973  uint8 public constant decimals = 18 */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_87:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2938:2973  uint8 public constant decimals = 18 */\n      pop\n      tag_88\n      jump(tag_89)\n    tag_88:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30753:31254  function setFeeController(address _newFeeController) public {\r... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_90:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30753:31254  function setFeeController(address _newFeeController) public {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_92)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15734:15874  function unpause() public onlyOwner {\r... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_93\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_93:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15734:15874  function unpause() public onlyOwner {\r... */\n      pop\n      tag_51\n      jump(tag_95)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32085:32356  function setFeeRate(uint256 _newFeeRate) public onlyFeeController {\r... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_96:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32085:32356  function setFeeRate(uint256 _newFeeRate) public onlyFeeController {\r... */\n      tag_51\n      calldataload(0x4)\n      jump(tag_98)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17134:17337  function unfreeze(address _addr) public onlyAssetProtectionRole {\r... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_99:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17134:17337  function unfreeze(address _addr) public onlyAssetProtectionRole {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_101)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4698:4725  address public feeRecipient */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4698:4725  address public feeRecipient */\n      pop\n      tag_67\n      jump(tag_104)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14459:14727  function claimOwnership() public {\r... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_105:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14459:14727  function claimOwnership() public {\r... */\n      pop\n      tag_51\n      jump(tag_107)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18458:18940  function setSupplyController(address _newSupplyController) public {\r... */\n    tag_20:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_108:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18458:18940  function setSupplyController(address _newSupplyController) public {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_110)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4585:4627  uint256 public constant feeParts = 1000000 */\n    tag_21:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_111\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_111:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4585:4627  uint256 public constant feeParts = 1000000 */\n      pop\n      tag_70\n      jump(tag_113)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3215:3241  bool public paused = false */\n    tag_22:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_114\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_114:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3215:3241  bool public paused = false */\n      pop\n      tag_64\n      jump(tag_116)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4663:4691  address public feeController */\n    tag_23:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_117:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4663:4691  address public feeController */\n      pop\n      tag_67\n      jump(tag_119)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9703:9808  function balanceOf(address _addr) public view returns (uint256) {\r... */\n    tag_24:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_120\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_120:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9703:9808  function balanceOf(address _addr) public view returns (uint256) {\r... */\n      tag_70\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_122)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7281:7711  function initialize() public {\r... */\n    tag_25:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_123:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7281:7711  function initialize() public {\r... */\n      pop\n      tag_51\n      jump(tag_125)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15505:15639  function pause() public onlyOwner {\r... */\n    tag_26:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_126:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15505:15639  function pause() public onlyOwner {\r... */\n      pop\n      tag_51\n      jump(tag_128)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20862:20969  function nextSeqOf(address target) public view returns (uint256) {\r... */\n    tag_27:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_129:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20862:20969  function nextSeqOf(address target) public view returns (uint256) {\r... */\n      tag_70\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_131)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16112:16519  function setAssetProtectionRole(address _newAssetProtectionRole) public {\r... */\n    tag_28:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_132:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16112:16519  function setAssetProtectionRole(address _newAssetProtectionRole) public {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_134)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16800:16997  function freeze(address _addr) public onlyAssetProtectionRole {\r... */\n    tag_29:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16800:16997  function freeze(address _addr) public onlyAssetProtectionRole {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_137)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3126:3146  address public owner */\n    tag_30:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_138\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_138:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3126:3146  address public owner */\n      pop\n      tag_67\n      jump(tag_140)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2860:2898  string public constant symbol = 'PAXG' */\n    tag_31:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_141\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_141:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2860:2898  string public constant symbol = 'PAXG' */\n      pop\n      tag_54\n      jump(tag_143)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4634:4656  uint256 public feeRate */\n    tag_32:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_148:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4634:4656  uint256 public feeRate */\n      pop\n      tag_70\n      jump(tag_150)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29078:29473  function setBetaDelegateWhitelister(address _newWhitelister) public {\r... */\n    tag_33:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_151:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29078:29473  function setBetaDelegateWhitelister(address _newWhitelister) public {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_153)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20013:20490  function decreaseSupply(uint256 _value)\r... */\n    tag_34:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_154:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20013:20490  function decreaseSupply(uint256 _value)\r... */\n      tag_64\n      calldataload(0x4)\n      jump(tag_156)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28760:28923  function isWhitelistedBetaDelegate(address _addr)\r... */\n    tag_35:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_157\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_157:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28760:28923  function isWhitelistedBetaDelegate(address _addr)\r... */\n      tag_64\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_159)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9070:9479  function transfer(address _to, uint256 _value)\r... */\n    tag_36:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_160\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_160:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9070:9479  function transfer(address _to, uint256 _value)\r... */\n      tag_64\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_162)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29817:30102  function whitelistBetaDelegate(address _addr)\r... */\n    tag_37:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_163:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29817:30102  function whitelistBetaDelegate(address _addr)\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_165)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13310:13690  function proposeOwner(address _proposedOwner) public onlyOwner {\r... */\n    tag_38:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_166:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13310:13690  function proposeOwner(address _proposedOwner) public onlyOwner {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_168)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19341:19741  function increaseSupply(uint256 _value)\r... */\n    tag_39:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_169:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19341:19741  function increaseSupply(uint256 _value)\r... */\n      tag_64\n      calldataload(0x4)\n      jump(tag_171)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3470:3508  address public betaDelegateWhitelister */\n    tag_40:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_172\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_172:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3470:3508  address public betaDelegateWhitelister */\n      pop\n      tag_67\n      jump(tag_174)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4408:4445  uint8 public constant feeDecimals = 6 */\n    tag_41:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4408:4445  uint8 public constant feeDecimals = 6 */\n      pop\n      tag_88\n      jump(tag_177)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3153:3181  address public proposedOwner */\n    tag_42:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_178\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_178:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3153:3181  address public proposedOwner */\n      pop\n      tag_67\n      jump(tag_180)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30259:30544  function unwhitelistBetaDelegate(address _addr)\r... */\n    tag_43:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_181\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_181:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30259:30544  function unwhitelistBetaDelegate(address _addr)\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_183)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12092:12258  function allowance(address _owner, address _spender)\r... */\n    tag_44:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_184\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_184:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12092:12258  function allowance(address _owner, address _spender)\r... */\n      tag_70\n      sub(exp(0x2, 0xa0), 0x1)\n      calldataload(0x4)\n      dup2\n      and\n      swap1\n      calldataload(0x24)\n      and\n      jump(tag_186)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17529:17937  function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\r... */\n    tag_45:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_187\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_187:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17529:17937  function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_189)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4238:4271  bytes32 public EIP712_DOMAIN_HASH */\n    tag_46:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_190\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_190:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4238:4271  bytes32 public EIP712_DOMAIN_HASH */\n      pop\n      tag_70\n      jump(tag_192)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18148:18247  function isFrozen(address _addr) public view returns (bool) {\r... */\n    tag_47:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_193\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_193:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18148:18247  function isFrozen(address _addr) public view returns (bool) {\r... */\n      tag_64\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_195)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31545:31938  function setFeeRecipient(address _newFeeRecipient)\r... */\n    tag_48:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_196\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_196:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31545:31938  function setFeeRecipient(address _newFeeRecipient)\r... */\n      tag_51\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_198)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3398:3429  address public supplyController */\n    tag_49:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_199\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_199:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3398:3429  address public supplyController */\n      pop\n      tag_67\n      jump(tag_201)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13838:14323  function disregardProposeOwner() public {\r... */\n    tag_52:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13925:13938  proposedOwner */\n      sload(0x5)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14174:14199  address _oldProposedOwner */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13925:13938  proposedOwner */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13911:13921  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13911:13938  msg.sender == proposedOwner */\n      eq\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13911:13961  msg.sender == proposedOwner || msg.sender == owner */\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13956:13961  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13942:13952  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13942:13961  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13911:13961  msg.sender == proposedOwner || msg.sender == owner */\n    tag_203:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13889:14016  require(\r... */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792070726f706f7365644f776e6572206f72206f776e65720000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_204:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14049:14062  proposedOwner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x5))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14049:14076  proposedOwner != address(0) */\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14027:14163  require(\r... */\n      tag_205\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x3b\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e206f6e6c792064697372656761726420612070726f706f736564206f77\n      0x44\n      dup3\n      add\n      mstore\n      0x6e65722074686174207761732070726576696f75736c79207365740000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_205:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14202:14215  proposedOwner */\n      0x5\n      dup1\n      sload\n      not(sub(exp(0x2, 0xa0), 0x1))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14226:14252  proposedOwner = address(0) */\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14268:14315  OwnershipTransferDisregarded(_oldProposedOwner) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14202:14215  proposedOwner */\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14268:14315  OwnershipTransferDisregarded(_oldProposedOwner) */\n      0x24f4590b0077912a4db89e7430de7986175c27bede1b47ee039e3b421c2e798e\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14202:14215  proposedOwner */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14268:14315  OwnershipTransferDisregarded(_oldProposedOwner) */\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13838:14323  function disregardProposeOwner() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2788:2830  string public constant name = 'Paxos Gold' */\n    tag_55:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0xa\n      dup2\n      mstore\n      0x5061786f7320476f6c6400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14946:15174  function reclaimPAXG() external onlyOwner {\r... */\n    tag_62:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13074:13079  owner */\n      sload(0x4)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14999:15015  uint256 _balance */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13074:13079  owner */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13070  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13079  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13052:13093  require(msg.sender == owner, 'onlyOwner') */\n      tag_207\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x9\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_e8e4944059266c653cca10f9830a9fee32f8d74ffbc3fe2ecadb38d10605f91e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_207:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15027:15031  this */\n      address\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15018:15032  balances[this] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15018:15026  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15018:15032  balances[this] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup1\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15043:15061  balances[this] = 0 */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15099:15104  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15090:15105  balances[owner] */\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15090:15119  balances[owner].add(_balance) */\n      tag_209\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15018:15032  balances[this] */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15090:15119  balances[owner].add(_balance) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15090:15109  balances[owner].add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15090:15119  balances[owner].add(_balance) */\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15081:15086  owner */\n      0x4\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15072:15087  balances[owner] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15072:15080  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15072:15087  balances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15072:15119  balances[owner] = balances[owner].add(_balance) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15150:15155  owner */\n      swap2\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15135:15166  Transfer(this, owner, _balance) */\n      dup3\n      mload\n      dup6\n      dup2\n      mstore\n      swap3\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15150:15155  owner */\n      swap2\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15144:15148  this */\n      address\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15135:15166  Transfer(this, owner, _balance) */\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14946:15174  function reclaimPAXG() external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11421:11751  function approve(address _spender, uint256 _value)\r... */\n    tag_65:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      sload(0x5)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11529:11533  bool */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15368:15375  !paused */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15360:15393  require(!paused, 'whenNotPaused') */\n      tag_212\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xd\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_876f99e759874a085884e6e71a9f6228292079ddbccc024d1921f2c7370e10c7\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_212:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11560:11576  frozen[_spender] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11560:11566  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11560:11576  frozen[_spender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11559:11576  !frozen[_spender] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11559:11599  !frozen[_spender] && !frozen[msg.sender] */\n      dup1\n      iszero\n      tag_214\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11588:11598  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11581:11599  frozen[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11581:11587  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11581:11599  frozen[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11580:11599  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11559:11599  !frozen[_spender] && !frozen[msg.sender] */\n    tag_214:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11551:11618  require(!frozen[_spender] && !frozen[msg.sender], 'address frozen') */\n      iszero\n      iszero\n      tag_215\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xe\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_834d376937710e138a4fb943edb26d656fa6ea3cecfe10e80a0fdd4d89414cac\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11637:11647  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11629:11648  allowed[msg.sender] */\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11629:11636  allowed */\n      0x3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11629:11648  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11629:11658  allowed[msg.sender][_spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11629:11667  allowed[msg.sender][_spender] = _value */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11683:11721  Approval(msg.sender, _spender, _value) */\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11629:11658  allowed[msg.sender][_spender] */\n      swap3\n      swap4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11637:11647  msg.sender */\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11683:11721  Approval(msg.sender, _spender, _value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11739:11743  true */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":11421:11751  function approve(address _spender, uint256 _value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3280:3314  address public assetProtectionRole */\n    tag_68:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32560:32749  function getFeeFor(uint256 _value) public view returns (uint256) {\r... */\n    tag_71:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32616:32623  uint256 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32640:32647  feeRate */\n      sload(0xd)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32651:32652  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32640:32652  feeRate == 0 */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32636:32689  if (feeRate == 0) {\r... */\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32676:32677  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32669:32677  return 0 */\n      jump(tag_216)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32636:32689  if (feeRate == 0) {\r... */\n    tag_217:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32741  _value.mul(feeRate).div(feeParts) */\n      tag_218\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4620:4627  1000000 */\n      0xf4240\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32727  _value.mul(feeRate) */\n      tag_219\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32719:32726  feeRate */\n      sload(0xd)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32714  _value */\n      dup6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32718  _value.mul */\n      tag_220\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32727  _value.mul(feeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32731  _value.mul(feeRate).div */\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32741  _value.mul(feeRate).div(feeParts) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32731  _value.mul(feeRate).div */\n      tag_221\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32708:32741  _value.mul(feeRate).div(feeParts) */\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32701:32741  return _value.mul(feeRate).div(feeParts) */\n      swap1\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32560:32749  function getFeeFor(uint256 _value) public view returns (uint256) {\r... */\n    tag_216:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8651:8742  function totalSupply() public view returns (uint256) {\r... */\n    tag_74:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8722:8734  totalSupply_ */\n      sload(0x2)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8651:8742  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27362:28509  function betaDelegatedTransferBatch(\r... */\n    tag_77:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27618:27622  bool */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28062:28071  uint256 i */\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27669:27670  s */\n      dup9\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27669:27677  s.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27658  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27665  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27677  r.length == s.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27718  r.length == s.length &&\r... */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27710:27711  v */\n      dup8\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27710:27718  v.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27698:27699  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27698:27706  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27698:27718  r.length == v.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27718  r.length == s.length &&\r... */\n    tag_224:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27760  r.length == s.length &&\r... */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27751:27753  to */\n      dup7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27751:27760  to.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27739:27740  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27739:27747  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27739:27760  r.length == to.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27760  r.length == s.length &&\r... */\n    tag_225:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27805  r.length == s.length &&\r... */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27793:27798  value */\n      dup6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27793:27805  value.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27781:27782  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27781:27789  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27781:27805  r.length == value.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27657:27805  r.length == s.length &&\r... */\n    tag_226:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27635:27848  require(\r... */\n      iszero\n      iszero\n      tag_227\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xf\n      0x24\n      dup3\n      add\n      mstore\n      0x6c656e677468206d69736d617463680000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_227:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27893:27903  serviceFee */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27893:27910  serviceFee.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:27882  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:27889  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:27910  r.length == serviceFee.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:27953  r.length == serviceFee.length &&\r... */\n      dup1\n      iszero\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27943:27946  seq */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27943:27953  seq.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27931:27932  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27931:27939  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27931:27953  r.length == seq.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:27953  r.length == serviceFee.length &&\r... */\n    tag_228:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:28001  r.length == serviceFee.length &&\r... */\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27986:27994  deadline */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27986:28001  deadline.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27974:27975  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27974:27982  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27974:28001  r.length == deadline.length */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27881:28001  r.length == serviceFee.length &&\r... */\n    tag_229:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27859:28044  require(\r... */\n      iszero\n      iszero\n      tag_230\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xf\n      0x24\n      dup3\n      add\n      mstore\n      0x6c656e677468206d69736d617463680000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_230:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28074:28075  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28057:28480  for (uint256 i = 0; i < r.length; i++) {\r... */\n    tag_231:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28081:28082  r */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28081:28089  r.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28077:28078  i */\n      dup2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28077:28089  i < r.length */\n      lt\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28057:28480  for (uint256 i = 0; i < r.length; i++) {\r... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28137:28417  _betaDelegatedTransfer(\r... */\n      tag_234\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28182:28183  r */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28184:28185  i */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28182:28186  r[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_235\n      jumpi\n      invalid\n    tag_235:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28209:28210  s */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28211:28212  i */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28209:28213  s[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28236:28237  v */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28238:28239  i */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28236:28240  v[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28263:28265  to */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28266:28267  i */\n      dup6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28263:28268  to[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28291:28296  value */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28297:28298  i */\n      dup7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28291:28299  value[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28322:28332  serviceFee */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28333:28334  i */\n      dup8\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28322:28335  serviceFee[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_240\n      jumpi\n      invalid\n    tag_240:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28358:28361  seq */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28362:28363  i */\n      dup9\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28358:28364  seq[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_241\n      jumpi\n      invalid\n    tag_241:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28387:28395  deadline */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28396:28397  i */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28387:28398  deadline[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_242\n      jumpi\n      invalid\n    tag_242:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28137:28159  _betaDelegatedTransfer */\n      tag_243\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28137:28417  _betaDelegatedTransfer(\r... */\n      jump\t// in\n    tag_234:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28111:28468  require(\r... */\n      iszero\n      iszero\n      tag_244\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xf\n      0x24\n      dup3\n      add\n      mstore\n      0x6661696c6564207472616e736665720000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28091:28094  i++ */\n      0x1\n      add\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28057:28480  for (uint256 i = 0; i < r.length; i++) {\r... */\n      jump(tag_231)\n    tag_232:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28497:28501  true */\n      0x1\n      swap10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":27362:28509  function betaDelegatedTransferBatch(\r... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21749:22561  function betaDelegatedTransfer(\r... */\n    tag_80:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21946:21950  bool */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22034:22043  bytes32 r */\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22054:22063  bytes32 s */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22074:22081  uint8 v */\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21971:21974  sig */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21971:21981  sig.length */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21985:21987  65 */\n      0x41\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21971:21987  sig.length == 65 */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":21963:22023  require(sig.length == 65, 'signature should have length 65') */\n      iszero\n      iszero\n      tag_246\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x7369676e61747572652073686f756c642068617665206c656e67746820363500\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_246:\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22136:22138  32 */\n      0x20\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22127:22139  add(sig, 32) */\n      dup8\n      add\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22121:22140  mload(add(sig, 32)) */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22174:22176  64 */\n      0x40\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22165:22177  add(sig, 64) */\n      dup9\n      add\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22159:22178  mload(add(sig, 64)) */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22220:22222  96 */\n      0x60\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22211:22223  add(sig, 96) */\n      dup10\n      add\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22205:22224  mload(add(sig, 96)) */\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22202:22203  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22197:22225  byte(0, mload(add(sig, 96))) */\n      byte\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22268:22488  _betaDelegatedTransfer(\r... */\n      tag_247\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22121:22140  mload(add(sig, 32)) */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22159:22178  mload(add(sig, 64)) */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22197:22225  byte(0, mload(add(sig, 96))) */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22369:22371  to */\n      dup13\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22390:22395  value */\n      dup13\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22414:22424  serviceFee */\n      dup13\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22443:22446  seq */\n      dup13\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22465:22473  deadline */\n      dup13\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22268:22290  _betaDelegatedTransfer */\n      tag_243\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22268:22488  _betaDelegatedTransfer(\r... */\n      jump\t// in\n    tag_247:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":22246:22531  require(\r... */\n      iszero\n      iszero\n      tag_232\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xf\n      0x24\n      dup3\n      add\n      mstore\n      0x6661696c6564207472616e736665720000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10135:10772  function transferFrom(\r... */\n    tag_83:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      sload(0x5)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10265:10269  bool */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15368:15375  !paused */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15360:15393  require(!paused, 'whenNotPaused') */\n      tag_250\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xd\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_876f99e759874a085884e6e71a9f6228292079ddbccc024d1921f2c7370e10c7\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_250:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10290:10307  _to != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10282:10343  require(_to != address(0), 'cannot transfer to address zero') */\n      tag_252\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207472616e7366657220746f2061646472657373207a65726f00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_252:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10377:10388  frozen[_to] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10377:10383  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10377:10388  frozen[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10376:10388  !frozen[_to] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10376:10406  !frozen[_to] && !frozen[_from] */\n      dup1\n      iszero\n      tag_253\n      jumpi\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10393:10406  frozen[_from] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10393:10399  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10393:10406  frozen[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10392:10406  !frozen[_from] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10376:10406  !frozen[_to] && !frozen[_from] */\n    tag_253:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10376:10429  !frozen[_to] && !frozen[_from] && !frozen[msg.sender] */\n      dup1\n      iszero\n      tag_254\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10418:10428  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10411:10429  frozen[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10411:10417  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10411:10429  frozen[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10410:10429  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10376:10429  !frozen[_to] && !frozen[_from] && !frozen[msg.sender] */\n    tag_254:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10354:10471  require(\r... */\n      iszero\n      iszero\n      tag_255\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xe\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_834d376937710e138a4fb943edb26d656fa6ea3cecfe10e80a0fdd4d89414cac\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_255:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10500:10515  balances[_from] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10500:10508  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10500:10515  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10490:10515  _value <= balances[_from] */\n      dup3\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10482:10538  require(_value <= balances[_from], 'insufficient funds') */\n      tag_256\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x696e73756666696369656e742066756e64730000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_256:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10567:10581  allowed[_from] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10567:10574  allowed */\n      0x3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10567:10581  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10582:10592  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10567:10593  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10557:10593  _value <= allowed[_from][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10549:10620  require(_value <= allowed[_from][msg.sender], 'insufficient allowance') */\n      tag_257\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x696e73756666696369656e7420616c6c6f77616e636500000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_257:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10676  allowed[_from] */\n      dup5\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10669  allowed */\n      0x3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10676  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10677:10687  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10688  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10700  allowed[_from][msg.sender].sub(_value) */\n      tag_258\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10693:10699  _value */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10700  allowed[_from][msg.sender].sub(_value) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10692  allowed[_from][msg.sender].sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10662:10700  allowed[_from][msg.sender].sub(_value) */\n      and\n      jump\t// in\n    tag_258:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10633:10647  allowed[_from] */\n      dup6\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10633:10640  allowed */\n      0x3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10633:10647  allowed[_from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10648:10658  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10633:10659  allowed[_from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10633:10700  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10711:10740  _transfer(_from, _to, _value) */\n      tag_260\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10641:10646  _from */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10728:10731  _to */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10733:10739  _value */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10711:10720  _transfer */\n      tag_261\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10711:10740  _transfer(_from, _to, _value) */\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10760:10764  true */\n      0x1\n      swap5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":10135:10772  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8171:8540  function initializeDomainSeparator() public {\r... */\n    tag_86:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3851:3915  keccak256('EIP712Domain(string name,address verifyingContract)') */\n      0x40\n      dup1\n      mload\n      0x454950373132446f6d61696e28737472696e67206e616d652c61646472657373\n      dup2\n      mstore\n      0x20766572696679696e67436f6e74726163742900000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x33\n      add\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8459:8463  name */\n      dup3\n      dup5\n      add\n      dup5\n      mstore\n      0xa\n      dup1\n      dup5\n      mstore\n      0x5061786f7320476f6c6400000000000000000000000000000000000000000000\n      swap3\n      dup5\n      add\n      swap3\n      dup4\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n      swap4\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3851:3915  keccak256('EIP712Domain(string name,address verifyingContract)') */\n      swap1\n      swap4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8459:8463  name */\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8459:8463  name */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_263:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":58:69   */\n      dup4\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_264\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_263)\n    tag_264:\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":344:354   */\n      dup2\n      mload\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      swap4\n      dup5\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n      not(0x0)\n        /* \"--CODEGEN--\":246:276   */\n      add\n        /* \"--CODEGEN--\":311:320   */\n      dup1\n      not\n        /* \"--CODEGEN--\":295:321   */\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":340:361   */\n      swap2\n      and\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":365:398   */\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8443:8465  keccak256(bytes(name)) */\n      0x40\n      dup1\n      mload\n      swap3\n      swap1\n      swap5\n      add\n      dup3\n      swap1\n      sub\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n      dup3\n      dup3\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      dup2\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8500:8504  this */\n      address\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n      0x60\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup4\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n      0x80\n      swap1\n      swap2\n      add\n      swap3\n      dup4\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n      dup1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n      swap1\n      swap6\n      swap3\n      swap5\n      pop\n      dup5\n      swap4\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n      swap2\n      dup6\n      add\n      swap2\n      swap1\n      pop\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8331:8521  abi.encodePacked( // solium-disable-line\r... */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_266:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":58:69   */\n      dup4\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_267\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_266)\n    tag_267:\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":344:354   */\n      dup2\n      mload\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      swap4\n      swap1\n      swap4\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n      not(0x0)\n        /* \"--CODEGEN--\":246:276   */\n      add\n        /* \"--CODEGEN--\":311:320   */\n      dup1\n      not\n        /* \"--CODEGEN--\":295:321   */\n      swap1\n      swap2\n      and\n        /* \"--CODEGEN--\":340:361   */\n      swap3\n      and\n        /* \"--CODEGEN--\":377:397   */\n      swap2\n      swap1\n      swap2\n      or\n        /* \"--CODEGEN--\":365:398   */\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8307:8532  keccak256(\r... */\n      mload(0x40)\n      swap3\n      add\n      dup3\n      swap1\n      sub\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8286:8304  EIP712_DOMAIN_HASH */\n      0xc\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8286:8532  EIP712_DOMAIN_HASH = keccak256(\r... */\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":8171:8540  function initializeDomainSeparator() public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2938:2973  uint8 public constant decimals = 18 */\n    tag_89:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2971:2973  18 */\n      0x12\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2938:2973  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30753:31254  function setFeeController(address _newFeeController) public {\r... */\n    tag_92:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30860:30873  feeController */\n      sload(0xe)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31095:31120  address _oldFeeController */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30860:30873  feeController */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30846:30856  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30846:30873  msg.sender == feeController */\n      eq\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30846:30896  msg.sender == feeController || msg.sender == owner */\n      tag_270\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30891:30896  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30877:30887  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30877:30896  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30846:30896  msg.sender == feeController || msg.sender == owner */\n    tag_270:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30824:30951  require(\r... */\n      iszero\n      iszero\n      tag_271\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c7920466565436f6e74726f6c6c6572206f72204f776e65720000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_271:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30984:31015  _newFeeController != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30962:31084  require(\r... */\n      tag_272\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207365742066656520636f6e74726f6c6c657220746f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x72657373207a65726f0000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_272:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31123:31136  feeController */\n      0xe\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31147:31180  feeController = _newFeeController */\n      dup4\n      dup2\n      and\n      not(sub(exp(0x2, 0xa0), 0x1))\n      dup4\n      and\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31196:31246  FeeControllerSet(_oldFeeController, feeController) */\n      mload(0x40)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31123:31136  feeController */\n      swap2\n      dup2\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31232:31245  feeController */\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31123:31136  feeController */\n      dup3\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31196:31246  FeeControllerSet(_oldFeeController, feeController) */\n      0x9f67a87fdd653dfcdb36c8e3f851b597fb84328e3e90b118af01dc93a94e2eb5\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31123:31136  feeController */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31196:31246  FeeControllerSet(_oldFeeController, feeController) */\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30753:31254  function setFeeController(address _newFeeController) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15734:15874  function unpause() public onlyOwner {\r... */\n    tag_95:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13074:13079  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13070  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13079  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13052:13093  require(msg.sender == owner, 'onlyOwner') */\n      tag_274\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x9\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_e8e4944059266c653cca10f9830a9fee32f8d74ffbc3fe2ecadb38d10605f91e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15789:15795  paused */\n      sload(0x5)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15781:15816  require(paused, 'already unpaused') */\n      iszero\n      iszero\n      tag_276\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      0x616c726561647920756e70617573656400000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15827:15833  paused */\n      0x5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15827:15841  paused = false */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15857:15866  Unpause() */\n      mload(0x40)\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15836:15841  false */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15857:15866  Unpause() */\n      log1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15734:15874  function unpause() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32085:32356  function setFeeRate(uint256 _newFeeRate) public onlyFeeController {\r... */\n    tag_98:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31324:31337  feeController */\n      sload(0xe)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32239:32258  uint256 _oldFeeRate */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31324:31337  feeController */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31310:31320  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31310:31337  msg.sender == feeController */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31302:31360  require(msg.sender == feeController, 'only FeeController') */\n      tag_278\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c7920466565436f6e74726f6c6c65720000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4620:4627  1000000 */\n      0xf4240\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32170:32193  _newFeeRate <= feeParts */\n      dup3\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32162:32228  require(_newFeeRate <= feeParts, 'cannot set fee rate above 100%') */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207365742066656520726174652061626f766520313030250000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32261:32268  feeRate */\n      0xd\n      dup1\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32279:32300  feeRate = _newFeeRate */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32316:32348  FeeRateSet(_oldFeeRate, feeRate) */\n      mload(0x40)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32289:32300  _newFeeRate */\n      dup3\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32261:32268  feeRate */\n      dup3\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32316:32348  FeeRateSet(_oldFeeRate, feeRate) */\n      0x959ec4191db1bd972bfbc60dc7d735d4cfb897ca3fd297f4ebd6ee918feb84d4\n      swap1\n      0x0\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":32085:32356  function setFeeRate(uint256 _newFeeRate) public onlyFeeController {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17134:17337  function unfreeze(address _addr) public onlyAssetProtectionRole {\r... */\n    tag_101:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16595:16614  assetProtectionRole */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16581:16591  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16581:16614  msg.sender == assetProtectionRole */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16573:16642  require(msg.sender == assetProtectionRole, 'onlyAssetProtectionRole') */\n      tag_282\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79417373657450726f74656374696f6e526f6c65000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_282:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17217:17230  frozen[_addr] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17217:17223  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17217:17230  frozen[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17209:17259  require(frozen[_addr], 'address already unfrozen') */\n      iszero\n      iszero\n      tag_284\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x6164647265737320616c726561647920756e66726f7a656e0000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_284:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17270:17283  frozen[_addr] */\n      dup2\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17286:17291  false */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17270:17283  frozen[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17270:17276  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17270:17283  frozen[_addr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17270:17291  frozen[_addr] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17307:17329  AddressUnfrozen(_addr) */\n      mload\n      0xc3776b472ebf54114339eec9e4dc924e7ce307a97f5c1ee72b6d474e6e5e8b7c\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17286:17291  false */\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17307:17329  AddressUnfrozen(_addr) */\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17134:17337  function unfreeze(address _addr) public onlyAssetProtectionRole {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4698:4725  address public feeRecipient */\n    tag_104:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xf))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14459:14727  function claimOwnership() public {\r... */\n    tag_107:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14525:14538  proposedOwner */\n      sload(0x5)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14571:14588  address _oldOwner */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14525:14538  proposedOwner */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14511:14521  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14511:14538  msg.sender == proposedOwner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14503:14560  require(msg.sender == proposedOwner, 'onlyProposedOwner') */\n      tag_286\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c7950726f706f7365644f776e6572000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_286:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14591:14596  owner */\n      0x4\n      dup1\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14615:14628  proposedOwner */\n      0x5\n      dup1\n      sload\n      not(sub(exp(0x2, 0xa0), 0x1))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14607:14628  owner = proposedOwner */\n      dup1\n      dup5\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14615:14628  proposedOwner */\n      dup4\n      dup2\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14607:14628  owner = proposedOwner */\n      swap2\n      swap1\n      swap2\n      or\n      swap6\n      dup7\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14639:14665  proposedOwner = address(0) */\n      swap2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14681:14719  OwnershipTransferred(_oldOwner, owner) */\n      mload(0x40)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14591:14596  owner */\n      swap2\n      dup2\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14713:14718  owner */\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14591:14596  owner */\n      dup3\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14681:14719  OwnershipTransferred(_oldOwner, owner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14591:14596  owner */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14681:14719  OwnershipTransferred(_oldOwner, owner) */\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":14459:14727  function claimOwnership() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18458:18940  function setSupplyController(address _newSupplyController) public {\r... */\n    tag_110:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18571:18587  supplyController */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x8))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18557:18567  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18557:18587  msg.sender == supplyController */\n      eq\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18557:18610  msg.sender == supplyController || msg.sender == owner */\n      tag_288\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18605:18610  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18591:18601  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18591:18610  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18557:18610  msg.sender == supplyController || msg.sender == owner */\n    tag_288:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18535:18668  require(\r... */\n      iszero\n      iszero\n      tag_289\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c7920537570706c79436f6e74726f6c6c6572206f72204f776e65720000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_289:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18701:18735  _newSupplyController != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18679:18807  require(\r... */\n      tag_290\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x2c\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f742073657420737570706c7920636f6e74726f6c6c657220746f20\n      0x44\n      dup3\n      add\n      mstore\n      0x61646472657373207a65726f0000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18843:18859  supplyController */\n      sload(0x8)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18823:18882  SupplyControllerSet(supplyController, _newSupplyController) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18843:18859  supplyController */\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18823:18882  SupplyControllerSet(supplyController, _newSupplyController) */\n      0x40d53b0b666e4424f29d55244e7e171a1dc332acc11d04ed4abd884629d8cc97\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18843:18859  supplyController */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18823:18882  SupplyControllerSet(supplyController, _newSupplyController) */\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18893:18909  supplyController */\n      0x8\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18893:18932  supplyController = _newSupplyController */\n      dup1\n      sload\n      not(sub(exp(0x2, 0xa0), 0x1))\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18458:18940  function setSupplyController(address _newSupplyController) public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4585:4627  uint256 public constant feeParts = 1000000 */\n    tag_113:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4620:4627  1000000 */\n      0xf4240\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4585:4627  uint256 public constant feeParts = 1000000 */\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3215:3241  bool public paused = false */\n    tag_116:\n      sload(0x5)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4663:4691  address public feeController */\n    tag_119:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xe))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9703:9808  function balanceOf(address _addr) public view returns (uint256) {\r... */\n    tag_122:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9785:9800  balances[_addr] */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9758:9765  uint256 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9785:9800  balances[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9785:9793  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9785:9800  balances[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9703:9808  function balanceOf(address _addr) public view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7281:7711  function initialize() public {\r... */\n    tag_125:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7330:7341  initialized */\n      and(0xff, sload(0x0))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7329:7341  !initialized */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7321:7365  require(!initialized, 'already initialized') */\n      tag_293\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      0x616c726561647920696e697469616c697a656400000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7376:7381  owner */\n      0x4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7376:7394  owner = msg.sender */\n      dup1\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7384:7394  msg.sender */\n      caller\n      not(sub(exp(0x2, 0xa0), 0x1))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7376:7394  owner = msg.sender */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7405:7418  proposedOwner */\n      0x5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7405:7431  proposedOwner = address(0) */\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7442:7461  assetProtectionRole */\n      0x6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7442:7474  assetProtectionRole = address(0) */\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7485:7497  totalSupply_ */\n      0x2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7485:7501  totalSupply_ = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7512:7528  supplyController */\n      0x8\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7512:7541  supplyController = msg.sender */\n      dup1\n      sload\n      dup4\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7552:7559  feeRate */\n      0xd\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7552:7563  feeRate = 0 */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7574:7587  feeController */\n      0xe\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7574:7600  feeController = msg.sender */\n      dup1\n      sload\n      dup3\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7611:7623  feeRecipient */\n      0xf\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7611:7636  feeRecipient = msg.sender */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7647:7674  initializeDomainSeparator() */\n      tag_294\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7647:7672  initializeDomainSeparator */\n      tag_86\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7647:7674  initializeDomainSeparator() */\n      jump\t// in\n    tag_294:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7685:7696  initialized */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7685:7703  initialized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7699:7703  true */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7685:7703  initialized = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":7281:7711  function initialize() public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15505:15639  function pause() public onlyOwner {\r... */\n    tag_128:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13074:13079  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13070  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13079  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13052:13093  require(msg.sender == owner, 'onlyOwner') */\n      tag_296\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x9\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_e8e4944059266c653cca10f9830a9fee32f8d74ffbc3fe2ecadb38d10605f91e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15559:15565  paused */\n      sload(0x5)\n      exp(0x2, 0xa0)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15558:15565  !paused */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15550:15584  require(!paused, 'already paused') */\n      tag_298\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xe\n      0x24\n      dup3\n      add\n      mstore\n      0x616c726561647920706175736564000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_298:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15595:15601  paused */\n      0x5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15595:15608  paused = true */\n      dup1\n      sload\n      not(0xff0000000000000000000000000000000000000000)\n      and\n      exp(0x2, 0xa0)\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15624:15631  Pause() */\n      mload(0x40)\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15595:15608  paused = true */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15624:15631  Pause() */\n      log1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15505:15639  function pause() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20862:20969  function nextSeqOf(address target) public view returns (uint256) {\r... */\n    tag_131:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20945:20961  nextSeqs[target] */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20918:20925  uint256 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20945:20961  nextSeqs[target] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20945:20953  nextSeqs */\n      0xb\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20945:20961  nextSeqs[target] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20862:20969  function nextSeqOf(address target) public view returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16112:16519  function setAssetProtectionRole(address _newAssetProtectionRole) public {\r... */\n    tag_134:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16231:16250  assetProtectionRole */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16217:16227  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16217:16250  msg.sender == assetProtectionRole */\n      eq\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16217:16273  msg.sender == assetProtectionRole || msg.sender == owner */\n      tag_301\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16268:16273  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16254:16264  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16254:16273  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16217:16273  msg.sender == assetProtectionRole || msg.sender == owner */\n    tag_301:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16195:16334  require(\r... */\n      iszero\n      iszero\n      tag_302\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c7920617373657450726f74656374696f6e526f6c65206f72204f776e65\n      0x44\n      dup3\n      add\n      mstore\n      0x7200000000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_302:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16387:16406  assetProtectionRole */\n      sload(0x6)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16350:16455  AssetProtectionRoleSet(\r... */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16387:16406  assetProtectionRole */\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16350:16455  AssetProtectionRoleSet(\r... */\n      0xd0c36a0ac0fe0d375386bd568fa2947a2dae7523a0a0cfdab20b7532a105bd1b\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16387:16406  assetProtectionRole */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16350:16455  AssetProtectionRoleSet(\r... */\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16466:16485  assetProtectionRole */\n      0x6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16466:16511  assetProtectionRole = _newAssetProtectionRole */\n      dup1\n      sload\n      not(sub(exp(0x2, 0xa0), 0x1))\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16112:16519  function setAssetProtectionRole(address _newAssetProtectionRole) public {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16800:16997  function freeze(address _addr) public onlyAssetProtectionRole {\r... */\n    tag_137:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16595:16614  assetProtectionRole */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x6))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16581:16591  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16581:16614  msg.sender == assetProtectionRole */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16573:16642  require(msg.sender == assetProtectionRole, 'onlyAssetProtectionRole') */\n      tag_304\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79417373657450726f74656374696f6e526f6c65000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_304:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16882:16895  frozen[_addr] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16882:16888  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16882:16895  frozen[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16881:16895  !frozen[_addr] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16873:16922  require(!frozen[_addr], 'address already frozen') */\n      tag_306\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      0x6164647265737320616c72656164792066726f7a656e00000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_306:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16933:16946  frozen[_addr] */\n      dup2\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16933:16939  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16933:16946  frozen[_addr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16933:16953  frozen[_addr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16949:16953  true */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16933:16953  frozen[_addr] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16969:16989  AddressFrozen(_addr) */\n      mload\n      0x90811a8edd3b3c17eeaefffc17f639cc69145d41a359c9843994dc2538203690\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16933:16946  frozen[_addr] */\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16969:16989  AddressFrozen(_addr) */\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16800:16997  function freeze(address _addr) public onlyAssetProtectionRole {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3126:3146  address public owner */\n    tag_140:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":2860:2898  string public constant symbol = 'PAXG' */\n    tag_143:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x4\n      dup2\n      mstore\n      0x5041584700000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4634:4656  uint256 public feeRate */\n    tag_150:\n      sload(0xd)\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29078:29473  function setBetaDelegateWhitelister(address _newWhitelister) public {\r... */\n    tag_153:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29193:29216  betaDelegateWhitelister */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x9))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29179:29189  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29179:29216  msg.sender == betaDelegateWhitelister */\n      eq\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29179:29239  msg.sender == betaDelegateWhitelister || msg.sender == owner */\n      tag_308\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29234:29239  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29220:29230  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29220:29239  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29179:29239  msg.sender == betaDelegateWhitelister || msg.sender == owner */\n    tag_308:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29157:29292  require(\r... */\n      iszero\n      iszero\n      tag_309\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c792057686974656c6973746572206f72204f776e657200000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_309:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29303:29326  betaDelegateWhitelister */\n      0x9\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29303:29344  betaDelegateWhitelister = _newWhitelister */\n      dup1\n      sload\n      not(sub(exp(0x2, 0xa0), 0x1))\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29360:29465  BetaDelegateWhitelisterSet(\r... */\n      mload(0x40)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29303:29344  betaDelegateWhitelister = _newWhitelister */\n      swap2\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29401:29424  betaDelegateWhitelister */\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29360:29465  BetaDelegateWhitelisterSet(\r... */\n      0x54e20b07412504aee4d17519747ae2f01b9924f7f30059793fe5576c4220a0c3\n      swap1\n      0x0\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29078:29473  function setBetaDelegateWhitelister(address _newWhitelister) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20013:20490  function decreaseSupply(uint256 _value)\r... */\n    tag_156:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19013:19029  supplyController */\n      sload(0x8)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20117:20129  bool success */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19013:19029  supplyController */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18999:19009  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18999:19029  msg.sender == supplyController */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18991:19054  require(msg.sender == supplyController, 'onlySupplyController') */\n      tag_311\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79537570706c79436f6e74726f6c6c6572000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_311:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20174:20190  supplyController */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x8))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20165:20191  balances[supplyController] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20165:20173  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20165:20191  balances[supplyController] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20155:20191  _value <= balances[supplyController] */\n      dup3\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20147:20213  require(_value <= balances[supplyController], 'not enough supply') */\n      tag_313\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      0x6e6f7420656e6f75676820737570706c79000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20262:20278  supplyController */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x8))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20279  balances[supplyController] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20261  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20279  balances[supplyController] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20291  balances[supplyController].sub(_value) */\n      tag_314\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20284:20290  _value */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20291  balances[supplyController].sub(_value) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20283  balances[supplyController].sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20253:20291  balances[supplyController].sub(_value) */\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20233:20249  supplyController */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x8))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20224:20250  balances[supplyController] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20224:20232  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20224:20250  balances[supplyController] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20224:20291  balances[supplyController] = balances[supplyController].sub(_value) */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20317:20329  totalSupply_ */\n      sload(0x2)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20317:20341  totalSupply_.sub(_value) */\n      tag_315\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20334:20340  _value */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20317:20341  totalSupply_.sub(_value) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20317:20333  totalSupply_.sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20317:20341  totalSupply_.sub(_value) */\n      and\n      jump\t// in\n    tag_315:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20302:20314  totalSupply_ */\n      0x2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20302:20341  totalSupply_ = totalSupply_.sub(_value) */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20373:20389  supplyController */\n      sload(0x8)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20357:20398  SupplyDecreased(supplyController, _value) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20373:20389  supplyController */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20357:20398  SupplyDecreased(supplyController, _value) */\n      0x1b7e18241beced0d7f41fbab1ea8ed468732edbcb74ec4420151654ca71c8a63\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20423:20439  supplyController */\n      sload(0x8)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20414:20460  Transfer(supplyController, address(0), _value) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20449:20450  0 */\n      0x0\n      swap3\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20423:20439  supplyController */\n      and\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20414:20460  Transfer(supplyController, address(0), _value) */\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20478:20482  true */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":20013:20490  function decreaseSupply(uint256 _value)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28760:28923  function isWhitelistedBetaDelegate(address _addr)\r... */\n    tag_159:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28887:28915  betaDelegateWhitelist[_addr] */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28858:28862  bool */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28887:28915  betaDelegateWhitelist[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28887:28908  betaDelegateWhitelist */\n      0xa\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28887:28915  betaDelegateWhitelist[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":28760:28923  function isWhitelistedBetaDelegate(address _addr)\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9070:9479  function transfer(address _to, uint256 _value)\r... */\n    tag_162:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      sload(0x5)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9174:9178  bool */\n      0x0\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15368:15375  !paused */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15360:15393  require(!paused, 'whenNotPaused') */\n      tag_318\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xd\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_876f99e759874a085884e6e71a9f6228292079ddbccc024d1921f2c7370e10c7\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_318:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9204:9221  _to != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9196:9257  require(_to != address(0), 'cannot transfer to address zero') */\n      tag_320\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207472616e7366657220746f2061646472657373207a65726f00\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_320:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9277:9288  frozen[_to] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9277:9283  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9277:9288  frozen[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9276:9288  !frozen[_to] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9276:9311  !frozen[_to] && !frozen[msg.sender] */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9300:9310  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9293:9311  frozen[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9293:9299  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9293:9311  frozen[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9292:9311  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9276:9311  !frozen[_to] && !frozen[msg.sender] */\n    tag_321:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9268:9330  require(!frozen[_to] && !frozen[msg.sender], 'address frozen') */\n      iszero\n      iszero\n      tag_322\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xe\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_834d376937710e138a4fb943edb26d656fa6ea3cecfe10e80a0fdd4d89414cac\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_322:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9368:9378  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9359:9379  balances[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9359:9367  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9359:9379  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9349:9379  _value <= balances[msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9341:9402  require(_value <= balances[msg.sender], 'insufficient funds') */\n      tag_323\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x696e73756666696369656e742066756e64730000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9415:9449  _transfer(msg.sender, _to, _value) */\n      tag_324\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9425:9435  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9437:9440  _to */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9442:9448  _value */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9415:9424  _transfer */\n      tag_261\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9415:9449  _transfer(msg.sender, _to, _value) */\n      jump\t// in\n    tag_324:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9467:9471  true */\n      0x1\n      swap4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":9070:9479  function transfer(address _to, uint256 _value)\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29817:30102  function whitelistBetaDelegate(address _addr)\r... */\n    tag_165:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29567:29590  betaDelegateWhitelister */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x9))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29553:29563  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29553:29590  msg.sender == betaDelegateWhitelister */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29531:29645  require(\r... */\n      tag_326\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c794265746144656c656761746557686974656c69737465720000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_326:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29941:29969  betaDelegateWhitelist[_addr] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29941:29962  betaDelegateWhitelist */\n      0xa\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29941:29969  betaDelegateWhitelist[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29940:29969  !betaDelegateWhitelist[_addr] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29932:30002  require(!betaDelegateWhitelist[_addr], 'delegate already whitelisted') */\n      tag_328\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x64656c656761746520616c72656164792077686974656c697374656400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_328:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30013:30041  betaDelegateWhitelist[_addr] */\n      dup2\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30013:30034  betaDelegateWhitelist */\n      0xa\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30013:30041  betaDelegateWhitelist[_addr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30013:30048  betaDelegateWhitelist[_addr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30044:30048  true */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30013:30048  betaDelegateWhitelist[_addr] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30064:30094  BetaDelegateWhitelisted(_addr) */\n      mload\n      0x8a22e0d8ecb02260464e9a55b7d82b17482735ae1f765de59dee573dfec5b36d\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30013:30041  betaDelegateWhitelist[_addr] */\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30064:30094  BetaDelegateWhitelisted(_addr) */\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29817:30102  function whitelistBetaDelegate(address _addr)\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13310:13690  function proposeOwner(address _proposedOwner) public onlyOwner {\r... */\n    tag_168:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13074:13079  owner */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x4))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13070  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13060:13079  msg.sender == owner */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13052:13093  require(msg.sender == owner, 'onlyOwner') */\n      tag_330\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x9\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_e8e4944059266c653cca10f9830a9fee32f8d74ffbc3fe2ecadb38d10605f91e\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_330:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13406:13434  _proposedOwner != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13384:13503  require(\r... */\n      tag_332\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x29\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207472616e73666572206f776e65727368697020746f20616464\n      0x44\n      dup3\n      add\n      mstore\n      0x72657373207a65726f0000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_332:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13522:13532  msg.sender */\n      caller\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13522:13550  msg.sender != _proposedOwner */\n      dup3\n      and\n      eq\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13514:13578  require(msg.sender != _proposedOwner, 'caller already is owner') */\n      tag_333\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x63616c6c657220616c7265616479206973206f776e6572000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13589:13602  proposedOwner */\n      0x5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13589:13619  proposedOwner = _proposedOwner */\n      dup1\n      sload\n      not(sub(exp(0x2, 0xa0), 0x1))\n      and\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13661:13666  owner */\n      sload(0x4)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13635:13682  OwnershipTransferProposed(owner, proposedOwner) */\n      mload(0x40)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13668:13681  proposedOwner */\n      swap3\n      dup3\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13661:13666  owner */\n      swap2\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13635:13682  OwnershipTransferProposed(owner, proposedOwner) */\n      0xf4e75b79500ab730f8a026ed3cba6d55331bcb64c9e9f60c548e371356e5e3c0\n      swap1\n      0x0\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":13310:13690  function proposeOwner(address _proposedOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19341:19741  function increaseSupply(uint256 _value)\r... */\n    tag_171:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19013:19029  supplyController */\n      sload(0x8)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19445:19457  bool success */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19013:19029  supplyController */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18999:19009  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18999:19029  msg.sender == supplyController */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18991:19054  require(msg.sender == supplyController, 'onlySupplyController') */\n      tag_335\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79537570706c79436f6e74726f6c6c6572000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_335:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19490:19502  totalSupply_ */\n      sload(0x2)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19490:19514  totalSupply_.add(_value) */\n      tag_337\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19507:19513  _value */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19490:19514  totalSupply_.add(_value) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19490:19506  totalSupply_.add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19490:19514  totalSupply_.add(_value) */\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19475:19487  totalSupply_ */\n      0x2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19475:19514  totalSupply_ = totalSupply_.add(_value) */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19563:19579  supplyController */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x8))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19580  balances[supplyController] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19562  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19580  balances[supplyController] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19592  balances[supplyController].add(_value) */\n      tag_338\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19585:19591  _value */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19592  balances[supplyController].add(_value) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19584  balances[supplyController].add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19554:19592  balances[supplyController].add(_value) */\n      and\n      jump\t// in\n    tag_338:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19534:19550  supplyController */\n      0x8\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19525:19551  balances[supplyController] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19525:19533  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19525:19551  balances[supplyController] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19525:19592  balances[supplyController] = balances[supplyController].add(_value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19624:19640  supplyController */\n      swap2\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19608:19649  SupplyIncreased(supplyController, _value) */\n      dup3\n      mload\n      dup7\n      dup2\n      mstore\n      swap3\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19624:19640  supplyController */\n      swap2\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19608:19649  SupplyIncreased(supplyController, _value) */\n      0xf5c174d57843e57fea3c649fdde37f015ef08750759cbee88060390566a98797\n      swap3\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19686:19702  supplyController */\n      sload(0x8)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19665:19711  Transfer(address(0), supplyController, _value) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19686:19702  supplyController */\n      swap1\n      swap3\n      and\n      swap2\n      0x0\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19665:19711  Transfer(address(0), supplyController, _value) */\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19729:19733  true */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":19341:19741  function increaseSupply(uint256 _value)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3470:3508  address public betaDelegateWhitelister */\n    tag_174:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x9))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4408:4445  uint8 public constant feeDecimals = 6 */\n    tag_177:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4444:4445  6 */\n      0x6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4408:4445  uint8 public constant feeDecimals = 6 */\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3153:3181  address public proposedOwner */\n    tag_180:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x5))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30259:30544  function unwhitelistBetaDelegate(address _addr)\r... */\n    tag_183:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29567:29590  betaDelegateWhitelister */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x9))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29553:29563  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29553:29590  msg.sender == betaDelegateWhitelister */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":29531:29645  require(\r... */\n      tag_340\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c794265746144656c656761746557686974656c69737465720000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_340:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30384:30412  betaDelegateWhitelist[_addr] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30384:30405  betaDelegateWhitelist */\n      0xa\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30384:30412  betaDelegateWhitelist[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30376:30441  require(betaDelegateWhitelist[_addr], 'delegate not whitelisted') */\n      iszero\n      iszero\n      tag_342\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x64656c6567617465206e6f742077686974656c69737465640000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_342:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30452:30480  betaDelegateWhitelist[_addr] */\n      dup2\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30483:30488  false */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30452:30480  betaDelegateWhitelist[_addr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30452:30473  betaDelegateWhitelist */\n      0xa\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30452:30480  betaDelegateWhitelist[_addr] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30452:30488  betaDelegateWhitelist[_addr] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30504:30536  BetaDelegateUnwhitelisted(_addr) */\n      mload\n      0x12acb305bec2ecc1e4568decc9c8e0423749ceb6ae249eaef4ef375ec174a49c\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30483:30488  false */\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30504:30536  BetaDelegateUnwhitelisted(_addr) */\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":30259:30544  function unwhitelistBetaDelegate(address _addr)\r... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12092:12258  function allowance(address _owner, address _spender)\r... */\n    tag_186:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12225:12240  allowed[_owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12193:12200  uint256 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12225:12240  allowed[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12225:12232  allowed */\n      0x3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12225:12240  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12225:12250  allowed[_owner][_spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12092:12258  function allowance(address _owner, address _spender)\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17529:17937  function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\r... */\n    tag_189:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16595:16614  assetProtectionRole */\n      sload(0x6)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17671:17687  uint256 _balance */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16595:16614  assetProtectionRole */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16581:16591  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16581:16614  msg.sender == assetProtectionRole */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":16573:16642  require(msg.sender == assetProtectionRole, 'onlyAssetProtectionRole') */\n      tag_345\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c79417373657450726f74656374696f6e526f6c65000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_345:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17621:17634  frozen[_addr] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17621:17627  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17621:17634  frozen[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17613:17660  require(frozen[_addr], 'address is not frozen') */\n      iszero\n      iszero\n      tag_347\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      0x61646472657373206973206e6f742066726f7a656e0000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_347:\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17690:17705  balances[_addr] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17690:17698  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17690:17705  balances[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      dup1\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17716:17735  balances[_addr] = 0 */\n      swap2\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17761:17773  totalSupply_ */\n      sload(0x2)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17761:17787  totalSupply_.sub(_balance) */\n      tag_348\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17690:17705  balances[_addr] */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17761:17787  totalSupply_.sub(_balance) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17761:17777  totalSupply_.sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17761:17787  totalSupply_.sub(_balance) */\n      and\n      jump\t// in\n    tag_348:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17746:17758  totalSupply_ */\n      0x2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17746:17787  totalSupply_ = totalSupply_.sub(_balance) */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17803:17828  FrozenAddressWiped(_addr) */\n      mload(0x40)\n      sub(exp(0x2, 0xa0), 0x1)\n      dup4\n      and\n      swap1\n      0xfc5960f1c5a5d2b60f031bf534af053b1bf7d9881989afaeb8b1d164db23aede\n      swap1\n      0x0\n      swap1\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17844:17876  SupplyDecreased(_addr, _balance) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      dup5\n      and\n      swap2\n      0x1b7e18241beced0d7f41fbab1ea8ed468732edbcb74ec4420151654ca71c8a63\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17892:17929  Transfer(_addr, address(0), _balance) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17916:17917  0 */\n      0x0\n      swap2\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17892:17929  Transfer(_addr, address(0), _balance) */\n      dup6\n      and\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":17529:17937  function wipeFrozenAddress(address _addr) public onlyAssetProtectionRole {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":4238:4271  bytes32 public EIP712_DOMAIN_HASH */\n    tag_192:\n      sload(0xc)\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18148:18247  function isFrozen(address _addr) public view returns (bool) {\r... */\n    tag_195:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18226:18239  frozen[_addr] */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18202:18206  bool */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18226:18239  frozen[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18226:18232  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18226:18239  frozen[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":18148:18247  function isFrozen(address _addr) public view returns (bool) {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31545:31938  function setFeeRecipient(address _newFeeRecipient)\r... */\n    tag_198:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31324:31337  feeController */\n      sload(0xe)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31786:31810  address _oldFeeRecipient */\n      0x0\n      swap1\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31324:31337  feeController */\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31310:31320  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31310:31337  msg.sender == feeController */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31302:31360  require(msg.sender == feeController, 'only FeeController') */\n      tag_351\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x6f6e6c7920466565436f6e74726f6c6c65720000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_351:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31677:31707  _newFeeRecipient != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31655:31775  require(\r... */\n      tag_353\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x28\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207365742066656520726563697069656e7420746f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      0x657373207a65726f000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_353:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31813:31825  feeRecipient */\n      0xf\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31836:31867  feeRecipient = _newFeeRecipient */\n      dup4\n      dup2\n      and\n      not(sub(exp(0x2, 0xa0), 0x1))\n      dup4\n      and\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31883:31930  FeeRecipientSet(_oldFeeRecipient, feeRecipient) */\n      mload(0x40)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31813:31825  feeRecipient */\n      swap2\n      dup2\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31917:31929  feeRecipient */\n      and\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31813:31825  feeRecipient */\n      dup3\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31883:31930  FeeRecipientSet(_oldFeeRecipient, feeRecipient) */\n      0x15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31813:31825  feeRecipient */\n      0x0\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31883:31930  FeeRecipientSet(_oldFeeRecipient, feeRecipient) */\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":31545:31938  function setFeeRecipient(address _newFeeRecipient)\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3398:3429  address public supplyController */\n    tag_201:\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0x8))\n      dup2\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":609:759  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_210:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":667:674  uint256 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":699:704  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":723:729  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":715:730  require(c >= a) */\n      tag_355\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_355:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":750:751  c */\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":743:751  return c */\n      swap2\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":609:759  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_354:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":853:1286  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_220:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":911:918  uint256 */\n      0x0\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1155:1161  a == 0 */\n      dup4\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1151:1198  if (a == 0) {\r... */\n      iszero\n      tag_357\n      jumpi\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1185:1186  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1178:1186  return 0 */\n      swap2\n      pop\n      jump(tag_354)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1151:1198  if (a == 0) {\r... */\n    tag_357:\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1222:1227  a * b */\n      dup3\n      dup3\n      mul\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1226:1227  b */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1222:1223  a */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1222:1227  a * b */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1246:1251  c / a */\n      dup2\n      iszero\n      iszero\n      tag_358\n      jumpi\n      invalid\n    tag_358:\n      div\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1246:1256  c / a == b */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1238:1257  require(c / a == b) */\n      tag_355\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1421:1724  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_221:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1479:1486  uint256 */\n      0x0\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1574:1579  b > 0 */\n      dup1\n      dup4\n      gt\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1566:1580  require(b > 0) */\n      tag_361\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_361:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1607:1608  b */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1603:1604  a */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1603:1608  a / b */\n      dup2\n      iszero\n      iszero\n      tag_362\n      jumpi\n      invalid\n    tag_362:\n      div\n      swap5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":1421:1724  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":23788:26330  function _betaDelegatedTransfer(\r... */\n    tag_243:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      sload(0x5)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24040:24044  bool */\n      0x0\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      exp(0x2, 0xa0)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15369:15375  paused */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15368:15375  !paused */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":15360:15393  require(!paused, 'whenNotPaused') */\n      tag_364\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xd\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_876f99e759874a085884e6e71a9f6228292079ddbccc024d1921f2c7370e10c7\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_364:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24101:24111  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24079:24112  betaDelegateWhitelist[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24079:24100  betaDelegateWhitelist */\n      0xa\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24079:24112  betaDelegateWhitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24057:24187  require(\r... */\n      iszero\n      iszero\n      tag_366\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x2f\n      0x24\n      dup3\n      add\n      mstore\n      0x426574612066656174757265206f6e6c7920616363657074732077686974656c\n      0x44\n      dup3\n      add\n      mstore\n      0x69737465642064656c6567617465730000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_366:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24228:24229  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24220:24225  value */\n      dup9\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24220:24229  value > 0 */\n      gt\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24220:24247  value > 0 || serviceFee > 0 */\n      dup1\n      tag_367\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24246:24247  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24233:24243  serviceFee */\n      dup8\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24233:24247  serviceFee > 0 */\n      gt\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24220:24247  value > 0 || serviceFee > 0 */\n    tag_367:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24198:24324  require(\r... */\n      iszero\n      iszero\n      tag_368\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x31\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207472616e73666572207a65726f20746f6b656e732077697468\n      0x44\n      dup3\n      add\n      mstore\n      0x207a65726f207365727669636520666565000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_368:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24343:24355  block.number */\n      number\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24343:24367  block.number <= deadline */\n      dup6\n      lt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24335:24391  require(block.number <= deadline, 'transaction expired') */\n      tag_369\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      0x7472616e73616374696f6e206578706972656400000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_369:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24509:24575  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24478:24575  uint256(s) <=\r... */\n      dup12\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24456:24622  require(\r... */\n      tag_370\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      0x7369676e617475726520696e636f727265637400000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_370:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24641:24642  v */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24641:24648  v == 27 */\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24646:24648  27 */\n      0x1b\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24641:24648  v == 27 */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24641:24659  v == 27 || v == 28 */\n      dup1\n      tag_371\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24652:24653  v */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24652:24659  v == 28 */\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24657:24659  28 */\n      0x1c\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24652:24659  v == 28 */\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24641:24659  v == 27 || v == 28 */\n    tag_371:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24633:24683  require(v == 27 || v == 28, 'signature incorrect') */\n      iszero\n      iszero\n      tag_372\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      0x7369676e617475726520696e636f727265637400000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_372:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24858:24871  EIP191_HEADER */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x2\n      dup2\n      mstore\n      0x1901000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24890:24908  EIP712_DOMAIN_HASH */\n      sload(0xc)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":3997:4129  keccak256(\r... */\n      dup4\n      mload\n      0x4265746144656c6567617465645472616e73666572286164647265737320746f\n      dup2\n      mstore\n      0x2c75696e743235362076616c75652c75696e7432353620736572766963654665\n      dup2\n      dup5\n      add\n      mstore\n      0x652c75696e74323536207365712c75696e7432353620646561646c696e652900\n      dup2\n      dup7\n      add\n      mstore\n      dup5\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x5f\n      add\n      dup2\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24959:25257  abi.encodePacked( // solium-disable-line\r... */\n      dup2\n      dup5\n      add\n      mstore\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25089:25100  bytes32(to) */\n      dup15\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24959:25257  abi.encodePacked( // solium-disable-line\r... */\n      dup2\n      dup7\n      add\n      mstore\n      0x60\n      dup2\n      add\n      dup14\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup12\n      swap1\n      mstore\n      0xc0\n      dup1\n      dup3\n      add\n      dup12\n      swap1\n      mstore\n      dup6\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24959:25257  abi.encodePacked( // solium-disable-line\r... */\n      0xe0\n      swap1\n      swap2\n      add\n      swap5\n      dup6\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24927:25276  keccak256(\r... */\n      dup1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24858:24871  EIP191_HEADER */\n      swap4\n      swap5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24890:24908  EIP712_DOMAIN_HASH */\n      swap2\n      swap4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24959:25257  abi.encodePacked( // solium-disable-line\r... */\n      swap1\n      swap3\n      dup3\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24927:25276  keccak256(\r... */\n      swap1\n      dup5\n      add\n      swap1\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24959:25257  abi.encodePacked( // solium-disable-line\r... */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24927:25276  keccak256(\r... */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_373:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":58:69   */\n      dup4\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_374\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_373)\n    tag_374:\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":344:354   */\n      dup2\n      mload\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      swap4\n      dup5\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n      not(0x0)\n        /* \"--CODEGEN--\":246:276   */\n      add\n        /* \"--CODEGEN--\":311:320   */\n      dup1\n      not\n        /* \"--CODEGEN--\":295:321   */\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":340:361   */\n      swap2\n      and\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":365:398   */\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24927:25276  keccak256(\r... */\n      mload(0x40)\n      swap2\n      swap1\n      swap4\n      add\n      dup2\n      swap1\n      sub\n      dup2\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24823:25291  abi.encodePacked(\r... */\n      dup8\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24927:25276  keccak256(\r... */\n      swap1\n      swap6\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24823:25291  abi.encodePacked(\r... */\n      swap1\n      dup4\n      add\n      swap4\n      pop\n      dup4\n      swap3\n      dup8\n      add\n      swap2\n      pop\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_376:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":58:69   */\n      dup4\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_377\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_376)\n    tag_377:\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":344:354   */\n      dup2\n      mload\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      swap4\n      dup5\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n      not(0x0)\n        /* \"--CODEGEN--\":246:276   */\n      add\n        /* \"--CODEGEN--\":311:320   */\n      dup1\n      not\n        /* \"--CODEGEN--\":295:321   */\n      swap1\n      swap3\n      and\n        /* \"--CODEGEN--\":340:361   */\n      swap2\n      and\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":365:398   */\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24823:25291  abi.encodePacked(\r... */\n      swap3\n      add\n      swap5\n      dup6\n      mstore\n      pop\n      dup4\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      0x40\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup5\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      dup4\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24823:25291  abi.encodePacked(\r... */\n      swap3\n      dup2\n      add\n      swap1\n      dup2\n      swap1\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24799:25302  keccak256(\r... */\n      dup3\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24823:25291  abi.encodePacked(\r... */\n      swap3\n      swap4\n      pop\n      swap2\n      dup3\n      swap2\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24799:25302  keccak256(\r... */\n      dup5\n      add\n      swap1\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24823:25291  abi.encodePacked(\r... */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24799:25302  keccak256(\r... */\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_379:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":58:69   */\n      dup4\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_380\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_379)\n    tag_380:\n        /* \"--CODEGEN--\":274:275   */\n      0x1\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24799:25302  keccak256(\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":24784:25302  bytes32 hash = keccak256(\r... */\n      swap3\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25329:25353  ecrecover(hash, v, r, s) */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25339:25343  hash */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25345:25346  v */\n      dup12\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25348:25349  r */\n      dup15\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25351:25352  s */\n      dup15\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25329:25353  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x0\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      dup1\n      dup6\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      not(0x0)\n      and\n      not(0x0)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_382\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_382:\n      pop\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25329:25353  ecrecover(hash, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap3\n      pop\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25388:25407  _from != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25366:25480  require(\r... */\n      tag_383\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x2d\n      0x24\n      dup3\n      add\n      mstore\n      0x6572726f722064657465726d696e696e672066726f6d20616464726573732066\n      0x44\n      dup3\n      add\n      mstore\n      0x726f6d207369676e617475726500000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_383:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25499:25515  to != address(0) */\n      dup10\n      and\n      iszero\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25491:25543  require(to != address(0), 'cannot use address zero') */\n      tag_384\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x63616e6e6f74207573652061646472657373207a65726f000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_384:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25577:25587  frozen[to] */\n      dup10\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25577:25583  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25577:25587  frozen[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25576:25587  !frozen[to] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25576:25605  !frozen[to] && !frozen[_from] */\n      dup1\n      iszero\n      tag_385\n      jumpi\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25592:25605  frozen[_from] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25592:25598  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25592:25605  frozen[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25591:25605  !frozen[_from] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25576:25605  !frozen[to] && !frozen[_from] */\n    tag_385:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25576:25628  !frozen[to] && !frozen[_from] && !frozen[msg.sender] */\n      dup1\n      iszero\n      tag_386\n      jumpi\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25617:25627  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25610:25628  frozen[msg.sender] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25610:25616  frozen */\n      0x7\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25610:25628  frozen[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25609:25628  !frozen[msg.sender] */\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25576:25628  !frozen[to] && !frozen[_from] && !frozen[msg.sender] */\n    tag_386:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25554:25670  require(\r... */\n      iszero\n      iszero\n      tag_387\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xe\n      0x24\n      dup3\n      add\n      mstore\n      0x0\n      dup1\n      mload\n      0x20\n      data_834d376937710e138a4fb943edb26d656fa6ea3cecfe10e80a0fdd4d89414cac\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_387:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25728:25743  balances[_from] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25728:25736  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25728:25743  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25703:25724  value.add(serviceFee) */\n      tag_388\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25703:25708  value */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25713:25723  serviceFee */\n      dup10\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25703:25724  value.add(serviceFee) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25703:25712  value.add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25703:25724  value.add(serviceFee) */\n      and\n      jump\t// in\n    tag_388:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25703:25743  value.add(serviceFee) <= balances[_from] */\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25681:25806  require(\r... */\n      tag_389\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x696e73756666696369656e742066756e6473206f7220626164207369676e6174\n      0x44\n      dup3\n      add\n      mstore\n      0x7572650000000000000000000000000000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x84\n      add\n      swap1\n      revert\n    tag_389:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25825:25840  nextSeqs[_from] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25825:25833  nextSeqs */\n      0xb\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25825:25840  nextSeqs[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25825:25847  nextSeqs[_from] == seq */\n      dup7\n      eq\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25817:25865  require(nextSeqs[_from] == seq, 'incorrect seq') */\n      tag_390\n      jumpi\n      0x40\n      dup1\n      mload\n      mul(0x461bcd, exp(0x2, 0xe5))\n      dup2\n      mstore\n      0x20\n      0x4\n      dup3\n      add\n      mstore\n      0xd\n      0x24\n      dup3\n      add\n      mstore\n      0x696e636f72726563742073657100000000000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_390:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25911  nextSeqs[_from] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25904  nextSeqs */\n      0xb\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25911  nextSeqs[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25918  nextSeqs[_from].add(1) */\n      tag_391\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25916:25917  1 */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25918  nextSeqs[_from].add(1) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25915  nextSeqs[_from].add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25896:25918  nextSeqs[_from].add(1) */\n      and\n      jump\t// in\n    tag_391:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25878:25893  nextSeqs[_from] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25878:25886  nextSeqs */\n      0xb\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25878:25893  nextSeqs[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25878:25918  nextSeqs[_from] = nextSeqs[_from].add(1) */\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25952:25979  _transfer(_from, to, value) */\n      tag_392\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25887:25892  _from */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25969:25971  to */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25973:25978  value */\n      dup11\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25952:25961  _transfer */\n      tag_261\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25952:25979  _transfer(_from, to, value) */\n      jump\t// in\n    tag_392:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25931:25979  uint256 _principle = _transfer(_from, to, value) */\n      swap1\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25996:26011  serviceFee != 0 */\n      dup7\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25992:26222  if (serviceFee != 0) {\r... */\n      tag_393\n      jumpi\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26061  balances[_from] */\n      dup3\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26054  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26061  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26077  balances[_from].sub(serviceFee) */\n      tag_394\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26066:26076  serviceFee */\n      dup9\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26077  balances[_from].sub(serviceFee) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26065  balances[_from].sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26046:26077  balances[_from].sub(serviceFee) */\n      and\n      jump\t// in\n    tag_394:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26028:26043  balances[_from] */\n      dup4\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26028:26036  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26028:26043  balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26028:26077  balances[_from] = balances[_from].sub(serviceFee) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26124:26134  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26115:26135  balances[msg.sender] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26115:26151  balances[msg.sender].add(serviceFee) */\n      tag_395\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26140:26150  serviceFee */\n      dup9\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26115:26151  balances[msg.sender].add(serviceFee) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26115:26139  balances[msg.sender].add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26115:26151  balances[msg.sender].add(serviceFee) */\n      and\n      jump\t// in\n    tag_395:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26101:26111  msg.sender */\n      caller\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26092:26112  balances[msg.sender] */\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26092:26100  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26092:26112  balances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26092:26151  balances[msg.sender] = balances[msg.sender].add(serviceFee) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26171:26210  Transfer(_from, msg.sender, serviceFee) */\n      dup1\n      mload\n      dup11\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26101:26111  msg.sender */\n      swap2\n      swap3\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26171:26210  Transfer(_from, msg.sender, serviceFee) */\n      dup7\n      and\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":25992:26222  if (serviceFee != 0) {\r... */\n    tag_393:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26239:26300  BetaDelegatedTransfer(_from, to, _principle, seq, serviceFee) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      dup1\n      dup3\n      add\n      dup10\n      swap1\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n      dup1\n      dup13\n      and\n      swap3\n      swap1\n      dup6\n      and\n      swap2\n      0xe526c2818be85606ab8e0ea3f317c198ef15baabbb4430bcf2d836eed3c7769b\n      swap2\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      log3\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":26318:26322  true */\n      0x1\n      swap12\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":23788:26330  function _betaDelegatedTransfer(\r... */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":381:531  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_259:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":439:446  uint256 */\n      0x0\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":467:473  b <= a */\n      dup4\n      dup4\n      gt\n      iszero\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":459:474  require(b <= a) */\n      tag_397\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_397:\n      pop\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":497:502  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":381:531  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12266:12897  function _transfer(\r... */\n    tag_261:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12381:12388  uint256 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12401:12413  uint256 _fee */\n      dup1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12444:12462  uint256 _principle */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12416:12433  getFeeFor(_value) */\n      tag_399\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12426:12432  _value */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12416:12425  getFeeFor */\n      tag_71\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12416:12433  getFeeFor(_value) */\n      jump\t// in\n    tag_399:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12401:12433  uint256 _fee = getFeeFor(_value) */\n      swap2\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12465:12481  _value.sub(_fee) */\n      tag_400\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12465:12471  _value */\n      dup5\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12401:12433  uint256 _fee = getFeeFor(_value) */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12465:12481  _value.sub(_fee) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12465:12475  _value.sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12465:12481  _value.sub(_fee) */\n      and\n      jump\t// in\n    tag_400:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12525  balances[_from] */\n      dup8\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12518  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12525  balances[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12444:12481  uint256 _principle = _value.sub(_fee) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12537  balances[_from].sub(_value) */\n      tag_401\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12530:12536  _value */\n      dup6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12537  balances[_from].sub(_value) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12529  balances[_from].sub */\n      tag_259\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12510:12537  balances[_from].sub(_value) */\n      and\n      jump\t// in\n    tag_401:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12492:12507  balances[_from] */\n      dup1\n      dup9\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12492:12500  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12492:12507  balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12492:12537  balances[_from] = balances[_from].sub(_value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12564:12577  balances[_to] */\n      swap1\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12564:12593  balances[_to].add(_principle) */\n      tag_402\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12582:12592  _principle */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12564:12593  balances[_to].add(_principle) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12564:12581  balances[_to].add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12564:12593  balances[_to].add(_principle) */\n      and\n      jump\t// in\n    tag_402:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12548:12561  balances[_to] */\n      dup1\n      dup8\n      and\n      0x0\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12548:12556  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12548:12561  balances[_to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12548:12593  balances[_to] = balances[_to].add(_principle) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12609:12641  Transfer(_from, _to, _principle) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12548:12561  balances[_to] */\n      swap2\n      swap4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12609:12641  Transfer(_from, _to, _principle) */\n      swap3\n      dup11\n      and\n      swap3\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12673:12685  feeRecipient */\n      sload(0xf)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12657:12692  Transfer(_from, feeRecipient, _fee) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12673:12685  feeRecipient */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12657:12692  Transfer(_from, feeRecipient, _fee) */\n      dup10\n      and\n      swap2\n      0x0\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12714:12715  0 */\n      0x0\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12707:12711  _fee */\n      dup3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12707:12715  _fee > 0 */\n      gt\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12703:12860  if (_fee > 0) {\r... */\n      iszero\n      tag_403\n      jumpi\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12766:12778  feeRecipient */\n      and(sub(exp(0x2, 0xa0), 0x1), sload(0xf))\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12779  balances[feeRecipient] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12765  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12779  balances[feeRecipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12789  balances[feeRecipient].add(_fee) */\n      tag_404\n      swap1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12784:12788  _fee */\n      dup4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12789  balances[feeRecipient].add(_fee) */\n      0xffffffff\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12783  balances[feeRecipient].add */\n      tag_210\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12757:12789  balances[feeRecipient].add(_fee) */\n      and\n      jump\t// in\n    tag_404:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12741:12753  feeRecipient */\n      0xf\n      dup1\n      sload\n      sub(exp(0x2, 0xa0), 0x1)\n      swap1\n      dup2\n      and\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12732:12754  balances[feeRecipient] */\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12732:12740  balances */\n      0x1\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12732:12754  balances[feeRecipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12732:12789  balances[feeRecipient] = balances[feeRecipient].add(_fee) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12829:12841  feeRecipient */\n      swap2\n      sload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12809:12848  FeeCollected(_from, feeRecipient, _fee) */\n      dup3\n      mload\n      dup7\n      dup2\n      mstore\n      swap3\n      mload\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12829:12841  feeRecipient */\n      swap1\n      dup3\n      and\n      swap4\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12809:12848  FeeCollected(_from, feeRecipient, _fee) */\n      swap2\n      dup11\n      and\n      swap3\n      0xf228de527fc1b9843baac03b9a04565473a263375950e63435d4138464386f46\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12703:12860  if (_fee > 0) {\r... */\n    tag_403:\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12879:12889  _principle */\n      swap6\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":12266:12897  function _transfer(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_834d376937710e138a4fb943edb26d656fa6ea3cecfe10e80a0fdd4d89414cac 616464726573732066726f7a656e000000000000000000000000000000000000\n    data_876f99e759874a085884e6e71a9f6228292079ddbccc024d1921f2c7370e10c7 7768656e4e6f7450617573656400000000000000000000000000000000000000\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_e8e4944059266c653cca10f9830a9fee32f8d74ffbc3fe2ecadb38d10605f91e 6f6e6c794f776e65720000000000000000000000000000000000000000000000\n\n    auxdata: 0xa165627a7a723058204c242454c25ff6ebd138020f57a50a1e3d7e1e5356163e38f63fd3974d6bf3c20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3F PUSH5 0x100000000 PUSH3 0x58 DUP2 MUL DIV JUMP JUMPDEST PUSH3 0x52 PUSH5 0x100000000 PUSH3 0x13D DUP2 MUL DIV JUMP JUMPDEST PUSH3 0x406 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0xCB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920696E697469616C697A656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE PUSH1 0xD SSTORE PUSH1 0xE DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x12E PUSH5 0x100000000 PUSH3 0x294 DUP2 MUL DIV JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH3 0x1B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C794F776E65720000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x242 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920706175736564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C61646472657373 DUP2 MSTORE PUSH32 0x20766572696679696E67436F6E74726163742900000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x33 ADD DUP3 KECCAK256 DUP3 DUP5 ADD DUP5 MSTORE PUSH1 0xA DUP1 DUP5 MSTORE PUSH32 0x5061786F7320476F6C6400000000000000000000000000000000000000000000 SWAP3 DUP5 ADD SWAP3 DUP4 MSTORE SWAP4 MLOAD SWAP1 SWAP4 SWAP1 SWAP2 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x34E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x32D JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP2 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP3 DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP1 SWAP6 SWAP3 SWAP5 POP DUP5 SWAP4 POP SWAP2 DUP6 ADD SWAP2 SWAP1 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x3D5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x3B4 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0xC SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x3948 DUP1 PUSH3 0x416 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x245 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3ACB448 DUP2 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8ABDEBA EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xA91B601 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xABE469A EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x1B670561 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x21AB11F7 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x2FF79161 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x3ED4C678 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0x45596E2E EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0x45C8B1A6 EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x4E71E0C8 EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0x52875BC3 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0x57526B3F EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0x6999B377 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0x89F72C21 EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0x8CEED9CB EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0x8D1FDF2F EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x840 JUMPI DUP1 PUSH4 0x97D60D56 EQ PUSH2 0x855 JUMPI DUP1 PUSH4 0x98E52F9A EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xA7D87ED0 EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8AF JUMPI DUP1 PUSH4 0xAC69275C EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0xB5ED298A EQ PUSH2 0x8F4 JUMPI DUP1 PUSH4 0xB921E163 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xC4F62FEE EQ PUSH2 0x92D JUMPI DUP1 PUSH4 0xCC0F1786 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0xD153B60C EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0xD990C618 EQ PUSH2 0x96C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0xE2F72F03 EQ PUSH2 0x9B4 JUMPI DUP1 PUSH4 0xE306F779 EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x9EA JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0xA0B JUMPI DUP1 PUSH4 0xE7BA1012 EQ PUSH2 0xA2C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xA41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xBC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x4 CALLDATALOAD PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0xE2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD DUP4 DUP2 MUL DUP1 DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE PUSH2 0x324 SWAP6 CALLDATASIZE SWAP6 SWAP4 SWAP5 PUSH1 0x24 SWAP5 SWAP4 DUP6 ADD SWAP3 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xE34 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x324 SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 CALLDATALOAD AND SWAP6 POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x1071 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x114D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x13FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x156E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x16C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 CALLDATALOAD PUSH2 0x17C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x18BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x19D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x19E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1AAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x1C08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0x1C0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x1C1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1C2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x1C49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x1D0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1F22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x2041 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x2087 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x208D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x4 CALLDATALOAD PUSH2 0x2156 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x24CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x25EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x4 CALLDATALOAD PUSH2 0x277C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x28B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x28C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x28CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x28DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x29F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2A22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x2BD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2BD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2BF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x2D37 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0xA67 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792070726F706F7365644F776E6572206F72206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0xB45 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E206F6E6C792064697372656761726420612070726F706F736564206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E65722074686174207761732070726576696F75736C79207365740000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH32 0x24F4590B0077912A4DB89E7430DE7986175C27BEDE1B47EE039E3B421C2E798E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH32 0x5061786F7320476F6C6400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xC1C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xC54 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP3 MLOAD SWAP2 AND SWAP3 ADDRESS SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0xD73 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xDFE JUMPI POP PUSH1 0x0 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xE26 PUSH3 0xF4240 PUSH2 0xE1A PUSH1 0xD SLOAD DUP6 PUSH2 0x2D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2D91 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 MLOAD DUP11 MLOAD EQ DUP1 ISZERO PUSH2 0xE49 JUMPI POP DUP8 MLOAD DUP11 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xE56 JUMPI POP DUP7 MLOAD DUP11 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xE63 JUMPI POP DUP6 MLOAD DUP11 MLOAD EQ JUMPDEST ISZERO ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C656E677468206D69736D617463680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP11 MLOAD EQ DUP1 ISZERO PUSH2 0xECB JUMPI POP DUP4 MLOAD DUP11 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xED8 JUMPI POP DUP3 MLOAD DUP11 MLOAD EQ JUMPDEST ISZERO ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C656E677468206D69736D617463680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1003 DUP11 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF4C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF64 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF7C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF94 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFC4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP9 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFDC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP10 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFF4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2DB4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1059 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C6564207472616E736665720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0xF32 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 MLOAD PUSH1 0x41 EQ ISZERO ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E61747572652073686F756C642068617665206C656E67746820363500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x10F7 DUP4 DUP4 DUP4 DUP13 DUP13 DUP13 DUP13 DUP13 PUSH2 0x2DB4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1061 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C6564207472616E736665720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E7366657220746F2061646472657373207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1242 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x125E JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x138D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x13C1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x13F0 DUP5 DUP5 DUP5 PUSH2 0x3705 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C61646472657373 DUP2 MSTORE PUSH32 0x20766572696679696E67436F6E74726163742900000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x33 ADD DUP3 KECCAK256 DUP3 DUP5 ADD DUP5 MSTORE PUSH1 0xA DUP1 DUP5 MSTORE PUSH32 0x5061786F7320476F6C6400000000000000000000000000000000000000000000 SWAP3 DUP5 ADD SWAP3 DUP4 MSTORE SWAP4 MLOAD SWAP1 SWAP4 SWAP1 SWAP2 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x14B3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1494 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP2 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP3 DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP1 SWAP6 SWAP3 SWAP5 POP DUP5 SWAP4 POP SWAP2 DUP6 ADD SWAP2 SWAP1 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1538 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1519 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0xC SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x1594 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x15EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920466565436F6E74726F6C6C6572206F72204F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x1670 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742066656520636F6E74726F6C6C657220746F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72657373207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH32 0x9F67A87FDD653DFCDB36C8E3F851B597FB84328E3E90B118AF01DC93A94E2EB5 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1715 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1778 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920756E70617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1826 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920466565436F6E74726F6C6C65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP3 GT ISZERO PUSH2 0x1881 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742066656520726174652061626F766520313030250000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0xD DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH32 0x959EC4191DB1BD972BFBC60DC7D735D4CFB897CA3FD297F4EBD6EE918FEB84D4 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x191D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x198F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164647265737320616C726561647920756E66726F7A656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xC3776B472EBF54114339EEC9E4DC924E7CE307A97F5C1EE72B6D474E6E5E8B7C SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1A4C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7950726F706F7365644F776E6572000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP1 DUP5 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP6 DUP7 SWAP1 SSTORE SWAP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x1AD0 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920537570706C79436F6E74726F6C6C6572206F72204F776E65720000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742073657420737570706C7920636F6E74726F6C6C657220746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61646472657373207A65726F0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x40D53B0B666E4424F29D55244E7E171A1DC332ACC11D04ED4ABD884629D8CC97 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xF4240 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920696E697469616C697A656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE PUSH1 0xD SSTORE PUSH1 0xE DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CFC PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1D5B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920706175736564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x1E4A JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920617373657450726F74656374696F6E526F6C65206F72204F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0xD0C36A0AC0FE0D375386BD568FA2947A2DAE7523A0A0CFDAB20B7532A105BD1B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164647265737320616C72656164792066726F7A656E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x90811A8EDD3B3C17EEAEFFFC17F639CC69145D41A359C9843994DC2538203690 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x5041584700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x20B0 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x2106 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792057686974656C6973746572206F72204F776E657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 AND SWAP1 PUSH32 0x54E20B07412504AEE4D17519747AE2F01B9924F7F30059793FE5576C4220A0C3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x21BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79537570706C79436F6E74726F6C6C6572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x222D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F75676820737570706C79000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2258 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2286 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0x1B7E18241BECED0D7F41FBAB1EA8ED468732EDBCB74EC4420151654CA71C8A63 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2376 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E7366657220746F2061646472657373207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x240F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x2453 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x24BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24C5 CALLER DUP5 DUP5 PUSH2 0x3705 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2531 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C794265746144656C656761746557686974656C69737465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x25A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C656761746520616C72656164792077686974656C697374656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x8A22E0D8ECB02260464E9A55B7D82B17482735AE1F765DE59DEE573DFEC5B36D SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x263E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E73666572206F776E65727368697020746F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72657373207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND EQ ISZERO PUSH2 0x2725 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C657220616C7265616479206973206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP3 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH32 0xF4E75B79500AB730F8A026ED3CBA6D55331BCB64C9E9F60C548E371356E5E3C0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x27E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79537570706C79436F6E74726F6C6C6572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27F4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2822 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP7 DUP2 MSTORE SWAP3 MLOAD SWAP2 AND SWAP3 PUSH32 0xF5C174D57843E57FEA3C649FDDE37F015EF08750759CBEE88060390566A98797 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x293C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C794265746144656C656761746557686974656C69737465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x29AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C6567617465206E6F742077686974656C69737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x12ACB305BEC2ECC1E4568DECC9C8E0423749CEB6AE249EAEF4EF375EC174A49C SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2A87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x61646472657373206973206E6F742066726F7A656E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2B2A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH32 0xFC5960F1C5A5D2B60F031BF534AF053B1BF7D9881989AFAEB8B1D164DB23AEDE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH32 0x1B7E18241BECED0D7F41FBAB1EA8ED468732EDBCB74EC4420151654CA71C8A63 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2C5C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920466565436F6E74726F6C6C65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x2CE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742066656520726563697069656E7420746F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657373207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x2D76 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2D5C JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2D86 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 GT PUSH2 0x2DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2DAB JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2E9C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426574612066656174757265206F6E6C7920616363657074732077686974656C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69737465642064656C6567617465730000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 GT DUP1 PUSH2 0x2EAB JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST ISZERO ISZERO PUSH2 0x2F27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E73666572207A65726F20746F6B656E732077697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F207365727669636520666565000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST NUMBER DUP6 LT ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7472616E73616374696F6E206578706972656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP12 GT ISZERO PUSH2 0x2FF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E617475726520696E636F727265637400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP10 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x300C JUMPI POP DUP10 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST ISZERO ISZERO PUSH2 0x3062 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E617475726520696E636F727265637400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC SLOAD DUP4 MLOAD PUSH32 0x4265746144656C6567617465645472616E73666572286164647265737320746F DUP2 MSTORE PUSH32 0x2C75696E743235362076616C75652C75696E7432353620736572766963654665 DUP2 DUP5 ADD MSTORE PUSH32 0x652C75696E74323536207365712C75696E7432353620646561646C696E652900 DUP2 DUP7 ADD MSTORE DUP5 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x5F ADD DUP2 KECCAK256 DUP2 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP15 AND DUP2 DUP7 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE DUP6 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD SWAP5 DUP6 SWAP1 MSTORE DUP1 MLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP3 SWAP2 SWAP1 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3189 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x316A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 DUP8 MLOAD SWAP1 SWAP6 POP SWAP1 DUP4 ADD SWAP4 POP DUP4 SWAP3 DUP8 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x31E2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x31C3 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE SWAP3 DUP2 ADD SWAP1 DUP2 SWAP1 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x324A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x322B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP3 POP PUSH1 0x1 DUP4 DUP12 DUP15 DUP15 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP3 POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x3381 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F722064657465726D696E696E672066726F6D20616464726573732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726F6D207369676E617475726500000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND ISZERO ISZERO PUSH2 0x33E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207573652061646472657373207A65726F000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3423 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x343F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x3483 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x34AC DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST GT ISZERO PUSH2 0x3528 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E6473206F7220626164207369676E6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7572650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 EQ PUSH2 0x3597 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E636F72726563742073657100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x35C1 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x35E5 DUP3 DUP11 DUP11 PUSH2 0x3705 JUMP JUMPDEST SWAP1 POP DUP7 ISZERO PUSH2 0x368C JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3616 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3648 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP11 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP1 DUP3 ADD DUP10 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP13 AND SWAP3 SWAP1 DUP6 AND SWAP2 PUSH32 0xE526C2818BE85606AB8E0EA3F317C198EF15BAABBB4430BCF2D836EED3C7769B SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x36FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3713 DUP5 PUSH2 0xDE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3725 DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x3751 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3786 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP11 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND SWAP3 DUP10 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x3893 JUMPI PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3833 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP7 DUP2 MSTORE SWAP3 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP11 AND SWAP3 PUSH32 0xF228DE527FC1B9843BAAC03B9A04565473A263375950E63435D4138464386F46 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP STOP PUSH2 0x6464 PUSH19 0x6573732066726F7A656E000000000000000000 STOP STOP STOP STOP STOP STOP STOP STOP STOP PUSH24 0x68656E4E6F74506175736564000000000000000000000000 STOP STOP STOP STOP STOP STOP STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef PUSH16 0x6E6C794F776E65720000000000000000 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4c 0x24 0x24 SLOAD 0xc2 0x5f 0xf6 0xeb 0xd1 CODESIZE MUL 0xf JUMPI 0xa5 EXP 0x1e RETURNDATASIZE PUSH31 0x1E5356163E38F63FD3974D6BF3C20029000000000000000000000000000000 ",
							"sourceMap": "2470:30282:0:-;;;2661:5;2634:32;;-1:-1:-1;;2634:32:0;;;3215:26;;;-1:-1:-1;;;;;;3215:26:0;;;7973:70;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;8005:12:0;:10;;;;:12;:::i;:::-;8028:7;:5;;;;:7;:::i;:::-;2470:30282;;7281:430;7330:11;;;;7329:12;7321:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7376:5;:18;;7384:10;-1:-1:-1;;;;;;7376:18:0;;;;;;;;7405:13;:26;;;;;;7442:19;:32;;;;;;-1:-1:-1;7485:12:0;:16;;;7512;:29;;;;;;;;7552:7;:11;7574:13;:26;;;;;;;;7611:12;:25;;;;;;;;;;7647:27;:25;;;;:27;:::i;:::-;7685:11;:18;;-1:-1:-1;;7685:18:0;7699:4;7685:18;;;7281:430::o;15505:134::-;13074:5;;-1:-1:-1;;;;;13074:5:0;13060:10;:19;13052:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15559:6;;;;;;;15558:7;15550:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15595:6;:13;;-1:-1:-1;;;;;;15595:13:0;;;;;15624:7;;;;15595:13;;15624:7;15505:134::o;8171:369::-;3851:64;;;;;;;;;;;;;;;;;;;;;;;;;8459:4;;;;;;;;;;;;;;;;8443:22;;3851:64;;8443:22;;;;8459:4;8443:22;8459:4;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;8443:22:0;;;;;;;;;;;;8331:190;;;;;;;;;;;;;;8500:4;8331:190;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8331:190:0;;;;;;;;8307:225;;8331:190;;;;-1:-1:-1;8331:190:0;;-1:-1:-1;8307:225:0;;;;;-1:-1:-1;8307:225:0;8331:190;8307:225;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;8307:225:0;;;;;;;;;;8286:18;:246;-1:-1:-1;;;8171:369:0:o;2470:30282::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x245 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3ACB448 DUP2 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x8ABDEBA EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xA91B601 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xABE469A EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x1B670561 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x21AB11F7 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x2FF79161 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x3ED4C678 EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0x45596E2E EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0x45C8B1A6 EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x4E71E0C8 EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0x52875BC3 EQ PUSH2 0x708 JUMPI DUP1 PUSH4 0x57526B3F EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x73E JUMPI DUP1 PUSH4 0x6999B377 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x789 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0x89F72C21 EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0x8CEED9CB EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0x8D1FDF2F EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x816 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x840 JUMPI DUP1 PUSH4 0x97D60D56 EQ PUSH2 0x855 JUMPI DUP1 PUSH4 0x98E52F9A EQ PUSH2 0x876 JUMPI DUP1 PUSH4 0xA7D87ED0 EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x8AF JUMPI DUP1 PUSH4 0xAC69275C EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0xB5ED298A EQ PUSH2 0x8F4 JUMPI DUP1 PUSH4 0xB921E163 EQ PUSH2 0x915 JUMPI DUP1 PUSH4 0xC4F62FEE EQ PUSH2 0x92D JUMPI DUP1 PUSH4 0xCC0F1786 EQ PUSH2 0x942 JUMPI DUP1 PUSH4 0xD153B60C EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0xD990C618 EQ PUSH2 0x96C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x98D JUMPI DUP1 PUSH4 0xE2F72F03 EQ PUSH2 0x9B4 JUMPI DUP1 PUSH4 0xE306F779 EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0xE5839836 EQ PUSH2 0x9EA JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0xA0B JUMPI DUP1 PUSH4 0xE7BA1012 EQ PUSH2 0xA2C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xA41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0xBC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x4 CALLDATALOAD PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0xE2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD DUP4 DUP2 MUL DUP1 DUP7 ADD DUP6 ADD SWAP1 SWAP7 MSTORE DUP1 DUP6 MSTORE PUSH2 0x324 SWAP6 CALLDATASIZE SWAP6 SWAP4 SWAP5 PUSH1 0x24 SWAP5 SWAP4 DUP6 ADD SWAP3 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xE34 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x324 SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 CALLDATALOAD AND SWAP6 POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x1071 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x114D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x13FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x156E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x16C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x4 CALLDATALOAD PUSH2 0x17C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x18BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x19D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x19E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1AAD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x1C08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH2 0x1C0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x1C1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1C2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x1C49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH2 0x1D0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E27 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1F22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x2041 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2050 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x2087 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x208D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x4 CALLDATALOAD PUSH2 0x2156 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2305 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x24CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x25EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x4 CALLDATALOAD PUSH2 0x277C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x28B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 PUSH2 0x28C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x28CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x28DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x29F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2A22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x2BD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x324 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2BD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2BF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0x2D37 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0xA67 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0xABD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792070726F706F7365644F776E6572206F72206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND ISZERO ISZERO PUSH2 0xB45 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E206F6E6C792064697372656761726420612070726F706F736564206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E65722074686174207761732070726576696F75736C79207365740000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH32 0x24F4590B0077912A4DB89E7430DE7986175C27BEDE1B47EE039E3B421C2E798E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH32 0x5061786F7320476F6C6400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xC1C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xC54 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP6 DUP2 MSTORE SWAP3 MLOAD SWAP2 AND SWAP3 ADDRESS SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0xD73 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xDFE JUMPI POP PUSH1 0x0 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xE26 PUSH3 0xF4240 PUSH2 0xE1A PUSH1 0xD SLOAD DUP6 PUSH2 0x2D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2D91 AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 MLOAD DUP11 MLOAD EQ DUP1 ISZERO PUSH2 0xE49 JUMPI POP DUP8 MLOAD DUP11 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xE56 JUMPI POP DUP7 MLOAD DUP11 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xE63 JUMPI POP DUP6 MLOAD DUP11 MLOAD EQ JUMPDEST ISZERO ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C656E677468206D69736D617463680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP11 MLOAD EQ DUP1 ISZERO PUSH2 0xECB JUMPI POP DUP4 MLOAD DUP11 MLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xED8 JUMPI POP DUP3 MLOAD DUP11 MLOAD EQ JUMPDEST ISZERO ISZERO PUSH2 0xF2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C656E677468206D69736D617463680000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1061 JUMPI PUSH2 0x1003 DUP11 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF4C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF64 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF7C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF94 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP7 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFAC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP8 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFC4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP9 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFDC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP10 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xFF4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2DB4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1059 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C6564207472616E736665720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0xF32 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 MLOAD PUSH1 0x41 EQ ISZERO ISZERO PUSH2 0x10D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E61747572652073686F756C642068617665206C656E67746820363500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x10F7 DUP4 DUP4 DUP4 DUP13 DUP13 DUP13 DUP13 DUP13 PUSH2 0x2DB4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1061 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C6564207472616E736665720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x1200 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E7366657220746F2061646472657373207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1242 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x125E JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x138D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x13C1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x13F0 DUP5 DUP5 DUP5 PUSH2 0x3705 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C61646472657373 DUP2 MSTORE PUSH32 0x20766572696679696E67436F6E74726163742900000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x33 ADD DUP3 KECCAK256 DUP3 DUP5 ADD DUP5 MSTORE PUSH1 0xA DUP1 DUP5 MSTORE PUSH32 0x5061786F7320476F6C6400000000000000000000000000000000000000000000 SWAP3 DUP5 ADD SWAP3 DUP4 MSTORE SWAP4 MLOAD SWAP1 SWAP4 SWAP1 SWAP2 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x14B3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1494 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD SWAP8 SWAP1 SWAP8 MSTORE DUP2 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE ADDRESS PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP3 DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP1 SWAP6 SWAP3 SWAP5 POP DUP5 SWAP4 POP SWAP2 DUP6 ADD SWAP2 SWAP1 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1538 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1519 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0xC SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x1594 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x15EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920466565436F6E74726F6C6C6572206F72204F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x1670 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742066656520636F6E74726F6C6C657220746F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72657373207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH32 0x9F67A87FDD653DFCDB36C8E3F851B597FB84328E3E90B118AF01DC93A94E2EB5 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1715 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1778 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920756E70617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1826 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920466565436F6E74726F6C6C65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP3 GT ISZERO PUSH2 0x1881 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742066656520726174652061626F766520313030250000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0xD DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH32 0x959EC4191DB1BD972BFBC60DC7D735D4CFB897CA3FD297F4EBD6EE918FEB84D4 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x191D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x198F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164647265737320616C726561647920756E66726F7A656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0xC3776B472EBF54114339EEC9E4DC924E7CE307A97F5C1EE72B6D474E6E5E8B7C SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1A4C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7950726F706F7365644F776E6572000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP1 DUP5 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP6 DUP7 SWAP1 SSTORE SWAP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x1AD0 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x1B26 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920537570706C79436F6E74726F6C6C6572206F72204F776E65720000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742073657420737570706C7920636F6E74726F6C6C657220746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x61646472657373207A65726F0000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x40D53B0B666E4424F29D55244E7E171A1DC332ACC11D04ED4ABD884629D8CC97 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0xF4240 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920696E697469616C697A656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE PUSH1 0xD SSTORE PUSH1 0xE DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CFC PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1D5B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920706175736564000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x1E4A JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920617373657450726F74656374696F6E526F6C65206F72204F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0xD0C36A0AC0FE0D375386BD568FA2947A2DAE7523A0A0CFDAB20B7532A105BD1B SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1F84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1FF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6164647265737320616C72656164792066726F7A656E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x90811A8EDD3B3C17EEAEFFFC17F639CC69145D41A359C9843994DC2538203690 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x5041584700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ DUP1 PUSH2 0x20B0 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ JUMPDEST ISZERO ISZERO PUSH2 0x2106 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792057686974656C6973746572206F72204F776E657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 AND SWAP1 PUSH32 0x54E20B07412504AEE4D17519747AE2F01B9924F7F30059793FE5576C4220A0C3 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x21BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79537570706C79436F6E74726F6C6C6572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x222D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F75676820737570706C79000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2258 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2286 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH32 0x1B7E18241BECED0D7F41FBAB1EA8ED468732EDBCB74EC4420151654CA71C8A63 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2376 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E7366657220746F2061646472657373207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x240F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x2453 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x24BA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x24C5 CALLER DUP5 DUP5 PUSH2 0x3705 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2531 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C794265746144656C656761746557686974656C69737465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x25A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C656761746520616C72656164792077686974656C697374656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x8A22E0D8ECB02260464E9A55B7D82B17482735AE1F765DE59DEE573DFEC5B36D SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x263E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38FD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E73666572206F776E65727368697020746F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72657373207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND EQ ISZERO PUSH2 0x2725 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C657220616C7265616479206973206F776E6572000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP3 DUP3 AND SWAP3 SWAP2 AND SWAP1 PUSH32 0xF4E75B79500AB730F8A026ED3CBA6D55331BCB64C9E9F60C548E371356E5E3C0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x27E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79537570706C79436F6E74726F6C6C6572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27F4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2822 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP7 DUP2 MSTORE SWAP3 MLOAD SWAP2 AND SWAP3 PUSH32 0xF5C174D57843E57FEA3C649FDDE37F015EF08750759CBEE88060390566A98797 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x293C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C794265746144656C656761746557686974656C69737465720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x29AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C6567617465206E6F742077686974656C69737465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x12ACB305BEC2ECC1E4568DECC9C8E0423749CEB6AE249EAEF4EF375EC174A49C SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2A87 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2AF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x61646472657373206973206E6F742066726F7A656E0000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x2B2A SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH32 0xFC5960F1C5A5D2B60F031BF534AF053B1BF7D9881989AFAEB8B1D164DB23AEDE SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH32 0x1B7E18241BECED0D7F41FBAB1EA8ED468732EDBCB74EC4420151654CA71C8A63 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2C5C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920466565436F6E74726F6C6C65720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x2CE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742066656520726563697069656E7420746F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657373207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT DUP4 AND OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x2D76 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2D5C JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2D86 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2D58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 GT PUSH2 0x2DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2DAB JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2E0D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2E9C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426574612066656174757265206F6E6C7920616363657074732077686974656C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x69737465642064656C6567617465730000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 GT DUP1 PUSH2 0x2EAB JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST ISZERO ISZERO PUSH2 0x2F27 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207472616E73666572207A65726F20746F6B656E732077697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F207365727669636520666565000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST NUMBER DUP6 LT ISZERO PUSH2 0x2F7F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7472616E73616374696F6E206578706972656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP12 GT ISZERO PUSH2 0x2FF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E617475726520696E636F727265637400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP10 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x300C JUMPI POP DUP10 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST ISZERO ISZERO PUSH2 0x3062 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7369676E617475726520696E636F727265637400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC SLOAD DUP4 MLOAD PUSH32 0x4265746144656C6567617465645472616E73666572286164647265737320746F DUP2 MSTORE PUSH32 0x2C75696E743235362076616C75652C75696E7432353620736572766963654665 DUP2 DUP5 ADD MSTORE PUSH32 0x652C75696E74323536207365712C75696E7432353620646561646C696E652900 DUP2 DUP7 ADD MSTORE DUP5 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x5F ADD DUP2 KECCAK256 DUP2 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP15 AND DUP2 DUP7 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP14 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 DUP1 DUP3 ADD DUP12 SWAP1 MSTORE DUP6 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD SWAP5 DUP6 SWAP1 MSTORE DUP1 MLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 DUP3 SWAP2 SWAP1 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3189 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x316A JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP4 ADD DUP2 SWAP1 SUB DUP2 KECCAK256 DUP8 MLOAD SWAP1 SWAP6 POP SWAP1 DUP4 ADD SWAP4 POP DUP4 SWAP3 DUP8 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x31E2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x31C3 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP5 DUP6 MSTORE POP DUP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP5 SUB DUP4 ADD DUP2 MSTORE SWAP3 DUP2 ADD SWAP1 DUP2 SWAP1 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x324A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x322B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP3 POP PUSH1 0x1 DUP4 DUP12 DUP15 DUP15 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP3 POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND ISZERO ISZERO PUSH2 0x3381 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6572726F722064657465726D696E696E672066726F6D20616464726573732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x726F6D207369676E617475726500000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND ISZERO ISZERO PUSH2 0x33E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207573652061646472657373207A65726F000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3423 JUMPI POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x343F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x3483 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x389D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x34AC DUP10 DUP10 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST GT ISZERO PUSH2 0x3528 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E6473206F7220626164207369676E6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7572650000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP7 EQ PUSH2 0x3597 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E636F72726563742073657100000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x35C1 SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x35E5 DUP3 DUP11 DUP11 PUSH2 0x3705 JUMP JUMPDEST SWAP1 POP DUP7 ISZERO PUSH2 0x368C JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3616 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3648 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP11 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP1 DUP3 ADD DUP10 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP13 AND SWAP3 SWAP1 DUP6 AND SWAP2 PUSH32 0xE526C2818BE85606AB8E0EA3F317C198EF15BAABBB4430BCF2D836EED3C7769B SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x36FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3713 DUP5 PUSH2 0xDE9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3725 DUP5 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x3751 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x36EE AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3786 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP11 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 DUP4 AND SWAP3 DUP10 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x38DD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x3893 JUMPI PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3833 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2D46 AND JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP3 MLOAD DUP7 DUP2 MSTORE SWAP3 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP11 AND SWAP3 PUSH32 0xF228DE527FC1B9843BAAC03B9A04565473A263375950E63435D4138464386F46 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP STOP PUSH2 0x6464 PUSH19 0x6573732066726F7A656E000000000000000000 STOP STOP STOP STOP STOP STOP STOP STOP STOP PUSH24 0x68656E4E6F74506175736564000000000000000000000000 STOP STOP STOP STOP STOP STOP STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef PUSH16 0x6E6C794F776E65720000000000000000 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4c 0x24 0x24 SLOAD 0xc2 0x5f 0xf6 0xeb 0xd1 CODESIZE MUL 0xf JUMPI 0xa5 EXP 0x1e RETURNDATASIZE PUSH31 0x1E5356163E38F63FD3974D6BF3C20029000000000000000000000000000000 ",
							"sourceMap": "2470:30282:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13838:485;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13838:485:0;;;;;;2788:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2788:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2788:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14946:228;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14946:228:0;;;;11421:330;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11421:330:0;-1:-1:-1;;;;;11421:330:0;;;;;;;;;;;;;;;;;;;;;;;;;3280:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3280:34:0;;;;;;;;-1:-1:-1;;;;;3280:34:0;;;;;;;;;;;;;;32560:189;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32560:189:0;;;;;;;;;;;;;;;;;;;;;8651:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8651:91:0;;;;27362:1147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;;27362:1147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27362:1147:0;;;;-1:-1:-1;27362:1147:0;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;;;;;;;;-1:-1:-1;27362:1147:0;;-1:-1:-1;27362:1147:0;;-1:-1:-1;;;;;;;27362:1147:0;21749:812;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;21749:812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21749:812:0;;-1:-1:-1;;;;;;;21749:812:0;;;;-1:-1:-1;;;21749:812:0;;;;;;;;;;-1:-1:-1;21749:812:0;;;;;-1:-1:-1;21749:812:0;;;;;10135:637;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10135:637:0;-1:-1:-1;;;;;10135:637:0;;;;;;;;;;;;8171:369;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8171:369:0;;;;2938:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2938:35:0;;;;;;;;;;;;;;;;;;;;;;;30753:501;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30753:501:0;-1:-1:-1;;;;;30753:501:0;;;;;15734:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15734:140:0;;;;32085:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;32085:271:0;;;;;17134:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17134:203:0;-1:-1:-1;;;;;17134:203:0;;;;;4698:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4698:27:0;;;;14459:268;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14459:268:0;;;;18458:482;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18458:482:0;-1:-1:-1;;;;;18458:482:0;;;;;4585:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4585:42:0;;;;3215:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3215:26:0;;;;4663:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4663:28:0;;;;9703:105;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9703:105:0;-1:-1:-1;;;;;9703:105:0;;;;;7281:430;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7281:430:0;;;;15505:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15505:134:0;;;;20862:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20862:107:0;-1:-1:-1;;;;;20862:107:0;;;;;16112:407;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16112:407:0;-1:-1:-1;;;;;16112:407:0;;;;;16800:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;16800:197:0;-1:-1:-1;;;;;16800:197:0;;;;;3126:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3126:20:0;;;;2860:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2860:38:0;;;;4634:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4634:22:0;;;;29078:395;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29078:395:0;-1:-1:-1;;;;;29078:395:0;;;;;20013:477;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;20013:477:0;;;;;28760:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;28760:163:0;-1:-1:-1;;;;;28760:163:0;;;;;9070:409;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9070:409:0;-1:-1:-1;;;;;9070:409:0;;;;;;;29817:285;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;29817:285:0;-1:-1:-1;;;;;29817:285:0;;;;;13310:380;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13310:380:0;-1:-1:-1;;;;;13310:380:0;;;;;19341:400;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;19341:400:0;;;;;3470:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3470:38:0;;;;4408:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4408:37:0;;;;3153:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3153:28:0;;;;30259:285;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;30259:285:0;-1:-1:-1;;;;;30259:285:0;;;;;12092:166;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12092:166:0;-1:-1:-1;;;;;12092:166:0;;;;;;;;;;17529:408;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17529:408:0;-1:-1:-1;;;;;17529:408:0;;;;;4238:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4238:33:0;;;;18148:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18148:99:0;-1:-1:-1;;;;;18148:99:0;;;;;31545:393;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;31545:393:0;-1:-1:-1;;;;;31545:393:0;;;;;3398:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3398:31:0;;;;13838:485;13925:13;;14174:25;;-1:-1:-1;;;;;13925:13:0;13911:10;:27;;:50;;-1:-1:-1;13956:5:0;;-1:-1:-1;;;;;13956:5:0;13942:10;:19;13911:50;13889:127;;;;;;;-1:-1:-1;;;;;13889:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;14049:13;;-1:-1:-1;;;;;14049:13:0;:27;;14027:136;;;;;-1:-1:-1;;;;;14027:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14202:13:0;;;-1:-1:-1;;;;;;14226:26:0;;;;;14268:47;;-1:-1:-1;;;;;14202:13:0;;;;;;14268:47;;14202:13;;14268:47;13838:485;:::o;2788:42::-;;;;;;;;;;;;;;;;;;;:::o;14946:228::-;13074:5;;14999:16;;-1:-1:-1;;;;;13074:5:0;13060:10;:19;13052:41;;;;;-1:-1:-1;;;;;13052:41:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;13052:41:0;;;;;;;;;;;;;;;-1:-1:-1;15027:4:0;15018:14;;;;:8;:14;;;;;;;;15043:18;;;;15099:5;;-1:-1:-1;;;;;15099:5:0;15090:15;;;;;:29;;15018:14;15090:29;:19;:29;:::i;:::-;15081:5;;;-1:-1:-1;;;;;15081:5:0;;;15072:15;;;;:8;:15;;;;;;;;;:47;;;;15150:5;;15135:31;;;;;;;15150:5;;;15144:4;;-1:-1:-1;;;;;;;;;;;15135:31:0;;;;;;;;;;14946:228;:::o;11421:330::-;15369:6;;11529:4;;-1:-1:-1;;;15369:6:0;;;;15368:7;15360:33;;;;;-1:-1:-1;;;;;15360:33:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15360:33:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;11560:16:0;;;;;;:6;:16;;;;;;;;11559:17;:40;;;;-1:-1:-1;11588:10:0;11581:18;;;;:6;:18;;;;;;;;11580:19;11559:40;11551:67;;;;;;;-1:-1:-1;;;;;11551:67:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11551:67:0;;;;;;;;;;;;;;;11637:10;11629:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;11629:29:0;;;;;;;;;;;;:38;;;11683;;;;;;;11629:29;;11637:10;11683:38;;;;;;;;;;;-1:-1:-1;11739:4:0;11421:330;;;;:::o;3280:34::-;;;-1:-1:-1;;;;;3280:34:0;;:::o;32560:189::-;32616:7;32640;;32651:1;32640:12;32636:53;;;-1:-1:-1;32676:1:0;32669:8;;32636:53;32708:33;4620:7;32708:19;32719:7;;32708:6;:10;;:19;;;;:::i;:::-;:23;:33;:23;:33;:::i;:::-;32701:40;;32560:189;;;;:::o;8651:91::-;8722:12;;8651:91;:::o;27362:1147::-;27618:4;28062:9;27669:1;:8;27657:1;:8;:20;:61;;;;;27710:1;:8;27698:1;:8;:20;27657:61;:103;;;;;27751:2;:9;27739:1;:8;:21;27657:103;:148;;;;;27793:5;:12;27781:1;:8;:24;27657:148;27635:213;;;;;;;-1:-1:-1;;;;;27635:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;27893:10;:17;27881:1;:8;:29;:72;;;;;27943:3;:10;27931:1;:8;:22;27881:72;:120;;;;;27986:8;:15;27974:1;:8;:27;27881:120;27859:185;;;;;;;-1:-1:-1;;;;;27859:185:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28074:1:0;28057:423;28081:1;:8;28077:1;:12;28057:423;;;28137:280;28182:1;28184;28182:4;;;;;;;;;;;;;;;;;;28209:1;28211;28209:4;;;;;;;;;;;;;;;;;;28236:1;28238;28236:4;;;;;;;;;;;;;;;;;;28263:2;28266:1;28263:5;;;;;;;;;;;;;;;;;;28291;28297:1;28291:8;;;;;;;;;;;;;;;;;;28322:10;28333:1;28322:13;;;;;;;;;;;;;;;;;;28358:3;28362:1;28358:6;;;;;;;;;;;;;;;;;;28387:8;28396:1;28387:11;;;;;;;;;;;;;;;;;;28137:22;:280::i;:::-;28111:357;;;;;;;-1:-1:-1;;;;;28111:357:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;28091:3;;28057:423;;;-1:-1:-1;28497:4:0;;27362:1147;-1:-1:-1;;;;;;;;;27362:1147:0:o;21749:812::-;21946:4;22034:9;22054;22074:7;21971:3;:10;21985:2;21971:16;21963:60;;;;;;;-1:-1:-1;;;;;21963:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;22136:2:0;22127:12;;22121:19;22174:2;22165:12;;22159:19;22220:2;22211:12;;22205:19;22202:1;22197:28;22268:220;22121:19;22159;22197:28;22369:2;22390:5;22414:10;22443:3;22465:8;22268:22;:220::i;:::-;22246:285;;;;;;;-1:-1:-1;;;;;22246:285:0;;;;;;;;;;;;;;;;;;;;;;;;;;;10135:637;15369:6;;10265:4;;-1:-1:-1;;;15369:6:0;;;;15368:7;15360:33;;;;;-1:-1:-1;;;;;15360:33:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15360:33:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;10290:17:0;;;;10282:61;;;;;-1:-1:-1;;;;;10282:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10377:11:0;;;;;;:6;:11;;;;;;;;10376:12;:30;;;;-1:-1:-1;;;;;;10393:13:0;;;;;;:6;:13;;;;;;;;10392:14;10376:30;:53;;;;-1:-1:-1;10418:10:0;10411:18;;;;:6;:18;;;;;;;;10410:19;10376:53;10354:117;;;;;;;-1:-1:-1;;;;;10354:117:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10354:117:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;10500:15:0;;;;;;:8;:15;;;;;;10490:25;;;10482:56;;;;;-1:-1:-1;;;;;10482:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10567:14:0;;;;;;:7;:14;;;;;;;;10582:10;10567:26;;;;;;;;10557:36;;;10549:71;;;;;-1:-1:-1;;;;;10549:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10662:14:0;;;;;;:7;:14;;;;;;;;10677:10;10662:26;;;;;;;;:38;;10693:6;10662:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;10633:14:0;;;;;;:7;:14;;;;;;;;10648:10;10633:26;;;;;;;:67;10711:29;10641:5;10728:3;10733:6;10711:9;:29::i;:::-;-1:-1:-1;10760:4:0;;10135:637;-1:-1:-1;;;;10135:637:0:o;8171:369::-;3851:64;;;;;;;;;;;;;;;;;;;;;;;;;8459:4;;;;;;;;;;;;;;;;8443:22;;3851:64;;8443:22;;;;8459:4;8443:22;8459:4;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;8443:22:0;;;;;;;;;;;;8331:190;;;;;;;;;;;;;;8500:4;8331:190;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;8331:190:0;;;;;;;;8307:225;;8331:190;;;;-1:-1:-1;8331:190:0;;-1:-1:-1;8307:225:0;;;;;-1:-1:-1;8307:225:0;8331:190;8307:225;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;8307:225:0;;;;;;;;;;8286:18;:246;-1:-1:-1;;;8171:369:0:o;2938:35::-;2971:2;2938:35;:::o;30753:501::-;30860:13;;31095:25;;-1:-1:-1;;;;;30860:13:0;30846:10;:27;;:50;;-1:-1:-1;30891:5:0;;-1:-1:-1;;;;;30891:5:0;30877:10;:19;30846:50;30824:127;;;;;;;-1:-1:-1;;;;;30824:127:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30984:31:0;;;;30962:122;;;;;-1:-1:-1;;;;;30962:122:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31123:13:0;;;-1:-1:-1;;;;;31147:33:0;;;-1:-1:-1;;;;;;31147:33:0;;;;;;;31196:50;;31123:13;;;;31232;;31123;;31196:50;;31123:13;;31196:50;30753:501;;:::o;15734:140::-;13074:5;;-1:-1:-1;;;;;13074:5:0;13060:10;:19;13052:41;;;;;-1:-1:-1;;;;;13052:41:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;13052:41:0;;;;;;;;;;;;;;;15789:6;;-1:-1:-1;;;15789:6:0;;;;15781:35;;;;;;;-1:-1:-1;;;;;15781:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;15827:6;:14;;-1:-1:-1;;15827:14:0;;;15857:9;;;;15836:5;;15857:9;15734:140::o;32085:271::-;31324:13;;32239:19;;-1:-1:-1;;;;;31324:13:0;31310:10;:27;31302:58;;;;;-1:-1:-1;;;;;31302:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4620:7;32170:23;;;32162:66;;;;;-1:-1:-1;;;;;32162:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32261:7:0;;;32279:21;;;;32316:32;;32289:11;;32261:7;;32316:32;;-1:-1:-1;;32316:32:0;32085:271;;:::o;17134:203::-;16595:19;;-1:-1:-1;;;;;16595:19:0;16581:10;:33;16573:69;;;;;-1:-1:-1;;;;;16573:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17217:13:0;;;;;;:6;:13;;;;;;;;17209:50;;;;;;;-1:-1:-1;;;;;17209:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17270:13:0;;17286:5;17270:13;;;:6;:13;;;;;;:21;;-1:-1:-1;;17270:21:0;;;17307:22;;;17286:5;17307:22;17134:203;:::o;4698:27::-;;;-1:-1:-1;;;;;4698:27:0;;:::o;14459:268::-;14525:13;;14571:17;;-1:-1:-1;;;;;14525:13:0;14511:10;:27;14503:57;;;;;-1:-1:-1;;;;;14503:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14591:5:0;;;14615:13;;;-1:-1:-1;;;;;;14607:21:0;;;-1:-1:-1;;;;;14615:13:0;;;14607:21;;;;;;;;14639:26;;;;;14681:38;;14591:5;;;;14713;;14591;;14681:38;;14591:5;;14681:38;14459:268;:::o;18458:482::-;18571:16;;-1:-1:-1;;;;;18571:16:0;18557:10;:30;;:53;;-1:-1:-1;18605:5:0;;-1:-1:-1;;;;;18605:5:0;18591:10;:19;18557:53;18535:133;;;;;;;-1:-1:-1;;;;;18535:133:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18701:34:0;;;;18679:128;;;;;-1:-1:-1;;;;;18679:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18843:16;;18823:59;;-1:-1:-1;;;;;18823:59:0;;;;18843:16;;18823:59;;18843:16;;18823:59;18893:16;:39;;-1:-1:-1;;;;;;18893:39:0;-1:-1:-1;;;;;18893:39:0;;;;;;;;;;18458:482::o;4585:42::-;4620:7;4585:42;:::o;3215:26::-;;;-1:-1:-1;;;3215:26:0;;;;;:::o;4663:28::-;;;-1:-1:-1;;;;;4663:28:0;;:::o;9703:105::-;-1:-1:-1;;;;;9785:15:0;9758:7;9785:15;;;:8;:15;;;;;;;9703:105::o;7281:430::-;7330:11;;;;7329:12;7321:44;;;;;-1:-1:-1;;;;;7321:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;7376:5;:18;;7384:10;-1:-1:-1;;;;;;7376:18:0;;;;;;;;7405:13;:26;;;;;;7442:19;:32;;;;;;-1:-1:-1;7485:12:0;:16;;;7512;:29;;;;;;;;7552:7;:11;7574:13;:26;;;;;;;;7611:12;:25;;;;;;;;;;7647:27;:25;:27::i;:::-;7685:11;:18;;-1:-1:-1;;7685:18:0;7699:4;7685:18;;;7281:430::o;15505:134::-;13074:5;;-1:-1:-1;;;;;13074:5:0;13060:10;:19;13052:41;;;;;-1:-1:-1;;;;;13052:41:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;13052:41:0;;;;;;;;;;;;;;;15559:6;;-1:-1:-1;;;15559:6:0;;;;15558:7;15550:34;;;;;-1:-1:-1;;;;;15550:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;15595:6;:13;;-1:-1:-1;;15595:13:0;-1:-1:-1;;;15595:13:0;;;15624:7;;;;15595:13;;15624:7;15505:134::o;20862:107::-;-1:-1:-1;;;;;20945:16:0;20918:7;20945:16;;;:8;:16;;;;;;;20862:107::o;16112:407::-;16231:19;;-1:-1:-1;;;;;16231:19:0;16217:10;:33;;:56;;-1:-1:-1;16268:5:0;;-1:-1:-1;;;;;16268:5:0;16254:10;:19;16217:56;16195:139;;;;;;;-1:-1:-1;;;;;16195:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16387:19;;16350:105;;-1:-1:-1;;;;;16350:105:0;;;;16387:19;;16350:105;;16387:19;;16350:105;16466:19;:45;;-1:-1:-1;;;;;;16466:45:0;-1:-1:-1;;;;;16466:45:0;;;;;;;;;;16112:407::o;16800:197::-;16595:19;;-1:-1:-1;;;;;16595:19:0;16581:10;:33;16573:69;;;;;-1:-1:-1;;;;;16573:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16882:13:0;;;;;;:6;:13;;;;;;;;16881:14;16873:49;;;;;-1:-1:-1;;;;;16873:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16933:13:0;;;;;;:6;:13;;;;;;:20;;-1:-1:-1;;16933:20:0;16949:4;16933:20;;;16969;;;16933:13;16969:20;16800:197;:::o;3126:20::-;;;-1:-1:-1;;;;;3126:20:0;;:::o;2860:38::-;;;;;;;;;;;;;;;;;;;:::o;4634:22::-;;;;:::o;29078:395::-;29193:23;;-1:-1:-1;;;;;29193:23:0;29179:10;:37;;:60;;-1:-1:-1;29234:5:0;;-1:-1:-1;;;;;29234:5:0;29220:10;:19;29179:60;29157:135;;;;;;;-1:-1:-1;;;;;29157:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;29303:23;:41;;-1:-1:-1;;;;;;29303:41:0;-1:-1:-1;;;;;29303:41:0;;;;;;;;;;29360:105;;29303:41;;29401:23;;29360:105;;-1:-1:-1;;29360:105:0;29078:395;:::o;20013:477::-;19013:16;;20117:12;;-1:-1:-1;;;;;19013:16:0;18999:10;:30;18991:63;;;;;-1:-1:-1;;;;;18991:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;20174:16;;-1:-1:-1;;;;;20174:16:0;20165:26;;;;:8;:26;;;;;;20155:36;;;20147:66;;;;;-1:-1:-1;;;;;20147:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;20262:16;;-1:-1:-1;;;;;20262:16:0;20253:26;;;;:8;:26;;;;;;:38;;20284:6;20253:38;:30;:38;:::i;:::-;20233:16;;-1:-1:-1;;;;;20233:16:0;20224:26;;;;:8;:26;;;;;:67;20317:12;;:24;;20334:6;20317:24;:16;:24;:::i;:::-;20302:12;:39;20373:16;;20357:41;;;;;;;;-1:-1:-1;;;;;20373:16:0;;;;20357:41;;;;;;;;;20423:16;;20414:46;;;;;;;;20449:1;;-1:-1:-1;;;;;20423:16:0;;-1:-1:-1;;;;;;;;;;;20414:46:0;;;;;;;;;-1:-1:-1;20478:4:0;20013:477;;;:::o;28760:163::-;-1:-1:-1;;;;;28887:28:0;28858:4;28887:28;;;:21;:28;;;;;;;;;28760:163::o;9070:409::-;15369:6;;9174:4;;-1:-1:-1;;;15369:6:0;;;;15368:7;15360:33;;;;;-1:-1:-1;;;;;15360:33:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15360:33:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;9204:17:0;;;;9196:61;;;;;-1:-1:-1;;;;;9196:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9277:11:0;;;;;;:6;:11;;;;;;;;9276:12;:35;;;;-1:-1:-1;9300:10:0;9293:18;;;;:6;:18;;;;;;;;9292:19;9276:35;9268:62;;;;;;;-1:-1:-1;;;;;9268:62:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9268:62:0;;;;;;;;;;;;;;;9368:10;9359:20;;;;:8;:20;;;;;;9349:30;;;9341:61;;;;;-1:-1:-1;;;;;9341:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;9415:34;9425:10;9437:3;9442:6;9415:9;:34::i;:::-;-1:-1:-1;9467:4:0;;9070:409;-1:-1:-1;;;9070:409:0:o;29817:285::-;29567:23;;-1:-1:-1;;;;;29567:23:0;29553:10;:37;29531:114;;;;;-1:-1:-1;;;;;29531:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29941:28:0;;;;;;:21;:28;;;;;;;;29940:29;29932:70;;;;;-1:-1:-1;;;;;29932:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30013:28:0;;;;;;:21;:28;;;;;;:35;;-1:-1:-1;;30013:35:0;30044:4;30013:35;;;30064:30;;;30013:28;30064:30;29817:285;:::o;13310:380::-;13074:5;;-1:-1:-1;;;;;13074:5:0;13060:10;:19;13052:41;;;;;-1:-1:-1;;;;;13052:41:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;13052:41:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;13406:28:0;;;;13384:119;;;;;-1:-1:-1;;;;;13384:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13522:10;-1:-1:-1;;;;;13522:28:0;;;;13514:64;;;;;-1:-1:-1;;;;;13514:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;13589:13;:30;;-1:-1:-1;;;;;;13589:30:0;-1:-1:-1;;;;;13589:30:0;;;;;;;;;;;13661:5;;13635:47;;13668:13;;;;13661:5;;;13635:47;;-1:-1:-1;;13635:47:0;13310:380;:::o;19341:400::-;19013:16;;19445:12;;-1:-1:-1;;;;;19013:16:0;18999:10;:30;18991:63;;;;;-1:-1:-1;;;;;18991:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;19490:12;;:24;;19507:6;19490:24;:16;:24;:::i;:::-;19475:12;:39;19563:16;;-1:-1:-1;;;;;19563:16:0;19554:26;;;;:8;:26;;;;;;:38;;19585:6;19554:38;:30;:38;:::i;:::-;19534:16;;;-1:-1:-1;;;;;19534:16:0;;;19525:26;;;;:8;:26;;;;;;;;;:67;;;;19624:16;;19608:41;;;;;;;19624:16;;;19608:41;;;;;;;;19686:16;;19665:46;;;;;;;;-1:-1:-1;;;;;19686:16:0;;;;;;-1:-1:-1;;;;;;;;;;;19665:46:0;;;;;;;;;-1:-1:-1;19729:4:0;19341:400;;;:::o;3470:38::-;;;-1:-1:-1;;;;;3470:38:0;;:::o;4408:37::-;4444:1;4408:37;:::o;3153:28::-;;;-1:-1:-1;;;;;3153:28:0;;:::o;30259:285::-;29567:23;;-1:-1:-1;;;;;29567:23:0;29553:10;:37;29531:114;;;;;-1:-1:-1;;;;;29531:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30384:28:0;;;;;;:21;:28;;;;;;;;30376:65;;;;;;;-1:-1:-1;;;;;30376:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30452:28:0;;30483:5;30452:28;;;:21;:28;;;;;;:36;;-1:-1:-1;;30452:36:0;;;30504:32;;;30483:5;30504:32;30259:285;:::o;12092:166::-;-1:-1:-1;;;;;12225:15:0;;;12193:7;12225:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;12092:166::o;17529:408::-;16595:19;;17671:16;;-1:-1:-1;;;;;16595:19:0;16581:10;:33;16573:69;;;;;-1:-1:-1;;;;;16573:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17621:13:0;;;;;;:6;:13;;;;;;;;17613:47;;;;;;;-1:-1:-1;;;;;17613:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17690:15:0;;;;;;:8;:15;;;;;;;17716:19;;;17761:12;;:26;;17690:15;17761:26;:16;:26;:::i;:::-;17746:12;:41;17803:25;;-1:-1:-1;;;;;17803:25:0;;;;;;;;17844:32;;;;;;;;-1:-1:-1;;;;;17844:32:0;;;;;;;;;;;;;17892:37;;;;;;;;17916:1;;-1:-1:-1;;;;;17892:37:0;;;-1:-1:-1;;;;;;;;;;;17892:37:0;;;;;;;;17529:408;;:::o;4238:33::-;;;;:::o;18148:99::-;-1:-1:-1;;;;;18226:13:0;18202:4;18226:13;;;:6;:13;;;;;;;;;18148:99::o;31545:393::-;31324:13;;31786:24;;-1:-1:-1;;;;;31324:13:0;31310:10;:27;31302:58;;;;;-1:-1:-1;;;;;31302:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31677:30:0;;;;31655:120;;;;;-1:-1:-1;;;;;31655:120:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31813:12:0;;;-1:-1:-1;;;;;31836:31:0;;;-1:-1:-1;;;;;;31836:31:0;;;;;;;31883:47;;31813:12;;;;31917;;31813;;31883:47;;31813:12;;31883:47;31545:393;;:::o;3398:31::-;;;-1:-1:-1;;;;;3398:31:0;;:::o;609:150::-;667:7;699:5;;;723:6;;;;715:15;;;;;;750:1;743:8;;609:150;;;;;;:::o;853:433::-;911:7;;1155:6;;1151:47;;;1185:1;1178:8;;;;1151:47;-1:-1:-1;1222:5:0;;;1226:1;1222;:5;1246;;;;;;;;:10;1238:19;;;;;1421:303;1479:7;;1574:5;;;1566:14;;;;;;1607:1;1603;:5;;;;;;;;;1421:303;-1:-1:-1;;;;1421:303:0:o;23788:2542::-;15369:6;;24040:4;;;;;;;;-1:-1:-1;;;15369:6:0;;;;15368:7;15360:33;;;;;-1:-1:-1;;;;;15360:33:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;15360:33:0;;;;;;;;;;;;;;;24101:10;24079:33;;;;:21;:33;;;;;;;;24057:130;;;;;;;-1:-1:-1;;;;;24057:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24228:1;24220:5;:9;:27;;;;24246:1;24233:10;:14;24220:27;24198:126;;;;;;;-1:-1:-1;;;;;24198:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24343:12;:24;-1:-1:-1;24343:24:0;24335:56;;;;;-1:-1:-1;;;;;24335:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24509:66;24478:97;;;24456:166;;;;;-1:-1:-1;;;;;24456:166:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24641:1;:7;;24646:2;24641:7;:18;;;;24652:1;:7;;24657:2;24652:7;24641:18;24633:50;;;;;;;-1:-1:-1;;;;;24633:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;24858:13;;;;;;;;;;;;;;;;;;;;24890:18;;3997:132;;;;;;;;;;;;;;;;;;;;;;;;;24959:298;;;;-1:-1:-1;;;;;25089:11:0;;24959:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;24959:298:0;;;;;;;;24927:349;;24858:13;;24890:18;;24959:298;;;;24927:349;;;;;24959:298;24927:349;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;24927:349:0;;;;;;;;;;;24823:468;;24927:349;;-1:-1:-1;24823:468:0;;;;-1:-1:-1;24823:468:0;;;;;-1:-1:-1;24823:468:0;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;24823:468:0;;;;;-1:-1:-1;24823:468:0;;;;;;;-1:-1:-1;24823:468:0;;;26:21:-1;;;22:32;;6:49;;24823:468:0;;;;;;;24799:503;;24823:468;;-1:-1:-1;24823:468:0;;;24799:503;;;;24823:468;24799:503;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;24799:503:0;;;;;;;;;;;;;;;;24784:518;;25329:24;25339:4;25345:1;25348;25351;25329:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;25329:24:0;;-1:-1:-1;;25329:24:0;;;-1:-1:-1;;;;;;;25388:19:0;;;;25366:114;;;;;-1:-1:-1;;;;;25366:114:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25499:16:0;;;;25491:52;;;;;-1:-1:-1;;;;;25491:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25577:10:0;;;;;;:6;:10;;;;;;;;25576:11;:29;;;;-1:-1:-1;;;;;;25592:13:0;;;;;;:6;:13;;;;;;;;25591:14;25576:29;:52;;;;-1:-1:-1;25617:10:0;25610:18;;;;:6;:18;;;;;;;;25609:19;25576:52;25554:116;;;;;;;-1:-1:-1;;;;;25554:116:0;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;25554:116:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;25728:15:0;;;;;;:8;:15;;;;;;25703:21;:5;25713:10;25703:21;:9;:21;:::i;:::-;:40;;25681:125;;;;;-1:-1:-1;;;;;25681:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25825:15:0;;;;;;:8;:15;;;;;;:22;;25817:48;;;;;-1:-1:-1;;;;;25817:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25896:15:0;;;;;;:8;:15;;;;;;:22;;25916:1;25896:22;:19;:22;:::i;:::-;-1:-1:-1;;;;;25878:15:0;;;;;;:8;:15;;;;;:40;25952:27;25887:5;25969:2;25973:5;25952:9;:27::i;:::-;25931:48;-1:-1:-1;25996:15:0;;25992:230;;-1:-1:-1;;;;;26046:15:0;;;;;;:8;:15;;;;;;:31;;26066:10;26046:31;:19;:31;:::i;:::-;-1:-1:-1;;;;;26028:15:0;;;;;;:8;:15;;;;;;:49;;;;26124:10;26115:20;;;;:36;;26140:10;26115:36;:24;:36;:::i;:::-;26101:10;26092:20;;;;:8;:20;;;;;;;;;:59;;;;26171:39;;;;;;;26101:10;;-1:-1:-1;;;;;26171:39:0;;;-1:-1:-1;;;;;;;;;;;26171:39:0;;;;;;;;;25992:230;26239:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26239:61:0;;;;;;;;;;;;;;;;;-1:-1:-1;26318:4:0;;23788:2542;-1:-1:-1;;;;;;;;;;;23788:2542:0:o;381:150::-;439:7;;467:6;;;;459:15;;;;;;-1:-1:-1;;497:5:0;;;381:150::o;12266:631::-;12381:7;12401:12;12444:18;12416:17;12426:6;12416:9;:17::i;:::-;12401:32;-1:-1:-1;12465:16:0;:6;12401:32;12465:16;:10;:16;:::i;:::-;-1:-1:-1;;;;;12510:15:0;;;;;;:8;:15;;;;;;12444:37;;-1:-1:-1;12510:27:0;;12530:6;12510:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;12492:15:0;;;;;;;:8;:15;;;;;;:45;;;;12564:13;;;;;;;:29;;12582:10;12564:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;12548:13:0;;;;;;;:8;:13;;;;;;;;;:45;;;;12609:32;;;;;;;12548:13;;12609:32;;;;-1:-1:-1;;;;;;;;;;;12609:32:0;;;;;;;;12673:12;;12657:35;;;;;;;;-1:-1:-1;;;;;12673:12:0;;;;12657:35;;;-1:-1:-1;;;;;;;;;;;12657:35:0;;;;;;;;;12714:1;12707:4;:8;12703:157;;;12766:12;;-1:-1:-1;;;;;12766:12:0;12757:22;;;;:8;:22;;;;;;:32;;12784:4;12757:32;:26;:32;:::i;:::-;12741:12;;;-1:-1:-1;;;;;12741:12:0;;;12732:22;;;;:8;:22;;;;;;;;;:57;;;;12829:12;;12809:39;;;;;;;12829:12;;;;12809:39;;;;;;;;;;;;;12703:157;12879:10;12266:631;-1:-1:-1;;;;;12266:631:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2932800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"EIP712_DOMAIN_HASH()": "1352",
								"allowance(address,address)": "1632",
								"approve(address,uint256)": "infinite",
								"assetProtectionRole()": "625",
								"balanceOf(address)": "1090",
								"betaDelegateWhitelister()": "1373",
								"betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256)": "infinite",
								"betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[])": "infinite",
								"claimOwnership()": "42963",
								"decimals()": "435",
								"decreaseSupply(uint256)": "infinite",
								"disregardProposeOwner()": "22569",
								"feeController()": "999",
								"feeDecimals()": "1051",
								"feeParts()": "602",
								"feeRate()": "1044",
								"feeRecipient()": "889",
								"freeze(address)": "22982",
								"getFeeFor(uint256)": "infinite",
								"increaseSupply(uint256)": "infinite",
								"initialize()": "infinite",
								"initializeDomainSeparator()": "infinite",
								"isFrozen(address)": "1608",
								"isWhitelistedBetaDelegate(address)": "1344",
								"name()": "infinite",
								"nextSeqOf(address)": "1156",
								"owner()": "1153",
								"pause()": "infinite",
								"paused()": "910",
								"proposeOwner(address)": "infinite",
								"proposedOwner()": "1417",
								"reclaimPAXG()": "infinite",
								"setAssetProtectionRole(address)": "23582",
								"setBetaDelegateWhitelister(address)": "23413",
								"setFeeController(address)": "23112",
								"setFeeRate(uint256)": "22524",
								"setFeeRecipient(address)": "23552",
								"setSupplyController(address)": "23504",
								"supplyController()": "1571",
								"symbol()": "infinite",
								"totalSupply()": "516",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unfreeze(address)": "22715",
								"unpause()": "infinite",
								"unwhitelistBetaDelegate(address)": "23287",
								"whitelistBetaDelegate(address)": "23158",
								"wipeFrozenAddress(address)": "infinite"
							},
							"internal": {
								"_betaDelegatedTransfer(bytes32,bytes32,uint8,address,uint256,uint256,uint256,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "MSTORE"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2634,
									"end": 2666,
									"name": "DUP1"
								},
								{
									"begin": 2634,
									"end": 2666,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 2634,
									"end": 2666,
									"name": "AND"
								},
								{
									"begin": 2634,
									"end": 2666,
									"name": "SWAP1"
								},
								{
									"begin": 2634,
									"end": 2666,
									"name": "SSTORE"
								},
								{
									"begin": 3215,
									"end": 3241,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 3215,
									"end": 3241,
									"name": "DUP1"
								},
								{
									"begin": 3215,
									"end": 3241,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 3215,
									"end": 3241,
									"name": "AND"
								},
								{
									"begin": 3215,
									"end": 3241,
									"name": "SWAP1"
								},
								{
									"begin": 3215,
									"end": 3241,
									"name": "SSTORE"
								},
								{
									"begin": 7973,
									"end": 8043,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 8005,
									"end": 8017,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 8005,
									"end": 8015,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 8005,
									"end": 8015,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 8005,
									"end": 8015,
									"name": "DUP2"
								},
								{
									"begin": 8005,
									"end": 8015,
									"name": "MUL"
								},
								{
									"begin": 8005,
									"end": 8017,
									"name": "DIV"
								},
								{
									"begin": 8005,
									"end": 8017,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8005,
									"end": 8017,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 8005,
									"end": 8017,
									"name": "JUMPDEST"
								},
								{
									"begin": 8028,
									"end": 8035,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8028,
									"end": 8033,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 8028,
									"end": 8033,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 8028,
									"end": 8033,
									"name": "DUP2"
								},
								{
									"begin": 8028,
									"end": 8033,
									"name": "MUL"
								},
								{
									"begin": 8028,
									"end": 8035,
									"name": "DIV"
								},
								{
									"begin": 8028,
									"end": 8035,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 8028,
									"end": 8035,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8028,
									"end": 8035,
									"name": "JUMPDEST"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "JUMP"
								},
								{
									"begin": 7281,
									"end": 7711,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 7281,
									"end": 7711,
									"name": "JUMPDEST"
								},
								{
									"begin": 7330,
									"end": 7341,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7330,
									"end": 7341,
									"name": "SLOAD"
								},
								{
									"begin": 7330,
									"end": 7341,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7330,
									"end": 7341,
									"name": "AND"
								},
								{
									"begin": 7329,
									"end": 7341,
									"name": "ISZERO"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "JUMPI"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "DUP1"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "MLOAD"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "DUP2"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "MSTORE"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "DUP3"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "ADD"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "MSTORE"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "13"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "DUP3"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "ADD"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "MSTORE"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "616C726561647920696E697469616C697A656400000000000000000000000000"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "DUP3"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "ADD"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "MSTORE"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "SWAP1"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "MLOAD"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "SWAP1"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "DUP2"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "SWAP1"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "SUB"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "ADD"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "SWAP1"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "REVERT"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 7321,
									"end": 7365,
									"name": "JUMPDEST"
								},
								{
									"begin": 7376,
									"end": 7381,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "DUP1"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "SLOAD"
								},
								{
									"begin": 7384,
									"end": 7394,
									"name": "CALLER"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "SWAP2"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "DUP3"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "AND"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "DUP2"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "OR"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "SWAP1"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "SWAP3"
								},
								{
									"begin": 7376,
									"end": 7394,
									"name": "SSTORE"
								},
								{
									"begin": 7405,
									"end": 7418,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 7405,
									"end": 7431,
									"name": "DUP1"
								},
								{
									"begin": 7405,
									"end": 7431,
									"name": "SLOAD"
								},
								{
									"begin": 7405,
									"end": 7431,
									"name": "DUP3"
								},
								{
									"begin": 7405,
									"end": 7431,
									"name": "AND"
								},
								{
									"begin": 7405,
									"end": 7431,
									"name": "SWAP1"
								},
								{
									"begin": 7405,
									"end": 7431,
									"name": "SSTORE"
								},
								{
									"begin": 7442,
									"end": 7461,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 7442,
									"end": 7474,
									"name": "DUP1"
								},
								{
									"begin": 7442,
									"end": 7474,
									"name": "SLOAD"
								},
								{
									"begin": 7442,
									"end": 7474,
									"name": "DUP3"
								},
								{
									"begin": 7442,
									"end": 7474,
									"name": "AND"
								},
								{
									"begin": 7442,
									"end": 7474,
									"name": "SWAP1"
								},
								{
									"begin": 7442,
									"end": 7474,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7485,
									"end": 7497,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 7485,
									"end": 7501,
									"name": "DUP2"
								},
								{
									"begin": 7485,
									"end": 7501,
									"name": "SWAP1"
								},
								{
									"begin": 7485,
									"end": 7501,
									"name": "SSTORE"
								},
								{
									"begin": 7512,
									"end": 7528,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "DUP1"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "SLOAD"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "DUP4"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "AND"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "DUP5"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "OR"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "SWAP1"
								},
								{
									"begin": 7512,
									"end": 7541,
									"name": "SSTORE"
								},
								{
									"begin": 7552,
									"end": 7559,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 7552,
									"end": 7563,
									"name": "SSTORE"
								},
								{
									"begin": 7574,
									"end": 7587,
									"name": "PUSH",
									"value": "E"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "DUP1"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "SLOAD"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "DUP3"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "AND"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "DUP4"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "OR"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "SWAP1"
								},
								{
									"begin": 7574,
									"end": 7600,
									"name": "SSTORE"
								},
								{
									"begin": 7611,
									"end": 7623,
									"name": "PUSH",
									"value": "F"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "DUP1"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SLOAD"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SWAP1"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SWAP2"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "AND"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SWAP1"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SWAP2"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "OR"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SWAP1"
								},
								{
									"begin": 7611,
									"end": 7636,
									"name": "SSTORE"
								},
								{
									"begin": 7647,
									"end": 7674,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 7647,
									"end": 7672,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 7647,
									"end": 7672,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 7647,
									"end": 7672,
									"name": "DUP2"
								},
								{
									"begin": 7647,
									"end": 7672,
									"name": "MUL"
								},
								{
									"begin": 7647,
									"end": 7674,
									"name": "DIV"
								},
								{
									"begin": 7647,
									"end": 7674,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 7647,
									"end": 7674,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 7647,
									"end": 7674,
									"name": "JUMPDEST"
								},
								{
									"begin": 7685,
									"end": 7696,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7685,
									"end": 7703,
									"name": "DUP1"
								},
								{
									"begin": 7685,
									"end": 7703,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 7685,
									"end": 7703,
									"name": "AND"
								},
								{
									"begin": 7699,
									"end": 7703,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 7685,
									"end": 7703,
									"name": "OR"
								},
								{
									"begin": 7685,
									"end": 7703,
									"name": "SWAP1"
								},
								{
									"begin": 7685,
									"end": 7703,
									"name": "SSTORE"
								},
								{
									"begin": 7281,
									"end": 7711,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 15505,
									"end": 15639,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 15505,
									"end": 15639,
									"name": "JUMPDEST"
								},
								{
									"begin": 13074,
									"end": 13079,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 13074,
									"end": 13079,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 13074,
									"end": 13079,
									"name": "AND"
								},
								{
									"begin": 13060,
									"end": 13070,
									"name": "CALLER"
								},
								{
									"begin": 13060,
									"end": 13079,
									"name": "EQ"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "JUMPI"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "DUP1"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "MLOAD"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "DUP2"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "MSTORE"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "DUP3"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "ADD"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "MSTORE"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "DUP3"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "ADD"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "MSTORE"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "6F6E6C794F776E65720000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "DUP3"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "ADD"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "MSTORE"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "SWAP1"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "MLOAD"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "SWAP1"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "DUP2"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "SWAP1"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "SUB"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "ADD"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "SWAP1"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "REVERT"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 13052,
									"end": 13093,
									"name": "JUMPDEST"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "SLOAD"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "PUSH",
									"value": "10000000000000000000000000000000000000000"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "SWAP1"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "DIV"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 15559,
									"end": 15565,
									"name": "AND"
								},
								{
									"begin": 15558,
									"end": 15565,
									"name": "ISZERO"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "JUMPI"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "DUP1"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "MLOAD"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "E"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "24"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "616C726561647920706175736564000000000000000000000000000000000000"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "44"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "DUP3"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "MSTORE"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "MLOAD"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "DUP2"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "SUB"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "ADD"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "SWAP1"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "REVERT"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 15550,
									"end": 15584,
									"name": "JUMPDEST"
								},
								{
									"begin": 15595,
									"end": 15601,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "DUP1"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MUL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "AND"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "PUSH",
									"value": "10000000000000000000000000000000000000000"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "OR"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "SWAP1"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "SSTORE"
								},
								{
									"begin": 15624,
									"end": 15631,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 15624,
									"end": 15631,
									"name": "MLOAD"
								},
								{
									"begin": 15624,
									"end": 15631,
									"name": "PUSH",
									"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
								},
								{
									"begin": 15624,
									"end": 15631,
									"name": "SWAP1"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 15595,
									"end": 15608,
									"name": "SWAP1"
								},
								{
									"begin": 15624,
									"end": 15631,
									"name": "LOG1"
								},
								{
									"begin": 15505,
									"end": 15639,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 8171,
									"end": 8540,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 8171,
									"end": 8540,
									"name": "JUMPDEST"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP1"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "MLOAD"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "PUSH",
									"value": "454950373132446F6D61696E28737472696E67206E616D652C61646472657373"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP2"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "MSTORE"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "PUSH",
									"value": "20766572696679696E67436F6E74726163742900000000000000000000000000"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP1"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP4"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "ADD"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP2"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP1"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP2"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "MSTORE"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP3"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "MLOAD"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP2"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP3"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP1"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SUB"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "PUSH",
									"value": "33"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "ADD"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "DUP3"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "KECCAK256"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP3"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP5"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "ADD"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP5"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "MSTORE"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP1"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP5"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "MSTORE"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "PUSH",
									"value": "5061786F7320476F6C6400000000000000000000000000000000000000000000"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "SWAP3"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP5"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "ADD"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "SWAP3"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP4"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "MSTORE"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP4"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "MLOAD"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP1"
								},
								{
									"begin": 3851,
									"end": 3915,
									"name": "SWAP4"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP1"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP2"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "DUP3"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP2"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP1"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "DUP4"
								},
								{
									"begin": 8459,
									"end": 8463,
									"name": "DUP4"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST"
								},
								{
									"begin": 66,
									"end": 68,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 69,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 69,
									"name": "LT"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPI"
								},
								{
									"begin": 176,
									"end": 186,
									"name": "DUP1"
								},
								{
									"begin": 176,
									"end": 186,
									"name": "MLOAD"
								},
								{
									"begin": 164,
									"end": 187,
									"name": "DUP3"
								},
								{
									"begin": 164,
									"end": 187,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP1"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP3"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "ADD"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP2"
								},
								{
									"begin": 98,
									"end": 100,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP2"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP3"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP2"
								},
								{
									"begin": 114,
									"end": 126,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST"
								},
								{
									"begin": 299,
									"end": 309,
									"name": "MLOAD"
								},
								{
									"begin": 344,
									"end": 354,
									"name": "DUP2"
								},
								{
									"begin": 344,
									"end": 354,
									"name": "MLOAD"
								},
								{
									"begin": 263,
									"end": 265,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SWAP4"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "DUP5"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SUB"
								},
								{
									"begin": 254,
									"end": 257,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 250,
									"end": 272,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 246,
									"end": 276,
									"name": "ADD"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "DUP1"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "NOT"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "SWAP3"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "AND"
								},
								{
									"begin": 340,
									"end": 361,
									"name": "SWAP2"
								},
								{
									"begin": 340,
									"end": 361,
									"name": "AND"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR"
								},
								{
									"begin": 365,
									"end": 398,
									"name": "SWAP1"
								},
								{
									"begin": 365,
									"end": 398,
									"name": "MSTORE"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "DUP1"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "MLOAD"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP3"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP1"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP5"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "ADD"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "DUP3"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SWAP1"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "SUB"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "DUP3"
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "KECCAK256"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP3"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP3"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "ADD"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP8"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP8"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "MSTORE"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP2"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP5"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "ADD"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP7"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP7"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "MSTORE"
								},
								{
									"begin": 8500,
									"end": 8504,
									"name": "ADDRESS"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP4"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "ADD"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP2"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP2"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "MSTORE"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP4"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP4"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP2"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "ADD"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP3"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP4"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "MSTORE"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "DUP1"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "MLOAD"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP6"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP3"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP5"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP2"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "DUP6"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "ADD"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP2"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "DUP1"
								},
								{
									"begin": 8331,
									"end": 8521,
									"name": "DUP4"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "DUP4"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST"
								},
								{
									"begin": 66,
									"end": 68,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 69,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 69,
									"name": "LT"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPI"
								},
								{
									"begin": 176,
									"end": 186,
									"name": "DUP1"
								},
								{
									"begin": 176,
									"end": 186,
									"name": "MLOAD"
								},
								{
									"begin": 164,
									"end": 187,
									"name": "DUP3"
								},
								{
									"begin": 164,
									"end": 187,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP1"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP3"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "ADD"
								},
								{
									"begin": 139,
									"end": 151,
									"name": "SWAP2"
								},
								{
									"begin": 98,
									"end": 100,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP2"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP3"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP2"
								},
								{
									"begin": 114,
									"end": 126,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 36,
									"end": 189,
									"name": "JUMPDEST"
								},
								{
									"begin": 299,
									"end": 309,
									"name": "MLOAD"
								},
								{
									"begin": 344,
									"end": 354,
									"name": "DUP2"
								},
								{
									"begin": 344,
									"end": 354,
									"name": "MLOAD"
								},
								{
									"begin": 263,
									"end": 265,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SWAP4"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SWAP1"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SWAP4"
								},
								{
									"begin": 259,
									"end": 271,
									"name": "SUB"
								},
								{
									"begin": 254,
									"end": 257,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 250,
									"end": 272,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 246,
									"end": 276,
									"name": "ADD"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "DUP1"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "NOT"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "SWAP1"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "SWAP2"
								},
								{
									"begin": 295,
									"end": 321,
									"name": "AND"
								},
								{
									"begin": 340,
									"end": 361,
									"name": "SWAP3"
								},
								{
									"begin": 340,
									"end": 361,
									"name": "AND"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SWAP2"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SWAP1"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "SWAP2"
								},
								{
									"begin": 377,
									"end": 397,
									"name": "OR"
								},
								{
									"begin": 365,
									"end": 398,
									"name": "SWAP1"
								},
								{
									"begin": 365,
									"end": 398,
									"name": "MSTORE"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "MLOAD"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP3"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "ADD"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "DUP3"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP1"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SUB"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP1"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "SWAP2"
								},
								{
									"begin": 8307,
									"end": 8532,
									"name": "KECCAK256"
								},
								{
									"begin": 8286,
									"end": 8304,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 8286,
									"end": 8532,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 8171,
									"end": 8540,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "JUMPDEST"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "DUP1"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "CODECOPY"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2470,
									"end": 32752,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058204c242454c25ff6ebd138020f57a50a1e3d7e1e5356163e38f63fd3974d6bf3c20029",
									".code": [
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "MSTORE"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "LT"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DIV"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "AND"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "3ACB448"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP2"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "8ABDEBA"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "A91B601"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "ABE469A"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "1B670561"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "21AB11F7"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "2FF79161"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "3ED4C678"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "45596E2E"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "45C8B1A6"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "46904840"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "4E71E0C8"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "52875BC3"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "57526B3F"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "6999B377"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "8129FC1C"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "89F72C21"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "8CEED9CB"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "8D1FDF2F"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "978BBDB9"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "97D60D56"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "98E52F9A"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "A7D87ED0"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "AC69275C"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "B5ED298A"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "B921E163"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "C4F62FEE"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "CC0F1786"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "D153B60C"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "D990C618"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "E2F72F03"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "E306F779"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "E5839836"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "E74B981B"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "E7BA1012"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "EQ"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPI"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "JUMPDEST"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "DUP1"
										},
										{
											"begin": 2470,
											"end": 32752,
											"name": "REVERT"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "JUMPDEST"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "POP"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "JUMP"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "JUMPDEST"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "STOP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP6"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "AND"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ISZERO"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMPI"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SUB"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP4"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SUB"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "EXP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SUB"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "NOT"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "AND"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SUB"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "RETURN"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "JUMPDEST"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "POP"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "JUMP"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "JUMPDEST"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "AND"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "JUMP"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "JUMPDEST"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "DUP1"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "MLOAD"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SWAP2"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "ISZERO"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "ISZERO"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "DUP3"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "MSTORE"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "MLOAD"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SWAP1"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "DUP2"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SWAP1"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SUB"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "ADD"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SWAP1"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "RETURN"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "JUMPDEST"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "POP"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "JUMP"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "JUMPDEST"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "DUP1"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SWAP3"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "AND"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "DUP3"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "MSTORE"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "MLOAD"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "DUP2"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SUB"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "ADD"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SWAP1"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "RETURN"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "JUMPDEST"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "JUMP"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "JUMPDEST"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "DUP1"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "MLOAD"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SWAP2"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "DUP3"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "MSTORE"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "MLOAD"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SWAP1"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "DUP2"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SWAP1"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SUB"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "ADD"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SWAP1"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "RETURN"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "JUMPDEST"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "POP"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "JUMP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "JUMPDEST"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP7"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP7"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MLOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP8"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MUL"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP2"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "MSTORE"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP12"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP11"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP4"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP6"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "ADD"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP1"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP3"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "DUP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP5"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "JUMP"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "JUMPDEST"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "MLOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP3"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP2"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DIV"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "MUL"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP6"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP6"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "MSTORE"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "MSTORE"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP3"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP4"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP4"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP3"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP2"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP2"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP4"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP3"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP1"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP3"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATACOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP5"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP6"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "AND"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP4"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP3"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP2"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "DUP2"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "ADD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "JUMP"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "JUMPDEST"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "DUP2"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "AND"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "SWAP1"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "AND"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "JUMP"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "JUMPDEST"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "POP"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "JUMP"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "JUMP"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "MLOAD"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "SWAP3"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "AND"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "DUP3"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "MSTORE"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "MLOAD"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "DUP2"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "SUB"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "RETURN"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "JUMPDEST"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "AND"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "JUMP"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "JUMPDEST"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "POP"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "JUMP"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "JUMPDEST"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "JUMP"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "JUMPDEST"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "AND"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "JUMP"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "JUMPDEST"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "POP"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "JUMP"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "JUMPDEST"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "POP"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "JUMP"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "JUMPDEST"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "AND"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "JUMP"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "JUMPDEST"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "POP"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "JUMP"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "JUMPDEST"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "POP"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "JUMP"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "JUMPDEST"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "POP"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "JUMP"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "JUMPDEST"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "AND"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "JUMP"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "JUMPDEST"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "POP"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "JUMP"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "JUMPDEST"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "POP"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "JUMP"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "JUMPDEST"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "AND"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "JUMP"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "JUMPDEST"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "AND"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "JUMP"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "JUMPDEST"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "AND"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "JUMP"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "JUMPDEST"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "POP"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "JUMP"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "JUMP"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "JUMPDEST"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "POP"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "JUMP"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "JUMPDEST"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "AND"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "JUMP"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "JUMPDEST"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "JUMP"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "JUMPDEST"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "AND"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "JUMP"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "JUMPDEST"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "AND"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "JUMP"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "JUMPDEST"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "AND"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "JUMP"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "JUMPDEST"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "JUMP"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "JUMPDEST"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "JUMP"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "POP"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "JUMP"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "JUMPDEST"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "POP"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "JUMP"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "POP"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "JUMP"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "JUMPDEST"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "AND"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "JUMP"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "JUMPDEST"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "DUP2"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "AND"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "SWAP1"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "AND"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "JUMP"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "JUMPDEST"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "AND"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "JUMP"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "JUMPDEST"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "POP"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "JUMP"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "JUMPDEST"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "AND"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "JUMP"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "JUMPDEST"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "AND"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "JUMP"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMPDEST"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "POP"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMP"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "JUMPDEST"
										},
										{
											"begin": 13925,
											"end": 13938,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13925,
											"end": 13938,
											"name": "SLOAD"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14174,
											"end": 14199,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13925,
											"end": 13938,
											"name": "AND"
										},
										{
											"begin": 13911,
											"end": 13921,
											"name": "CALLER"
										},
										{
											"begin": 13911,
											"end": 13938,
											"name": "EQ"
										},
										{
											"begin": 13911,
											"end": 13938,
											"name": "DUP1"
										},
										{
											"begin": 13911,
											"end": 13961,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 13911,
											"end": 13961,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13956,
											"end": 13961,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13956,
											"end": 13961,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13956,
											"end": 13961,
											"name": "AND"
										},
										{
											"begin": 13942,
											"end": 13952,
											"name": "CALLER"
										},
										{
											"begin": 13942,
											"end": 13961,
											"name": "EQ"
										},
										{
											"begin": 13911,
											"end": 13961,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 13911,
											"end": 13961,
											"name": "JUMPDEST"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "ISZERO"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "ISZERO"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "JUMPI"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "DUP1"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "DUP2"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "MSTORE"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "DUP3"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "ADD"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "MSTORE"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "DUP3"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "ADD"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "MSTORE"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "6F6E6C792070726F706F7365644F776E6572206F72206F776E65720000000000"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "DUP3"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "ADD"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "MSTORE"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "SWAP1"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "MLOAD"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "SWAP1"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "DUP2"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "SWAP1"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "SUB"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "ADD"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "SWAP1"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "REVERT"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 13889,
											"end": 14016,
											"name": "JUMPDEST"
										},
										{
											"begin": 14049,
											"end": 14062,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14049,
											"end": 14062,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14049,
											"end": 14062,
											"name": "AND"
										},
										{
											"begin": 14049,
											"end": 14076,
											"name": "ISZERO"
										},
										{
											"begin": 14049,
											"end": 14076,
											"name": "ISZERO"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "JUMPI"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP1"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP2"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "63616E206F6E6C792064697372656761726420612070726F706F736564206F77"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "6E65722074686174207761732070726576696F75736C79207365740000000000"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP3"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MSTORE"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "SWAP1"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "MLOAD"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "SWAP1"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "DUP2"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "SWAP1"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "SUB"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "ADD"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "SWAP1"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "REVERT"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 14027,
											"end": 14163,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "DUP1"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 14226,
											"end": 14252,
											"name": "DUP2"
										},
										{
											"begin": 14226,
											"end": 14252,
											"name": "AND"
										},
										{
											"begin": 14226,
											"end": 14252,
											"name": "SWAP1"
										},
										{
											"begin": 14226,
											"end": 14252,
											"name": "SWAP2"
										},
										{
											"begin": 14226,
											"end": 14252,
											"name": "SSTORE"
										},
										{
											"begin": 14268,
											"end": 14315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14268,
											"end": 14315,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "SWAP2"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "AND"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "DUP2"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14268,
											"end": 14315,
											"name": "PUSH",
											"value": "24F4590B0077912A4DB89E7430DE7986175C27BEDE1B47EE039E3B421C2E798E"
										},
										{
											"begin": 14268,
											"end": 14315,
											"name": "SWAP1"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "SWAP1"
										},
										{
											"begin": 14268,
											"end": 14315,
											"name": "LOG2"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "POP"
										},
										{
											"begin": 13838,
											"end": 14323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MLOAD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP1"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "SWAP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "5061786F7320476F6C6400000000000000000000000000000000000000000000"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP3"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "ADD"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "MSTORE"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "DUP2"
										},
										{
											"begin": 2788,
											"end": 2830,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "JUMPDEST"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "SLOAD"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14999,
											"end": 15015,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "AND"
										},
										{
											"begin": 13060,
											"end": 13070,
											"name": "CALLER"
										},
										{
											"begin": 13060,
											"end": 13079,
											"name": "EQ"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPI"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "E8E4944059266C653CCA10F9830A9FEE32F8D74FFBC3FE2ECADB38D10605F91E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SUB"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "REVERT"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15027,
											"end": 15031,
											"name": "ADDRESS"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "SWAP1"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "DUP2"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "MSTORE"
										},
										{
											"begin": 15018,
											"end": 15026,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "MSTORE"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "DUP1"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "DUP3"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "KECCAK256"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "DUP1"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "SLOAD"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "SWAP1"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "DUP4"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "SWAP1"
										},
										{
											"begin": 15043,
											"end": 15061,
											"name": "SSTORE"
										},
										{
											"begin": 15099,
											"end": 15104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15099,
											"end": 15104,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15099,
											"end": 15104,
											"name": "AND"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "DUP4"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "MSTORE"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "SWAP2"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "KECCAK256"
										},
										{
											"begin": 15090,
											"end": 15105,
											"name": "SLOAD"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "SWAP1"
										},
										{
											"begin": 15018,
											"end": 15032,
											"name": "DUP3"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15090,
											"end": 15109,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "AND"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 15090,
											"end": 15119,
											"name": "JUMPDEST"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "DUP1"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "SWAP1"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "DUP2"
										},
										{
											"begin": 15081,
											"end": 15086,
											"name": "AND"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "SWAP1"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "DUP2"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "MSTORE"
										},
										{
											"begin": 15072,
											"end": 15080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "SWAP1"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "DUP2"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "MSTORE"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "SWAP2"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "DUP3"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "SWAP1"
										},
										{
											"begin": 15072,
											"end": 15087,
											"name": "KECCAK256"
										},
										{
											"begin": 15072,
											"end": 15119,
											"name": "SWAP5"
										},
										{
											"begin": 15072,
											"end": 15119,
											"name": "SWAP1"
										},
										{
											"begin": 15072,
											"end": 15119,
											"name": "SWAP5"
										},
										{
											"begin": 15072,
											"end": 15119,
											"name": "SSTORE"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "SWAP2"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "SLOAD"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "DUP3"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "MLOAD"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "DUP6"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "DUP2"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "MSTORE"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP3"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "MLOAD"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "SWAP2"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "AND"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "SWAP3"
										},
										{
											"begin": 15144,
											"end": 15148,
											"name": "ADDRESS"
										},
										{
											"begin": 15144,
											"end": 15148,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP3"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP1"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "DUP2"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP1"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SUB"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP1"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP2"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "ADD"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "SWAP1"
										},
										{
											"begin": 15135,
											"end": 15166,
											"name": "LOG3"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "POP"
										},
										{
											"begin": 14946,
											"end": 15174,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "JUMPDEST"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SLOAD"
										},
										{
											"begin": 11529,
											"end": 11533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11529,
											"end": 11533,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SWAP1"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "DIV"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15375,
											"name": "ISZERO"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPI"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "876F99E759874A085884E6E71A9F6228292079DDBCCC024D1921F2C7370E10C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SUB"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "REVERT"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "DUP4"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "AND"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "SWAP1"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "DUP2"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "MSTORE"
										},
										{
											"begin": 11560,
											"end": 11566,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "MSTORE"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "SWAP1"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "KECCAK256"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "SLOAD"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11560,
											"end": 11576,
											"name": "AND"
										},
										{
											"begin": 11559,
											"end": 11576,
											"name": "ISZERO"
										},
										{
											"begin": 11559,
											"end": 11599,
											"name": "DUP1"
										},
										{
											"begin": 11559,
											"end": 11599,
											"name": "ISZERO"
										},
										{
											"begin": 11559,
											"end": 11599,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 11559,
											"end": 11599,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11588,
											"end": 11598,
											"name": "CALLER"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "SWAP1"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "DUP2"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "MSTORE"
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "MSTORE"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "SWAP1"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "KECCAK256"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "SLOAD"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11581,
											"end": 11599,
											"name": "AND"
										},
										{
											"begin": 11580,
											"end": 11599,
											"name": "ISZERO"
										},
										{
											"begin": 11559,
											"end": 11599,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 11559,
											"end": 11599,
											"name": "JUMPDEST"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "ISZERO"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "ISZERO"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "JUMPI"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "DUP1"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "DUP2"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "MSTORE"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "DUP3"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "ADD"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "MSTORE"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "DUP3"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "ADD"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "834D376937710E138A4FB943EDB26D656FA6EA3CECFE10E80A0FDD4D89414CAC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "DUP3"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "ADD"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "MSTORE"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "SWAP1"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "MLOAD"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "SWAP1"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "DUP2"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "SWAP1"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "SUB"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "ADD"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "SWAP1"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "REVERT"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 11551,
											"end": 11618,
											"name": "JUMPDEST"
										},
										{
											"begin": 11637,
											"end": 11647,
											"name": "CALLER"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "DUP2"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "DUP2"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "MSTORE"
										},
										{
											"begin": 11629,
											"end": 11636,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "SWAP1"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "DUP2"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "MSTORE"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "DUP1"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "DUP4"
										},
										{
											"begin": 11629,
											"end": 11648,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "DUP9"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "AND"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "DUP1"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "DUP6"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "MSTORE"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "SWAP1"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "DUP4"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "MSTORE"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "SWAP3"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "DUP2"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "SWAP1"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "KECCAK256"
										},
										{
											"begin": 11629,
											"end": 11667,
											"name": "DUP7"
										},
										{
											"begin": 11629,
											"end": 11667,
											"name": "SWAP1"
										},
										{
											"begin": 11629,
											"end": 11667,
											"name": "SSTORE"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "DUP1"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "MLOAD"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "DUP7"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "DUP2"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "MSTORE"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP1"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "MLOAD"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "SWAP3"
										},
										{
											"begin": 11629,
											"end": 11658,
											"name": "SWAP4"
										},
										{
											"begin": 11637,
											"end": 11647,
											"name": "SWAP3"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP3"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP2"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "DUP2"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP1"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SUB"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP1"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP2"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "ADD"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "SWAP1"
										},
										{
											"begin": 11683,
											"end": 11721,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 11739,
											"end": 11743,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SWAP3"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "SWAP2"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "POP"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "POP"
										},
										{
											"begin": 11421,
											"end": 11751,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "JUMPDEST"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "AND"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "DUP2"
										},
										{
											"begin": 3280,
											"end": 3314,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "JUMPDEST"
										},
										{
											"begin": 32616,
											"end": 32623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32640,
											"end": 32647,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 32640,
											"end": 32647,
											"name": "SLOAD"
										},
										{
											"begin": 32651,
											"end": 32652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32640,
											"end": 32652,
											"name": "EQ"
										},
										{
											"begin": 32636,
											"end": 32689,
											"name": "ISZERO"
										},
										{
											"begin": 32636,
											"end": 32689,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 32636,
											"end": 32689,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 32676,
											"end": 32677,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32669,
											"end": 32677,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 32669,
											"end": 32677,
											"name": "JUMP"
										},
										{
											"begin": 32636,
											"end": 32689,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 32636,
											"end": 32689,
											"name": "JUMPDEST"
										},
										{
											"begin": 32708,
											"end": 32741,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 32719,
											"end": 32726,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 32719,
											"end": 32726,
											"name": "SLOAD"
										},
										{
											"begin": 32708,
											"end": 32714,
											"name": "DUP6"
										},
										{
											"begin": 32708,
											"end": 32718,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 32708,
											"end": 32718,
											"name": "SWAP1"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "SWAP2"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "SWAP1"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "AND"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 32708,
											"end": 32727,
											"name": "JUMPDEST"
										},
										{
											"begin": 32708,
											"end": 32731,
											"name": "SWAP1"
										},
										{
											"begin": 32708,
											"end": 32741,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 32708,
											"end": 32731,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 32708,
											"end": 32741,
											"name": "AND"
										},
										{
											"begin": 32708,
											"end": 32741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 32708,
											"end": 32741,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 32708,
											"end": 32741,
											"name": "JUMPDEST"
										},
										{
											"begin": 32701,
											"end": 32741,
											"name": "SWAP1"
										},
										{
											"begin": 32701,
											"end": 32741,
											"name": "POP"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "JUMPDEST"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SWAP2"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "SWAP1"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "POP"
										},
										{
											"begin": 32560,
											"end": 32749,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "JUMPDEST"
										},
										{
											"begin": 8722,
											"end": 8734,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8722,
											"end": 8734,
											"name": "SLOAD"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "SWAP1"
										},
										{
											"begin": 8651,
											"end": 8742,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "JUMPDEST"
										},
										{
											"begin": 27618,
											"end": 27622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28062,
											"end": 28071,
											"name": "DUP1"
										},
										{
											"begin": 27669,
											"end": 27670,
											"name": "DUP9"
										},
										{
											"begin": 27669,
											"end": 27677,
											"name": "MLOAD"
										},
										{
											"begin": 27657,
											"end": 27658,
											"name": "DUP11"
										},
										{
											"begin": 27657,
											"end": 27665,
											"name": "MLOAD"
										},
										{
											"begin": 27657,
											"end": 27677,
											"name": "EQ"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "DUP1"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "ISZERO"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "JUMPI"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "POP"
										},
										{
											"begin": 27710,
											"end": 27711,
											"name": "DUP8"
										},
										{
											"begin": 27710,
											"end": 27718,
											"name": "MLOAD"
										},
										{
											"begin": 27698,
											"end": 27699,
											"name": "DUP11"
										},
										{
											"begin": 27698,
											"end": 27706,
											"name": "MLOAD"
										},
										{
											"begin": 27698,
											"end": 27718,
											"name": "EQ"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 27657,
											"end": 27718,
											"name": "JUMPDEST"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "DUP1"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "ISZERO"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "JUMPI"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "POP"
										},
										{
											"begin": 27751,
											"end": 27753,
											"name": "DUP7"
										},
										{
											"begin": 27751,
											"end": 27760,
											"name": "MLOAD"
										},
										{
											"begin": 27739,
											"end": 27740,
											"name": "DUP11"
										},
										{
											"begin": 27739,
											"end": 27747,
											"name": "MLOAD"
										},
										{
											"begin": 27739,
											"end": 27760,
											"name": "EQ"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 27657,
											"end": 27760,
											"name": "JUMPDEST"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "DUP1"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "ISZERO"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "JUMPI"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "POP"
										},
										{
											"begin": 27793,
											"end": 27798,
											"name": "DUP6"
										},
										{
											"begin": 27793,
											"end": 27805,
											"name": "MLOAD"
										},
										{
											"begin": 27781,
											"end": 27782,
											"name": "DUP11"
										},
										{
											"begin": 27781,
											"end": 27789,
											"name": "MLOAD"
										},
										{
											"begin": 27781,
											"end": 27805,
											"name": "EQ"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 27657,
											"end": 27805,
											"name": "JUMPDEST"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "ISZERO"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "ISZERO"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "JUMPI"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "DUP1"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "DUP2"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "MSTORE"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "DUP3"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "ADD"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "MSTORE"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "DUP3"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "ADD"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "MSTORE"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "6C656E677468206D69736D617463680000000000000000000000000000000000"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "DUP3"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "ADD"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "MSTORE"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "SWAP1"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "MLOAD"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "SWAP1"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "DUP2"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "SWAP1"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "SUB"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "ADD"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "SWAP1"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "REVERT"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 27635,
											"end": 27848,
											"name": "JUMPDEST"
										},
										{
											"begin": 27893,
											"end": 27903,
											"name": "DUP5"
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "MLOAD"
										},
										{
											"begin": 27881,
											"end": 27882,
											"name": "DUP11"
										},
										{
											"begin": 27881,
											"end": 27889,
											"name": "MLOAD"
										},
										{
											"begin": 27881,
											"end": 27910,
											"name": "EQ"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "DUP1"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "ISZERO"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "JUMPI"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "POP"
										},
										{
											"begin": 27943,
											"end": 27946,
											"name": "DUP4"
										},
										{
											"begin": 27943,
											"end": 27953,
											"name": "MLOAD"
										},
										{
											"begin": 27931,
											"end": 27932,
											"name": "DUP11"
										},
										{
											"begin": 27931,
											"end": 27939,
											"name": "MLOAD"
										},
										{
											"begin": 27931,
											"end": 27953,
											"name": "EQ"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 27881,
											"end": 27953,
											"name": "JUMPDEST"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "DUP1"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "ISZERO"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "JUMPI"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "POP"
										},
										{
											"begin": 27986,
											"end": 27994,
											"name": "DUP3"
										},
										{
											"begin": 27986,
											"end": 28001,
											"name": "MLOAD"
										},
										{
											"begin": 27974,
											"end": 27975,
											"name": "DUP11"
										},
										{
											"begin": 27974,
											"end": 27982,
											"name": "MLOAD"
										},
										{
											"begin": 27974,
											"end": 28001,
											"name": "EQ"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 27881,
											"end": 28001,
											"name": "JUMPDEST"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "ISZERO"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "ISZERO"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "JUMPI"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "DUP1"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "DUP2"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "MSTORE"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "DUP3"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "ADD"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "MSTORE"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "DUP3"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "ADD"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "MSTORE"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "6C656E677468206D69736D617463680000000000000000000000000000000000"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "DUP3"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "ADD"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "MSTORE"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "SWAP1"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "MLOAD"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "SWAP1"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "DUP2"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "SWAP1"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "SUB"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "ADD"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "SWAP1"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "REVERT"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 27859,
											"end": 28044,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28074,
											"end": 28075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "JUMPDEST"
										},
										{
											"begin": 28081,
											"end": 28082,
											"name": "DUP10"
										},
										{
											"begin": 28081,
											"end": 28089,
											"name": "MLOAD"
										},
										{
											"begin": 28077,
											"end": 28078,
											"name": "DUP2"
										},
										{
											"begin": 28077,
											"end": 28089,
											"name": "LT"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "ISZERO"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "JUMPI"
										},
										{
											"begin": 28137,
											"end": 28417,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 28182,
											"end": 28183,
											"name": "DUP11"
										},
										{
											"begin": 28184,
											"end": 28185,
											"name": "DUP3"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "DUP2"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "MLOAD"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "DUP2"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "LT"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "ISZERO"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "ISZERO"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "JUMPI"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "INVALID"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "JUMPDEST"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "SWAP1"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "ADD"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "SWAP1"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "MUL"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "ADD"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "MLOAD"
										},
										{
											"begin": 28209,
											"end": 28210,
											"name": "DUP11"
										},
										{
											"begin": 28211,
											"end": 28212,
											"name": "DUP4"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "DUP2"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "MLOAD"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "DUP2"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "LT"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "ISZERO"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "ISZERO"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "JUMPI"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "INVALID"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "JUMPDEST"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "ADD"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "SWAP1"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "MUL"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "ADD"
										},
										{
											"begin": 28209,
											"end": 28213,
											"name": "MLOAD"
										},
										{
											"begin": 28236,
											"end": 28237,
											"name": "DUP11"
										},
										{
											"begin": 28238,
											"end": 28239,
											"name": "DUP5"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "DUP2"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "MLOAD"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "DUP2"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "LT"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "ISZERO"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "ISZERO"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "JUMPI"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "INVALID"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "JUMPDEST"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "SWAP1"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "ADD"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "SWAP1"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "MUL"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "ADD"
										},
										{
											"begin": 28236,
											"end": 28240,
											"name": "MLOAD"
										},
										{
											"begin": 28263,
											"end": 28265,
											"name": "DUP11"
										},
										{
											"begin": 28266,
											"end": 28267,
											"name": "DUP6"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "DUP2"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "MLOAD"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "DUP2"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "LT"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "ISZERO"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "ISZERO"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "JUMPI"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "INVALID"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "JUMPDEST"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "SWAP1"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "ADD"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "SWAP1"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "MUL"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "ADD"
										},
										{
											"begin": 28263,
											"end": 28268,
											"name": "MLOAD"
										},
										{
											"begin": 28291,
											"end": 28296,
											"name": "DUP11"
										},
										{
											"begin": 28297,
											"end": 28298,
											"name": "DUP7"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "DUP2"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "MLOAD"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "DUP2"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "LT"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "ISZERO"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "ISZERO"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "JUMPI"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "INVALID"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "JUMPDEST"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "SWAP1"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "ADD"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "SWAP1"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "MUL"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "ADD"
										},
										{
											"begin": 28291,
											"end": 28299,
											"name": "MLOAD"
										},
										{
											"begin": 28322,
											"end": 28332,
											"name": "DUP11"
										},
										{
											"begin": 28333,
											"end": 28334,
											"name": "DUP8"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "DUP2"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "MLOAD"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "DUP2"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "LT"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "ISZERO"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "ISZERO"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "JUMPI"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "INVALID"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "JUMPDEST"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "SWAP1"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "ADD"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "SWAP1"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "MUL"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "ADD"
										},
										{
											"begin": 28322,
											"end": 28335,
											"name": "MLOAD"
										},
										{
											"begin": 28358,
											"end": 28361,
											"name": "DUP11"
										},
										{
											"begin": 28362,
											"end": 28363,
											"name": "DUP9"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "DUP2"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "MLOAD"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "DUP2"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "LT"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "ISZERO"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "ISZERO"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "JUMPI"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "INVALID"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "JUMPDEST"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "SWAP1"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "ADD"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "SWAP1"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "MUL"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "ADD"
										},
										{
											"begin": 28358,
											"end": 28364,
											"name": "MLOAD"
										},
										{
											"begin": 28387,
											"end": 28395,
											"name": "DUP11"
										},
										{
											"begin": 28396,
											"end": 28397,
											"name": "DUP10"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "DUP2"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "MLOAD"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "DUP2"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "LT"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "ISZERO"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "ISZERO"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "JUMPI"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "INVALID"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "JUMPDEST"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "SWAP1"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "ADD"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "SWAP1"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "MUL"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "ADD"
										},
										{
											"begin": 28387,
											"end": 28398,
											"name": "MLOAD"
										},
										{
											"begin": 28137,
											"end": 28159,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 28137,
											"end": 28417,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 28137,
											"end": 28417,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 28137,
											"end": 28417,
											"name": "JUMPDEST"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "ISZERO"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "ISZERO"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "JUMPI"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "DUP1"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "DUP2"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "MSTORE"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "DUP3"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "ADD"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "MSTORE"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "DUP3"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "ADD"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "MSTORE"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "6661696C6564207472616E736665720000000000000000000000000000000000"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "DUP3"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "ADD"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "MSTORE"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "SWAP1"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "MLOAD"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "SWAP1"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "DUP2"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "SWAP1"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "SUB"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "ADD"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "SWAP1"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "REVERT"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 28111,
											"end": 28468,
											"name": "JUMPDEST"
										},
										{
											"begin": 28091,
											"end": 28094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28091,
											"end": 28094,
											"name": "ADD"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "JUMP"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 28057,
											"end": 28480,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 28497,
											"end": 28501,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 28497,
											"end": 28501,
											"name": "SWAP10"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "SWAP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 27362,
											"end": 28509,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 21749,
											"end": 22561,
											"name": "JUMPDEST"
										},
										{
											"begin": 21946,
											"end": 21950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22034,
											"end": 22043,
											"name": "DUP1"
										},
										{
											"begin": 22054,
											"end": 22063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22074,
											"end": 22081,
											"name": "DUP1"
										},
										{
											"begin": 21971,
											"end": 21974,
											"name": "DUP10"
										},
										{
											"begin": 21971,
											"end": 21981,
											"name": "MLOAD"
										},
										{
											"begin": 21985,
											"end": 21987,
											"name": "PUSH",
											"value": "41"
										},
										{
											"begin": 21971,
											"end": 21987,
											"name": "EQ"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "ISZERO"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "ISZERO"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "JUMPI"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "DUP1"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "DUP2"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "MSTORE"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "DUP3"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "ADD"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "MSTORE"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "DUP3"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "ADD"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "MSTORE"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "7369676E61747572652073686F756C642068617665206C656E67746820363500"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "DUP3"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "ADD"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "MSTORE"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "SWAP1"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "MLOAD"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "SWAP1"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "DUP2"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "SWAP1"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "SUB"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "ADD"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "SWAP1"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "REVERT"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 21963,
											"end": 22023,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 22136,
											"end": 22138,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22127,
											"end": 22139,
											"name": "DUP8"
										},
										{
											"begin": 22127,
											"end": 22139,
											"name": "ADD"
										},
										{
											"begin": 22121,
											"end": 22140,
											"name": "MLOAD"
										},
										{
											"begin": 22174,
											"end": 22176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22165,
											"end": 22177,
											"name": "DUP9"
										},
										{
											"begin": 22165,
											"end": 22177,
											"name": "ADD"
										},
										{
											"begin": 22159,
											"end": 22178,
											"name": "MLOAD"
										},
										{
											"begin": 22220,
											"end": 22222,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 22211,
											"end": 22223,
											"name": "DUP10"
										},
										{
											"begin": 22211,
											"end": 22223,
											"name": "ADD"
										},
										{
											"begin": 22205,
											"end": 22224,
											"name": "MLOAD"
										},
										{
											"begin": 22202,
											"end": 22203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22197,
											"end": 22225,
											"name": "BYTE"
										},
										{
											"begin": 22268,
											"end": 22488,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 22121,
											"end": 22140,
											"name": "DUP4"
										},
										{
											"begin": 22159,
											"end": 22178,
											"name": "DUP4"
										},
										{
											"begin": 22197,
											"end": 22225,
											"name": "DUP4"
										},
										{
											"begin": 22369,
											"end": 22371,
											"name": "DUP13"
										},
										{
											"begin": 22390,
											"end": 22395,
											"name": "DUP13"
										},
										{
											"begin": 22414,
											"end": 22424,
											"name": "DUP13"
										},
										{
											"begin": 22443,
											"end": 22446,
											"name": "DUP13"
										},
										{
											"begin": 22465,
											"end": 22473,
											"name": "DUP13"
										},
										{
											"begin": 22268,
											"end": 22290,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 22268,
											"end": 22488,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22268,
											"end": 22488,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 22268,
											"end": 22488,
											"name": "JUMPDEST"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "ISZERO"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "ISZERO"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "JUMPI"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "DUP1"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "DUP2"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "MSTORE"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "DUP3"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "ADD"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "MSTORE"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "DUP3"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "ADD"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "MSTORE"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "6661696C6564207472616E736665720000000000000000000000000000000000"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "DUP3"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "ADD"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "MSTORE"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "SWAP1"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "MLOAD"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "SWAP1"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "DUP2"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "SWAP1"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "SUB"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "ADD"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "SWAP1"
										},
										{
											"begin": 22246,
											"end": 22531,
											"name": "REVERT"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "JUMPDEST"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SLOAD"
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SWAP1"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "DIV"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15375,
											"name": "ISZERO"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPI"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "876F99E759874A085884E6E71A9F6228292079DDBCCC024D1921F2C7370E10C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SUB"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "REVERT"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10290,
											"end": 10307,
											"name": "DUP4"
										},
										{
											"begin": 10290,
											"end": 10307,
											"name": "AND"
										},
										{
											"begin": 10290,
											"end": 10307,
											"name": "ISZERO"
										},
										{
											"begin": 10290,
											"end": 10307,
											"name": "ISZERO"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "JUMPI"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "DUP1"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "DUP2"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "MSTORE"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "DUP3"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "ADD"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "MSTORE"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "DUP3"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "ADD"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "MSTORE"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "63616E6E6F74207472616E7366657220746F2061646472657373207A65726F00"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "DUP3"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "ADD"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "MSTORE"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "SWAP1"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "MLOAD"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "SWAP1"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "DUP2"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "SWAP1"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "SUB"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "ADD"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "SWAP1"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "REVERT"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 10282,
											"end": 10343,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "DUP4"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "AND"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "SWAP1"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "DUP2"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "MSTORE"
										},
										{
											"begin": 10377,
											"end": 10383,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "MSTORE"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "SWAP1"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "KECCAK256"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "SLOAD"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10377,
											"end": 10388,
											"name": "AND"
										},
										{
											"begin": 10376,
											"end": 10388,
											"name": "ISZERO"
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "DUP1"
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "ISZERO"
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "DUP5"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "AND"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "SWAP1"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "DUP2"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "MSTORE"
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "MSTORE"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "SWAP1"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "KECCAK256"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "SLOAD"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10393,
											"end": 10406,
											"name": "AND"
										},
										{
											"begin": 10392,
											"end": 10406,
											"name": "ISZERO"
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 10376,
											"end": 10406,
											"name": "JUMPDEST"
										},
										{
											"begin": 10376,
											"end": 10429,
											"name": "DUP1"
										},
										{
											"begin": 10376,
											"end": 10429,
											"name": "ISZERO"
										},
										{
											"begin": 10376,
											"end": 10429,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 10376,
											"end": 10429,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10418,
											"end": 10428,
											"name": "CALLER"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "SWAP1"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "DUP2"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "MSTORE"
										},
										{
											"begin": 10411,
											"end": 10417,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "MSTORE"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "SWAP1"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "KECCAK256"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "SLOAD"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "AND"
										},
										{
											"begin": 10410,
											"end": 10429,
											"name": "ISZERO"
										},
										{
											"begin": 10376,
											"end": 10429,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 10376,
											"end": 10429,
											"name": "JUMPDEST"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "ISZERO"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "ISZERO"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "JUMPI"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "DUP1"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "DUP2"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "MSTORE"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "DUP3"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "ADD"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "MSTORE"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "DUP3"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "ADD"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "834D376937710E138A4FB943EDB26D656FA6EA3CECFE10E80A0FDD4D89414CAC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "DUP3"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "ADD"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "MSTORE"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "SWAP1"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "MLOAD"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "SWAP1"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "DUP2"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "SWAP1"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "SUB"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "ADD"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "SWAP1"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "REVERT"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 10354,
											"end": 10471,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "DUP5"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "AND"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "SWAP1"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "DUP2"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "MSTORE"
										},
										{
											"begin": 10500,
											"end": 10508,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "MSTORE"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "SWAP1"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "KECCAK256"
										},
										{
											"begin": 10500,
											"end": 10515,
											"name": "SLOAD"
										},
										{
											"begin": 10490,
											"end": 10515,
											"name": "DUP3"
										},
										{
											"begin": 10490,
											"end": 10515,
											"name": "GT"
										},
										{
											"begin": 10490,
											"end": 10515,
											"name": "ISZERO"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "JUMPI"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "DUP1"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "DUP2"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "MSTORE"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "DUP3"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "ADD"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "MSTORE"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "DUP3"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "ADD"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "MSTORE"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "696E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "DUP3"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "ADD"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "MSTORE"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "SWAP1"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "MLOAD"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "SWAP1"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "DUP2"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "SWAP1"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "SUB"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "ADD"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "SWAP1"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "REVERT"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 10482,
											"end": 10538,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "DUP5"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "AND"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "SWAP1"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "DUP2"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "MSTORE"
										},
										{
											"begin": 10567,
											"end": 10574,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "SWAP1"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "DUP2"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "MSTORE"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "DUP1"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "DUP4"
										},
										{
											"begin": 10567,
											"end": 10581,
											"name": "KECCAK256"
										},
										{
											"begin": 10582,
											"end": 10592,
											"name": "CALLER"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "DUP5"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "SWAP2"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "MSTORE"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "SWAP1"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "KECCAK256"
										},
										{
											"begin": 10567,
											"end": 10593,
											"name": "SLOAD"
										},
										{
											"begin": 10557,
											"end": 10593,
											"name": "DUP3"
										},
										{
											"begin": 10557,
											"end": 10593,
											"name": "GT"
										},
										{
											"begin": 10557,
											"end": 10593,
											"name": "ISZERO"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "JUMPI"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "DUP1"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "DUP2"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "MSTORE"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "DUP3"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "ADD"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "MSTORE"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "DUP3"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "ADD"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "MSTORE"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "696E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "DUP3"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "ADD"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "MSTORE"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "SWAP1"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "MLOAD"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "SWAP1"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "DUP2"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "SWAP1"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "SUB"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "ADD"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "SWAP1"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "REVERT"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 10549,
											"end": 10620,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "DUP5"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "AND"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "SWAP1"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "DUP2"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "MSTORE"
										},
										{
											"begin": 10662,
											"end": 10669,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "SWAP1"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "DUP2"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "MSTORE"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "DUP1"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "DUP4"
										},
										{
											"begin": 10662,
											"end": 10676,
											"name": "KECCAK256"
										},
										{
											"begin": 10677,
											"end": 10687,
											"name": "CALLER"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "DUP5"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "MSTORE"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "SWAP1"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "SWAP2"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "MSTORE"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "SWAP1"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "KECCAK256"
										},
										{
											"begin": 10662,
											"end": 10688,
											"name": "SLOAD"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "SWAP1"
										},
										{
											"begin": 10693,
											"end": 10699,
											"name": "DUP4"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10662,
											"end": 10692,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "AND"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 10662,
											"end": 10700,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "DUP6"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "AND"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "SWAP1"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "DUP2"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "MSTORE"
										},
										{
											"begin": 10633,
											"end": 10640,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "SWAP1"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "DUP2"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "MSTORE"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "DUP1"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "DUP4"
										},
										{
											"begin": 10633,
											"end": 10647,
											"name": "KECCAK256"
										},
										{
											"begin": 10648,
											"end": 10658,
											"name": "CALLER"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "DUP5"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "MSTORE"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "SWAP2"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "MSTORE"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10633,
											"end": 10659,
											"name": "KECCAK256"
										},
										{
											"begin": 10633,
											"end": 10700,
											"name": "SSTORE"
										},
										{
											"begin": 10711,
											"end": 10740,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 10641,
											"end": 10646,
											"name": "DUP5"
										},
										{
											"begin": 10728,
											"end": 10731,
											"name": "DUP5"
										},
										{
											"begin": 10733,
											"end": 10739,
											"name": "DUP5"
										},
										{
											"begin": 10711,
											"end": 10720,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 10711,
											"end": 10740,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10711,
											"end": 10740,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 10711,
											"end": 10740,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "SWAP5"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10135,
											"end": 10772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "JUMPDEST"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP1"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "MLOAD"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH",
											"value": "454950373132446F6D61696E28737472696E67206E616D652C61646472657373"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP2"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "MSTORE"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH",
											"value": "20766572696679696E67436F6E74726163742900000000000000000000000000"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP1"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP4"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "ADD"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP2"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP2"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "MSTORE"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP3"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "MLOAD"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP2"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP3"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SUB"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "ADD"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "DUP3"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "KECCAK256"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP3"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP5"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP5"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "MSTORE"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP5"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "MSTORE"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "PUSH",
											"value": "5061786F7320476F6C6400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP5"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "ADD"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "SWAP3"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP4"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "MSTORE"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP4"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "MLOAD"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP1"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP4"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "DUP3"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP1"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "DUP4"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP4"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "DUP5"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP3"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "MLOAD"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP3"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP5"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "ADD"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "DUP3"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "SUB"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "DUP3"
										},
										{
											"begin": 8443,
											"end": 8465,
											"name": "KECCAK256"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP3"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP3"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "ADD"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP8"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP8"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP2"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP5"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "ADD"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP7"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP7"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "MSTORE"
										},
										{
											"begin": 8500,
											"end": 8504,
											"name": "ADDRESS"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP4"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "ADD"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP4"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP2"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "ADD"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP3"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP4"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "MSTORE"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "DUP1"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "MLOAD"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP6"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP3"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP5"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP2"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "DUP6"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "ADD"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP2"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "DUP1"
										},
										{
											"begin": 8331,
											"end": 8521,
											"name": "DUP4"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP4"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP1"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP4"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP3"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "SWAP2"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "SWAP1"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "SWAP2"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "MLOAD"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP3"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "ADD"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "DUP3"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP1"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SUB"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP1"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "SWAP2"
										},
										{
											"begin": 8307,
											"end": 8532,
											"name": "KECCAK256"
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 8286,
											"end": 8532,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 8171,
											"end": 8540,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "JUMPDEST"
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "DUP2"
										},
										{
											"begin": 2938,
											"end": 2973,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "JUMPDEST"
										},
										{
											"begin": 30860,
											"end": 30873,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 30860,
											"end": 30873,
											"name": "SLOAD"
										},
										{
											"begin": 31095,
											"end": 31120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31095,
											"end": 31120,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30860,
											"end": 30873,
											"name": "AND"
										},
										{
											"begin": 30846,
											"end": 30856,
											"name": "CALLER"
										},
										{
											"begin": 30846,
											"end": 30873,
											"name": "EQ"
										},
										{
											"begin": 30846,
											"end": 30873,
											"name": "DUP1"
										},
										{
											"begin": 30846,
											"end": 30896,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 30846,
											"end": 30896,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 30891,
											"end": 30896,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30891,
											"end": 30896,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30891,
											"end": 30896,
											"name": "AND"
										},
										{
											"begin": 30877,
											"end": 30887,
											"name": "CALLER"
										},
										{
											"begin": 30877,
											"end": 30896,
											"name": "EQ"
										},
										{
											"begin": 30846,
											"end": 30896,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 30846,
											"end": 30896,
											"name": "JUMPDEST"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "ISZERO"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "ISZERO"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "JUMPI"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "DUP1"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "DUP2"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "MSTORE"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "DUP3"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "ADD"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "MSTORE"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "DUP3"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "ADD"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "MSTORE"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "6F6E6C7920466565436F6E74726F6C6C6572206F72204F776E65720000000000"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "DUP3"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "ADD"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "MSTORE"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "SWAP1"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "MLOAD"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "SWAP1"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "DUP2"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "SWAP1"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "SUB"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "ADD"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "SWAP1"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "REVERT"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 30824,
											"end": 30951,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30984,
											"end": 31015,
											"name": "DUP3"
										},
										{
											"begin": 30984,
											"end": 31015,
											"name": "AND"
										},
										{
											"begin": 30984,
											"end": 31015,
											"name": "ISZERO"
										},
										{
											"begin": 30984,
											"end": 31015,
											"name": "ISZERO"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "JUMPI"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP1"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP2"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MSTORE"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP3"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "ADD"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MSTORE"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP3"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "ADD"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MSTORE"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "63616E6E6F74207365742066656520636F6E74726F6C6C657220746F20616464"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP3"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "ADD"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MSTORE"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "72657373207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP3"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "ADD"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MSTORE"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "SWAP1"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "MLOAD"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "SWAP1"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "DUP2"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "SWAP1"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "SUB"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "ADD"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "SWAP1"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "REVERT"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 30962,
											"end": 31084,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "DUP1"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "DUP4"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "DUP2"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "DUP4"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "AND"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "OR"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "SWAP3"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "DUP4"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "SWAP1"
										},
										{
											"begin": 31147,
											"end": 31180,
											"name": "SSTORE"
										},
										{
											"begin": 31196,
											"end": 31246,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31196,
											"end": 31246,
											"name": "MLOAD"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "SWAP2"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "DUP2"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "AND"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "SWAP3"
										},
										{
											"begin": 31232,
											"end": 31245,
											"name": "AND"
										},
										{
											"begin": 31232,
											"end": 31245,
											"name": "SWAP1"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "DUP3"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "SWAP1"
										},
										{
											"begin": 31196,
											"end": 31246,
											"name": "PUSH",
											"value": "9F67A87FDD653DFCDB36C8E3F851B597FB84328E3E90B118AF01DC93A94E2EB5"
										},
										{
											"begin": 31196,
											"end": 31246,
											"name": "SWAP1"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31123,
											"end": 31136,
											"name": "SWAP1"
										},
										{
											"begin": 31196,
											"end": 31246,
											"name": "LOG3"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "POP"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "POP"
										},
										{
											"begin": 30753,
											"end": 31254,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "JUMPDEST"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "AND"
										},
										{
											"begin": 13060,
											"end": 13070,
											"name": "CALLER"
										},
										{
											"begin": 13060,
											"end": 13079,
											"name": "EQ"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPI"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "E8E4944059266C653CCA10F9830A9FEE32F8D74FFBC3FE2ECADB38D10605F91E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SUB"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "REVERT"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPDEST"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "SWAP1"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "DIV"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "AND"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "ISZERO"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "ISZERO"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "JUMPI"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "DUP1"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "DUP2"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "MSTORE"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "DUP3"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "ADD"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "MSTORE"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "DUP3"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "ADD"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "MSTORE"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "616C726561647920756E70617573656400000000000000000000000000000000"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "DUP3"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "ADD"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "MSTORE"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "SWAP1"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "MLOAD"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "SWAP1"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "DUP2"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "SWAP1"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "SUB"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "ADD"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "SWAP1"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "REVERT"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 15781,
											"end": 15816,
											"name": "JUMPDEST"
										},
										{
											"begin": 15827,
											"end": 15833,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15827,
											"end": 15841,
											"name": "DUP1"
										},
										{
											"begin": 15827,
											"end": 15841,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 15827,
											"end": 15841,
											"name": "AND"
										},
										{
											"begin": 15827,
											"end": 15841,
											"name": "SWAP1"
										},
										{
											"begin": 15827,
											"end": 15841,
											"name": "SSTORE"
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "MLOAD"
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "SWAP1"
										},
										{
											"begin": 15836,
											"end": 15841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15836,
											"end": 15841,
											"name": "SWAP1"
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "LOG1"
										},
										{
											"begin": 15734,
											"end": 15874,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "JUMPDEST"
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "SLOAD"
										},
										{
											"begin": 32239,
											"end": 32258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 32239,
											"end": 32258,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "AND"
										},
										{
											"begin": 31310,
											"end": 31320,
											"name": "CALLER"
										},
										{
											"begin": 31310,
											"end": 31337,
											"name": "EQ"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "JUMPI"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP2"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP3"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP3"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "6F6E6C7920466565436F6E74726F6C6C65720000000000000000000000000000"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP3"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MLOAD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP2"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SUB"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "REVERT"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 32170,
											"end": 32193,
											"name": "DUP3"
										},
										{
											"begin": 32170,
											"end": 32193,
											"name": "GT"
										},
										{
											"begin": 32170,
											"end": 32193,
											"name": "ISZERO"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "JUMPI"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "DUP1"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "DUP2"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "MSTORE"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "DUP3"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "ADD"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "MSTORE"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "DUP3"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "ADD"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "MSTORE"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "63616E6E6F74207365742066656520726174652061626F766520313030250000"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "DUP3"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "ADD"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "MSTORE"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "SWAP1"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "MLOAD"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "SWAP1"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "DUP2"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "SWAP1"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "SUB"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "ADD"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "SWAP1"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "REVERT"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 32162,
											"end": 32228,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 32261,
											"end": 32268,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 32261,
											"end": 32268,
											"name": "DUP1"
										},
										{
											"begin": 32261,
											"end": 32268,
											"name": "SLOAD"
										},
										{
											"begin": 32279,
											"end": 32300,
											"name": "SWAP1"
										},
										{
											"begin": 32279,
											"end": 32300,
											"name": "DUP3"
										},
										{
											"begin": 32279,
											"end": 32300,
											"name": "SWAP1"
										},
										{
											"begin": 32279,
											"end": 32300,
											"name": "SSTORE"
										},
										{
											"begin": 32316,
											"end": 32348,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 32316,
											"end": 32348,
											"name": "MLOAD"
										},
										{
											"begin": 32289,
											"end": 32300,
											"name": "DUP3"
										},
										{
											"begin": 32289,
											"end": 32300,
											"name": "SWAP1"
										},
										{
											"begin": 32261,
											"end": 32268,
											"name": "DUP3"
										},
										{
											"begin": 32261,
											"end": 32268,
											"name": "SWAP1"
										},
										{
											"begin": 32316,
											"end": 32348,
											"name": "PUSH",
											"value": "959EC4191DB1BD972BFBC60DC7D735D4CFB897CA3FD297F4EBD6EE918FEB84D4"
										},
										{
											"begin": 32316,
											"end": 32348,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1"
										},
										{
											"begin": 32316,
											"end": 32348,
											"name": "LOG3"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "POP"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "POP"
										},
										{
											"begin": 32085,
											"end": 32356,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "JUMPDEST"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "AND"
										},
										{
											"begin": 16581,
											"end": 16591,
											"name": "CALLER"
										},
										{
											"begin": 16581,
											"end": 16614,
											"name": "EQ"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "JUMPI"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SUB"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "REVERT"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "DUP2"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "AND"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "SWAP1"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "DUP2"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "MSTORE"
										},
										{
											"begin": 17217,
											"end": 17223,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "MSTORE"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "SWAP1"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "KECCAK256"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "SLOAD"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17217,
											"end": 17230,
											"name": "AND"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "ISZERO"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "ISZERO"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "JUMPI"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "DUP1"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "DUP2"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "MSTORE"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "DUP3"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "ADD"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "MSTORE"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "DUP3"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "ADD"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "MSTORE"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "6164647265737320616C726561647920756E66726F7A656E0000000000000000"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "DUP3"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "ADD"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "MSTORE"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "SWAP1"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "MLOAD"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "SWAP1"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "DUP2"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "SWAP1"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "SUB"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "ADD"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "SWAP1"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "REVERT"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 17209,
											"end": 17259,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "DUP2"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "AND"
										},
										{
											"begin": 17286,
											"end": 17291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "DUP2"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "DUP2"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "MSTORE"
										},
										{
											"begin": 17270,
											"end": 17276,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "MSTORE"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "DUP1"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "DUP3"
										},
										{
											"begin": 17270,
											"end": 17283,
											"name": "KECCAK256"
										},
										{
											"begin": 17270,
											"end": 17291,
											"name": "DUP1"
										},
										{
											"begin": 17270,
											"end": 17291,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 17270,
											"end": 17291,
											"name": "AND"
										},
										{
											"begin": 17270,
											"end": 17291,
											"name": "SWAP1"
										},
										{
											"begin": 17270,
											"end": 17291,
											"name": "SSTORE"
										},
										{
											"begin": 17307,
											"end": 17329,
											"name": "MLOAD"
										},
										{
											"begin": 17307,
											"end": 17329,
											"name": "PUSH",
											"value": "C3776B472EBF54114339EEC9E4DC924E7CE307A97F5C1EE72B6D474E6E5E8B7C"
										},
										{
											"begin": 17307,
											"end": 17329,
											"name": "SWAP2"
										},
										{
											"begin": 17286,
											"end": 17291,
											"name": "SWAP1"
										},
										{
											"begin": 17307,
											"end": 17329,
											"name": "LOG2"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "POP"
										},
										{
											"begin": 17134,
											"end": 17337,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "JUMPDEST"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "AND"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "DUP2"
										},
										{
											"begin": 4698,
											"end": 4725,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "JUMPDEST"
										},
										{
											"begin": 14525,
											"end": 14538,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14525,
											"end": 14538,
											"name": "SLOAD"
										},
										{
											"begin": 14571,
											"end": 14588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14571,
											"end": 14588,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14525,
											"end": 14538,
											"name": "AND"
										},
										{
											"begin": 14511,
											"end": 14521,
											"name": "CALLER"
										},
										{
											"begin": 14511,
											"end": 14538,
											"name": "EQ"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "JUMPI"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "DUP1"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "DUP2"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "MSTORE"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "DUP3"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "ADD"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "MSTORE"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "DUP3"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "ADD"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "MSTORE"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "6F6E6C7950726F706F7365644F776E6572000000000000000000000000000000"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "DUP3"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "ADD"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "MSTORE"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "SWAP1"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "MLOAD"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "SWAP1"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "DUP2"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "SWAP1"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "SUB"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "ADD"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "SWAP1"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "REVERT"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 14503,
											"end": 14560,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "DUP1"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "SLOAD"
										},
										{
											"begin": 14615,
											"end": 14628,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 14615,
											"end": 14628,
											"name": "DUP1"
										},
										{
											"begin": 14615,
											"end": 14628,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "DUP1"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "DUP5"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14615,
											"end": 14628,
											"name": "DUP4"
										},
										{
											"begin": 14615,
											"end": 14628,
											"name": "DUP2"
										},
										{
											"begin": 14615,
											"end": 14628,
											"name": "AND"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "SWAP2"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "SWAP1"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "SWAP2"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "OR"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "SWAP6"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "DUP7"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "SWAP1"
										},
										{
											"begin": 14607,
											"end": 14628,
											"name": "SSTORE"
										},
										{
											"begin": 14639,
											"end": 14665,
											"name": "SWAP2"
										},
										{
											"begin": 14639,
											"end": 14665,
											"name": "AND"
										},
										{
											"begin": 14639,
											"end": 14665,
											"name": "SWAP1"
										},
										{
											"begin": 14639,
											"end": 14665,
											"name": "SWAP2"
										},
										{
											"begin": 14639,
											"end": 14665,
											"name": "SSTORE"
										},
										{
											"begin": 14681,
											"end": 14719,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14681,
											"end": 14719,
											"name": "MLOAD"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "SWAP2"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "DUP2"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "AND"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "SWAP3"
										},
										{
											"begin": 14713,
											"end": 14718,
											"name": "AND"
										},
										{
											"begin": 14713,
											"end": 14718,
											"name": "SWAP1"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "DUP3"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "SWAP1"
										},
										{
											"begin": 14681,
											"end": 14719,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 14681,
											"end": 14719,
											"name": "SWAP1"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14591,
											"end": 14596,
											"name": "SWAP1"
										},
										{
											"begin": 14681,
											"end": 14719,
											"name": "LOG3"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "POP"
										},
										{
											"begin": 14459,
											"end": 14727,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "JUMPDEST"
										},
										{
											"begin": 18571,
											"end": 18587,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18571,
											"end": 18587,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18571,
											"end": 18587,
											"name": "AND"
										},
										{
											"begin": 18557,
											"end": 18567,
											"name": "CALLER"
										},
										{
											"begin": 18557,
											"end": 18587,
											"name": "EQ"
										},
										{
											"begin": 18557,
											"end": 18587,
											"name": "DUP1"
										},
										{
											"begin": 18557,
											"end": 18610,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 18557,
											"end": 18610,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 18605,
											"end": 18610,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18605,
											"end": 18610,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18605,
											"end": 18610,
											"name": "AND"
										},
										{
											"begin": 18591,
											"end": 18601,
											"name": "CALLER"
										},
										{
											"begin": 18591,
											"end": 18610,
											"name": "EQ"
										},
										{
											"begin": 18557,
											"end": 18610,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 18557,
											"end": 18610,
											"name": "JUMPDEST"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "ISZERO"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "ISZERO"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "JUMPI"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "DUP1"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "DUP2"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "MSTORE"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "DUP3"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "ADD"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "MSTORE"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "DUP3"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "ADD"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "MSTORE"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "6F6E6C7920537570706C79436F6E74726F6C6C6572206F72204F776E65720000"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "DUP3"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "ADD"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "MSTORE"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "SWAP1"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "MLOAD"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "SWAP1"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "DUP2"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "SWAP1"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "SUB"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "ADD"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "SWAP1"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "REVERT"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 18535,
											"end": 18668,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18701,
											"end": 18735,
											"name": "DUP2"
										},
										{
											"begin": 18701,
											"end": 18735,
											"name": "AND"
										},
										{
											"begin": 18701,
											"end": 18735,
											"name": "ISZERO"
										},
										{
											"begin": 18701,
											"end": 18735,
											"name": "ISZERO"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "JUMPI"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP1"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP2"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MSTORE"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP3"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "ADD"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MSTORE"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "2C"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP3"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "ADD"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MSTORE"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "63616E6E6F742073657420737570706C7920636F6E74726F6C6C657220746F20"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP3"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "ADD"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MSTORE"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "61646472657373207A65726F0000000000000000000000000000000000000000"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP3"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "ADD"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MSTORE"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "SWAP1"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "MLOAD"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "SWAP1"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "DUP2"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "SWAP1"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "SUB"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "ADD"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "SWAP1"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "REVERT"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 18679,
											"end": 18807,
											"name": "JUMPDEST"
										},
										{
											"begin": 18843,
											"end": 18859,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18843,
											"end": 18859,
											"name": "SLOAD"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "DUP1"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "DUP5"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "AND"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "SWAP3"
										},
										{
											"begin": 18843,
											"end": 18859,
											"name": "AND"
										},
										{
											"begin": 18843,
											"end": 18859,
											"name": "SWAP1"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "PUSH",
											"value": "40D53B0B666E4424F29D55244E7E171A1DC332ACC11D04ED4ABD884629D8CC97"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "SWAP1"
										},
										{
											"begin": 18843,
											"end": 18859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18843,
											"end": 18859,
											"name": "SWAP1"
										},
										{
											"begin": 18823,
											"end": 18882,
											"name": "LOG3"
										},
										{
											"begin": 18893,
											"end": 18909,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "DUP1"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP3"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP1"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP3"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "AND"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP2"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP1"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP2"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "OR"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SWAP1"
										},
										{
											"begin": 18893,
											"end": 18932,
											"name": "SSTORE"
										},
										{
											"begin": 18458,
											"end": 18940,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "JUMPDEST"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "DUP2"
										},
										{
											"begin": 4585,
											"end": 4627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "JUMPDEST"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "SWAP1"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "DIV"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "AND"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "DUP2"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "JUMPDEST"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "AND"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "DUP2"
										},
										{
											"begin": 4663,
											"end": 4691,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "AND"
										},
										{
											"begin": 9758,
											"end": 9765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "SWAP1"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "DUP2"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "MSTORE"
										},
										{
											"begin": 9785,
											"end": 9793,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "MSTORE"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "SWAP1"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "KECCAK256"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "SLOAD"
										},
										{
											"begin": 9785,
											"end": 9800,
											"name": "SWAP1"
										},
										{
											"begin": 9703,
											"end": 9808,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "JUMPDEST"
										},
										{
											"begin": 7330,
											"end": 7341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7341,
											"name": "SLOAD"
										},
										{
											"begin": 7330,
											"end": 7341,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7330,
											"end": 7341,
											"name": "AND"
										},
										{
											"begin": 7329,
											"end": 7341,
											"name": "ISZERO"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "JUMPI"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "DUP1"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "DUP3"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "DUP3"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "616C726561647920696E697469616C697A656400000000000000000000000000"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "DUP3"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "MSTORE"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "MLOAD"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "DUP2"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "SUB"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "ADD"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "SWAP1"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "REVERT"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 7321,
											"end": 7365,
											"name": "JUMPDEST"
										},
										{
											"begin": 7376,
											"end": 7381,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "DUP1"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "SLOAD"
										},
										{
											"begin": 7384,
											"end": 7394,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "SWAP2"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "DUP3"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "AND"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "DUP2"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "OR"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "SWAP1"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "SWAP3"
										},
										{
											"begin": 7376,
											"end": 7394,
											"name": "SSTORE"
										},
										{
											"begin": 7405,
											"end": 7418,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7405,
											"end": 7431,
											"name": "DUP1"
										},
										{
											"begin": 7405,
											"end": 7431,
											"name": "SLOAD"
										},
										{
											"begin": 7405,
											"end": 7431,
											"name": "DUP3"
										},
										{
											"begin": 7405,
											"end": 7431,
											"name": "AND"
										},
										{
											"begin": 7405,
											"end": 7431,
											"name": "SWAP1"
										},
										{
											"begin": 7405,
											"end": 7431,
											"name": "SSTORE"
										},
										{
											"begin": 7442,
											"end": 7461,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "DUP1"
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "SLOAD"
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "DUP3"
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "AND"
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "SWAP1"
										},
										{
											"begin": 7442,
											"end": 7474,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7497,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 7485,
											"end": 7501,
											"name": "DUP2"
										},
										{
											"begin": 7485,
											"end": 7501,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7501,
											"name": "SSTORE"
										},
										{
											"begin": 7512,
											"end": 7528,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "DUP1"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "SLOAD"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "DUP4"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "AND"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "DUP5"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "OR"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "SWAP1"
										},
										{
											"begin": 7512,
											"end": 7541,
											"name": "SSTORE"
										},
										{
											"begin": 7552,
											"end": 7559,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 7552,
											"end": 7563,
											"name": "SSTORE"
										},
										{
											"begin": 7574,
											"end": 7587,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "DUP1"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "SLOAD"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "DUP3"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "AND"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "DUP4"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "OR"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "SWAP1"
										},
										{
											"begin": 7574,
											"end": 7600,
											"name": "SSTORE"
										},
										{
											"begin": 7611,
											"end": 7623,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SLOAD"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "AND"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "OR"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7636,
											"name": "SSTORE"
										},
										{
											"begin": 7647,
											"end": 7674,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 7647,
											"end": 7672,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 7647,
											"end": 7674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7647,
											"end": 7674,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 7647,
											"end": 7674,
											"name": "JUMPDEST"
										},
										{
											"begin": 7685,
											"end": 7696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "DUP1"
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "AND"
										},
										{
											"begin": 7699,
											"end": 7703,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "OR"
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "SWAP1"
										},
										{
											"begin": 7685,
											"end": 7703,
											"name": "SSTORE"
										},
										{
											"begin": 7281,
											"end": 7711,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "JUMPDEST"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "AND"
										},
										{
											"begin": 13060,
											"end": 13070,
											"name": "CALLER"
										},
										{
											"begin": 13060,
											"end": 13079,
											"name": "EQ"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH [tag]",
											"value": "296"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPI"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "E8E4944059266C653CCA10F9830A9FEE32F8D74FFBC3FE2ECADB38D10605F91E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SUB"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "REVERT"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "tag",
											"value": "296"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPDEST"
										},
										{
											"begin": 15559,
											"end": 15565,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15559,
											"end": 15565,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15559,
											"end": 15565,
											"name": "SWAP1"
										},
										{
											"begin": 15559,
											"end": 15565,
											"name": "DIV"
										},
										{
											"begin": 15559,
											"end": 15565,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15559,
											"end": 15565,
											"name": "AND"
										},
										{
											"begin": 15558,
											"end": 15565,
											"name": "ISZERO"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "JUMPI"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "DUP1"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "616C726561647920706175736564000000000000000000000000000000000000"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "DUP3"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "MSTORE"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "MLOAD"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "DUP2"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "SUB"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "ADD"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "SWAP1"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "REVERT"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 15550,
											"end": 15584,
											"name": "JUMPDEST"
										},
										{
											"begin": 15595,
											"end": 15601,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "DUP1"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF0000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "OR"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "SWAP1"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "SSTORE"
										},
										{
											"begin": 15624,
											"end": 15631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15624,
											"end": 15631,
											"name": "MLOAD"
										},
										{
											"begin": 15624,
											"end": 15631,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 15624,
											"end": 15631,
											"name": "SWAP1"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15595,
											"end": 15608,
											"name": "SWAP1"
										},
										{
											"begin": 15624,
											"end": 15631,
											"name": "LOG1"
										},
										{
											"begin": 15505,
											"end": 15639,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "AND"
										},
										{
											"begin": 20918,
											"end": 20925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "SWAP1"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "DUP2"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "MSTORE"
										},
										{
											"begin": 20945,
											"end": 20953,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "MSTORE"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "SWAP1"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "KECCAK256"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "SLOAD"
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "SWAP1"
										},
										{
											"begin": 20862,
											"end": 20969,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "JUMPDEST"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "AND"
										},
										{
											"begin": 16217,
											"end": 16227,
											"name": "CALLER"
										},
										{
											"begin": 16217,
											"end": 16250,
											"name": "EQ"
										},
										{
											"begin": 16217,
											"end": 16250,
											"name": "DUP1"
										},
										{
											"begin": 16217,
											"end": 16273,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 16217,
											"end": 16273,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 16268,
											"end": 16273,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16268,
											"end": 16273,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16268,
											"end": 16273,
											"name": "AND"
										},
										{
											"begin": 16254,
											"end": 16264,
											"name": "CALLER"
										},
										{
											"begin": 16254,
											"end": 16273,
											"name": "EQ"
										},
										{
											"begin": 16217,
											"end": 16273,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 16217,
											"end": 16273,
											"name": "JUMPDEST"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ISZERO"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ISZERO"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "JUMPI"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP1"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP2"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP3"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP3"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "6F6E6C7920617373657450726F74656374696F6E526F6C65206F72204F776E65"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP3"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP3"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MSTORE"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "SWAP1"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "MLOAD"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "SWAP1"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "DUP2"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "SWAP1"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "SUB"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "ADD"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "SWAP1"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "REVERT"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 16195,
											"end": 16334,
											"name": "JUMPDEST"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "SLOAD"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "DUP1"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "DUP5"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "AND"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "SWAP3"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "AND"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "SWAP1"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "PUSH",
											"value": "D0C36A0AC0FE0D375386BD568FA2947A2DAE7523A0A0CFDAB20B7532A105BD1B"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "SWAP1"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16387,
											"end": 16406,
											"name": "SWAP1"
										},
										{
											"begin": 16350,
											"end": 16455,
											"name": "LOG3"
										},
										{
											"begin": 16466,
											"end": 16485,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "DUP1"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP3"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP1"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP3"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "AND"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP2"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP1"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP2"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "OR"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SWAP1"
										},
										{
											"begin": 16466,
											"end": 16511,
											"name": "SSTORE"
										},
										{
											"begin": 16112,
											"end": 16519,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "JUMPDEST"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "AND"
										},
										{
											"begin": 16581,
											"end": 16591,
											"name": "CALLER"
										},
										{
											"begin": 16581,
											"end": 16614,
											"name": "EQ"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "JUMPI"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SUB"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "REVERT"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "DUP2"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "AND"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "SWAP1"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "DUP2"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "MSTORE"
										},
										{
											"begin": 16882,
											"end": 16888,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "MSTORE"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "SWAP1"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "KECCAK256"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "SLOAD"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 16882,
											"end": 16895,
											"name": "AND"
										},
										{
											"begin": 16881,
											"end": 16895,
											"name": "ISZERO"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "JUMPI"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "DUP1"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "DUP2"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "MSTORE"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "DUP3"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "ADD"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "MSTORE"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "DUP3"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "ADD"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "MSTORE"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "6164647265737320616C72656164792066726F7A656E00000000000000000000"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "DUP3"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "ADD"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "MSTORE"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "SWAP1"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "MLOAD"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "SWAP1"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "DUP2"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "SWAP1"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "SUB"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "ADD"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "SWAP1"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "REVERT"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 16873,
											"end": 16922,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "DUP2"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "AND"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "DUP2"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "DUP2"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "MSTORE"
										},
										{
											"begin": 16933,
											"end": 16939,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "MSTORE"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "DUP1"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "DUP3"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "KECCAK256"
										},
										{
											"begin": 16933,
											"end": 16953,
											"name": "DUP1"
										},
										{
											"begin": 16933,
											"end": 16953,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 16933,
											"end": 16953,
											"name": "AND"
										},
										{
											"begin": 16949,
											"end": 16953,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16933,
											"end": 16953,
											"name": "OR"
										},
										{
											"begin": 16933,
											"end": 16953,
											"name": "SWAP1"
										},
										{
											"begin": 16933,
											"end": 16953,
											"name": "SSTORE"
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "MLOAD"
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "PUSH",
											"value": "90811A8EDD3B3C17EEAEFFFC17F639CC69145D41A359C9843994DC2538203690"
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "SWAP2"
										},
										{
											"begin": 16933,
											"end": 16946,
											"name": "SWAP1"
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "LOG2"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "POP"
										},
										{
											"begin": 16800,
											"end": 16997,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "JUMPDEST"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "AND"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "DUP2"
										},
										{
											"begin": 3126,
											"end": 3146,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "MLOAD"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "DUP3"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "MSTORE"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "DUP2"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "MSTORE"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "PUSH",
											"value": "5041584700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "DUP3"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "MSTORE"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "DUP2"
										},
										{
											"begin": 2860,
											"end": 2898,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "JUMPDEST"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "SLOAD"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "DUP2"
										},
										{
											"begin": 4634,
											"end": 4656,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "JUMPDEST"
										},
										{
											"begin": 29193,
											"end": 29216,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 29193,
											"end": 29216,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29193,
											"end": 29216,
											"name": "AND"
										},
										{
											"begin": 29179,
											"end": 29189,
											"name": "CALLER"
										},
										{
											"begin": 29179,
											"end": 29216,
											"name": "EQ"
										},
										{
											"begin": 29179,
											"end": 29216,
											"name": "DUP1"
										},
										{
											"begin": 29179,
											"end": 29239,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 29179,
											"end": 29239,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 29234,
											"end": 29239,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29234,
											"end": 29239,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29234,
											"end": 29239,
											"name": "AND"
										},
										{
											"begin": 29220,
											"end": 29230,
											"name": "CALLER"
										},
										{
											"begin": 29220,
											"end": 29239,
											"name": "EQ"
										},
										{
											"begin": 29179,
											"end": 29239,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 29179,
											"end": 29239,
											"name": "JUMPDEST"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "ISZERO"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "ISZERO"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "JUMPI"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "DUP1"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "DUP2"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "MSTORE"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "DUP3"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "ADD"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "MSTORE"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "DUP3"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "ADD"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "MSTORE"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "6F6E6C792057686974656C6973746572206F72204F776E657200000000000000"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "DUP3"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "ADD"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "MSTORE"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "SWAP1"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "MLOAD"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "SWAP1"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "DUP2"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "SWAP1"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "SUB"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "ADD"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "SWAP1"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "REVERT"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 29157,
											"end": 29292,
											"name": "JUMPDEST"
										},
										{
											"begin": 29303,
											"end": 29326,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "DUP1"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "DUP4"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "DUP2"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "AND"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SWAP2"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "DUP3"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "OR"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SWAP3"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "DUP4"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SWAP1"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SSTORE"
										},
										{
											"begin": 29360,
											"end": 29465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29360,
											"end": 29465,
											"name": "MLOAD"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SWAP2"
										},
										{
											"begin": 29303,
											"end": 29344,
											"name": "SWAP3"
										},
										{
											"begin": 29401,
											"end": 29424,
											"name": "AND"
										},
										{
											"begin": 29401,
											"end": 29424,
											"name": "SWAP1"
										},
										{
											"begin": 29360,
											"end": 29465,
											"name": "PUSH",
											"value": "54E20B07412504AEE4D17519747AE2F01B9924F7F30059793FE5576C4220A0C3"
										},
										{
											"begin": 29360,
											"end": 29465,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1"
										},
										{
											"begin": 29360,
											"end": 29465,
											"name": "LOG3"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "POP"
										},
										{
											"begin": 29078,
											"end": 29473,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "JUMPDEST"
										},
										{
											"begin": 19013,
											"end": 19029,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 19013,
											"end": 19029,
											"name": "SLOAD"
										},
										{
											"begin": 20117,
											"end": 20129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20117,
											"end": 20129,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19013,
											"end": 19029,
											"name": "AND"
										},
										{
											"begin": 18999,
											"end": 19009,
											"name": "CALLER"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "EQ"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "JUMPI"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP3"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP3"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "6F6E6C79537570706C79436F6E74726F6C6C6572000000000000000000000000"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP3"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MLOAD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SUB"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "REVERT"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "JUMPDEST"
										},
										{
											"begin": 20174,
											"end": 20190,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 20174,
											"end": 20190,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20174,
											"end": 20190,
											"name": "AND"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "SWAP1"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "DUP2"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "MSTORE"
										},
										{
											"begin": 20165,
											"end": 20173,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "MSTORE"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "SWAP1"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "KECCAK256"
										},
										{
											"begin": 20165,
											"end": 20191,
											"name": "SLOAD"
										},
										{
											"begin": 20155,
											"end": 20191,
											"name": "DUP3"
										},
										{
											"begin": 20155,
											"end": 20191,
											"name": "GT"
										},
										{
											"begin": 20155,
											"end": 20191,
											"name": "ISZERO"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "JUMPI"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "DUP1"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "DUP2"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "MSTORE"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "DUP3"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "ADD"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "MSTORE"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "DUP3"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "ADD"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "MSTORE"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "6E6F7420656E6F75676820737570706C79000000000000000000000000000000"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "DUP3"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "ADD"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "MSTORE"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "SWAP1"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "MLOAD"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "SWAP1"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "DUP2"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "SWAP1"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "SUB"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "ADD"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "SWAP1"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "REVERT"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 20147,
											"end": 20213,
											"name": "JUMPDEST"
										},
										{
											"begin": 20262,
											"end": 20278,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 20262,
											"end": 20278,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20262,
											"end": 20278,
											"name": "AND"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "SWAP1"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "DUP2"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "MSTORE"
										},
										{
											"begin": 20253,
											"end": 20261,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "MSTORE"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "SWAP1"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "KECCAK256"
										},
										{
											"begin": 20253,
											"end": 20279,
											"name": "SLOAD"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "SWAP1"
										},
										{
											"begin": 20284,
											"end": 20290,
											"name": "DUP4"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20253,
											"end": 20283,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "AND"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 20253,
											"end": 20291,
											"name": "JUMPDEST"
										},
										{
											"begin": 20233,
											"end": 20249,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 20233,
											"end": 20249,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20233,
											"end": 20249,
											"name": "AND"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "SWAP1"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "DUP2"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "MSTORE"
										},
										{
											"begin": 20224,
											"end": 20232,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "MSTORE"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "SWAP1"
										},
										{
											"begin": 20224,
											"end": 20250,
											"name": "KECCAK256"
										},
										{
											"begin": 20224,
											"end": 20291,
											"name": "SSTORE"
										},
										{
											"begin": 20317,
											"end": 20329,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 20317,
											"end": 20329,
											"name": "SLOAD"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "SWAP1"
										},
										{
											"begin": 20334,
											"end": 20340,
											"name": "DUP4"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20317,
											"end": 20333,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "AND"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 20317,
											"end": 20341,
											"name": "JUMPDEST"
										},
										{
											"begin": 20302,
											"end": 20314,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 20302,
											"end": 20341,
											"name": "SSTORE"
										},
										{
											"begin": 20373,
											"end": 20389,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 20373,
											"end": 20389,
											"name": "SLOAD"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "DUP1"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "MLOAD"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "DUP5"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "DUP2"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "MSTORE"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "SWAP1"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20373,
											"end": 20389,
											"name": "SWAP1"
										},
										{
											"begin": 20373,
											"end": 20389,
											"name": "SWAP3"
										},
										{
											"begin": 20373,
											"end": 20389,
											"name": "AND"
										},
										{
											"begin": 20373,
											"end": 20389,
											"name": "SWAP2"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "PUSH",
											"value": "1B7E18241BECED0D7F41FBAB1EA8ED468732EDBCB74EC4420151654CA71C8A63"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "SWAP2"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "DUP2"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "SWAP1"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "SUB"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "ADD"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "SWAP1"
										},
										{
											"begin": 20357,
											"end": 20398,
											"name": "LOG2"
										},
										{
											"begin": 20423,
											"end": 20439,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 20423,
											"end": 20439,
											"name": "SLOAD"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "DUP1"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "MLOAD"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "DUP5"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "DUP2"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "MSTORE"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "SWAP1"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "MLOAD"
										},
										{
											"begin": 20449,
											"end": 20450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20449,
											"end": 20450,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20423,
											"end": 20439,
											"name": "AND"
										},
										{
											"begin": 20423,
											"end": 20439,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "SWAP2"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "SWAP1"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "DUP2"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "SWAP1"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "SUB"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "ADD"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "SWAP1"
										},
										{
											"begin": 20414,
											"end": 20460,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 20478,
											"end": 20482,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "SWAP2"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "SWAP1"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "POP"
										},
										{
											"begin": 20013,
											"end": 20490,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "AND"
										},
										{
											"begin": 28858,
											"end": 28862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "SWAP1"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "DUP2"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "MSTORE"
										},
										{
											"begin": 28887,
											"end": 28908,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "MSTORE"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "SWAP1"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "KECCAK256"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "SLOAD"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "AND"
										},
										{
											"begin": 28887,
											"end": 28915,
											"name": "SWAP1"
										},
										{
											"begin": 28760,
											"end": 28923,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "JUMPDEST"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SLOAD"
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SWAP1"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "DIV"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15375,
											"name": "ISZERO"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPI"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "876F99E759874A085884E6E71A9F6228292079DDBCCC024D1921F2C7370E10C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SUB"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "REVERT"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "DUP4"
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "AND"
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "ISZERO"
										},
										{
											"begin": 9204,
											"end": 9221,
											"name": "ISZERO"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "JUMPI"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "DUP1"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "DUP2"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "MSTORE"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "DUP3"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "ADD"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "MSTORE"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "DUP3"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "ADD"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "MSTORE"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "63616E6E6F74207472616E7366657220746F2061646472657373207A65726F00"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "DUP3"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "ADD"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "MSTORE"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "SWAP1"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "MLOAD"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "SWAP1"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "DUP2"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "SWAP1"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "SUB"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "ADD"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "SWAP1"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "REVERT"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 9196,
											"end": 9257,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "DUP4"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "AND"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "SWAP1"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "DUP2"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "MSTORE"
										},
										{
											"begin": 9277,
											"end": 9283,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "MSTORE"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "SWAP1"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "KECCAK256"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "SLOAD"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9277,
											"end": 9288,
											"name": "AND"
										},
										{
											"begin": 9276,
											"end": 9288,
											"name": "ISZERO"
										},
										{
											"begin": 9276,
											"end": 9311,
											"name": "DUP1"
										},
										{
											"begin": 9276,
											"end": 9311,
											"name": "ISZERO"
										},
										{
											"begin": 9276,
											"end": 9311,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 9276,
											"end": 9311,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9300,
											"end": 9310,
											"name": "CALLER"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "SWAP1"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "DUP2"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "MSTORE"
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "MSTORE"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "SWAP1"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "KECCAK256"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "SLOAD"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "AND"
										},
										{
											"begin": 9292,
											"end": 9311,
											"name": "ISZERO"
										},
										{
											"begin": 9276,
											"end": 9311,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 9276,
											"end": 9311,
											"name": "JUMPDEST"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "ISZERO"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "ISZERO"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "JUMPI"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "DUP1"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "DUP2"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MSTORE"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "DUP3"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "ADD"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MSTORE"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "DUP3"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "ADD"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "834D376937710E138A4FB943EDB26D656FA6EA3CECFE10E80A0FDD4D89414CAC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "DUP3"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "ADD"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MSTORE"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "MLOAD"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "DUP2"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "SUB"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "ADD"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "SWAP1"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "REVERT"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 9268,
											"end": 9330,
											"name": "JUMPDEST"
										},
										{
											"begin": 9368,
											"end": 9378,
											"name": "CALLER"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "SWAP1"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "DUP2"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "MSTORE"
										},
										{
											"begin": 9359,
											"end": 9367,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "MSTORE"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "SWAP1"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "KECCAK256"
										},
										{
											"begin": 9359,
											"end": 9379,
											"name": "SLOAD"
										},
										{
											"begin": 9349,
											"end": 9379,
											"name": "DUP3"
										},
										{
											"begin": 9349,
											"end": 9379,
											"name": "GT"
										},
										{
											"begin": 9349,
											"end": 9379,
											"name": "ISZERO"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "JUMPI"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "DUP1"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "DUP2"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "MSTORE"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "DUP3"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "ADD"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "MSTORE"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "DUP3"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "ADD"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "MSTORE"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "696E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "DUP3"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "ADD"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "MSTORE"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "SWAP1"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "MLOAD"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "SWAP1"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "DUP2"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "SWAP1"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "SUB"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "ADD"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "SWAP1"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "REVERT"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 9341,
											"end": 9402,
											"name": "JUMPDEST"
										},
										{
											"begin": 9415,
											"end": 9449,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 9425,
											"end": 9435,
											"name": "CALLER"
										},
										{
											"begin": 9437,
											"end": 9440,
											"name": "DUP5"
										},
										{
											"begin": 9442,
											"end": 9448,
											"name": "DUP5"
										},
										{
											"begin": 9415,
											"end": 9424,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 9415,
											"end": 9449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9415,
											"end": 9449,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 9415,
											"end": 9449,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9467,
											"end": 9471,
											"name": "SWAP4"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 9070,
											"end": 9479,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "JUMPDEST"
										},
										{
											"begin": 29567,
											"end": 29590,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 29567,
											"end": 29590,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29567,
											"end": 29590,
											"name": "AND"
										},
										{
											"begin": 29553,
											"end": 29563,
											"name": "CALLER"
										},
										{
											"begin": 29553,
											"end": 29590,
											"name": "EQ"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH [tag]",
											"value": "326"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "JUMPI"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP2"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP3"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP3"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "6F6E6C794265746144656C656761746557686974656C69737465720000000000"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP3"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MLOAD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP2"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SUB"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "REVERT"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "tag",
											"value": "326"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "DUP2"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "AND"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "SWAP1"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "DUP2"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "MSTORE"
										},
										{
											"begin": 29941,
											"end": 29962,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "MSTORE"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "SWAP1"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "KECCAK256"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "SLOAD"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 29941,
											"end": 29969,
											"name": "AND"
										},
										{
											"begin": 29940,
											"end": 29969,
											"name": "ISZERO"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "JUMPI"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "DUP1"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "DUP2"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "MSTORE"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "DUP3"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "ADD"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "MSTORE"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "DUP3"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "ADD"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "MSTORE"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "64656C656761746520616C72656164792077686974656C697374656400000000"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "DUP3"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "ADD"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "MSTORE"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "SWAP1"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "MLOAD"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "SWAP1"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "DUP2"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "SWAP1"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "SUB"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "ADD"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "SWAP1"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "REVERT"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 29932,
											"end": 30002,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "DUP2"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "AND"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "DUP2"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "DUP2"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "MSTORE"
										},
										{
											"begin": 30013,
											"end": 30034,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "MSTORE"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "DUP1"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "DUP3"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "KECCAK256"
										},
										{
											"begin": 30013,
											"end": 30048,
											"name": "DUP1"
										},
										{
											"begin": 30013,
											"end": 30048,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 30013,
											"end": 30048,
											"name": "AND"
										},
										{
											"begin": 30044,
											"end": 30048,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 30013,
											"end": 30048,
											"name": "OR"
										},
										{
											"begin": 30013,
											"end": 30048,
											"name": "SWAP1"
										},
										{
											"begin": 30013,
											"end": 30048,
											"name": "SSTORE"
										},
										{
											"begin": 30064,
											"end": 30094,
											"name": "MLOAD"
										},
										{
											"begin": 30064,
											"end": 30094,
											"name": "PUSH",
											"value": "8A22E0D8ECB02260464E9A55B7D82B17482735AE1F765DE59DEE573DFEC5B36D"
										},
										{
											"begin": 30064,
											"end": 30094,
											"name": "SWAP2"
										},
										{
											"begin": 30013,
											"end": 30041,
											"name": "SWAP1"
										},
										{
											"begin": 30064,
											"end": 30094,
											"name": "LOG2"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "POP"
										},
										{
											"begin": 29817,
											"end": 30102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "JUMPDEST"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13074,
											"end": 13079,
											"name": "AND"
										},
										{
											"begin": 13060,
											"end": 13070,
											"name": "CALLER"
										},
										{
											"begin": 13060,
											"end": 13079,
											"name": "EQ"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPI"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "E8E4944059266C653CCA10F9830A9FEE32F8D74FFBC3FE2ECADB38D10605F91E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP3"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MSTORE"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "MLOAD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "DUP2"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SUB"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "ADD"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "SWAP1"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "REVERT"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 13052,
											"end": 13093,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13406,
											"end": 13434,
											"name": "DUP2"
										},
										{
											"begin": 13406,
											"end": 13434,
											"name": "AND"
										},
										{
											"begin": 13406,
											"end": 13434,
											"name": "ISZERO"
										},
										{
											"begin": 13406,
											"end": 13434,
											"name": "ISZERO"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH [tag]",
											"value": "332"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "JUMPI"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP1"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP2"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP3"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "29"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP3"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "63616E6E6F74207472616E73666572206F776E65727368697020746F20616464"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP3"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "72657373207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP3"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MSTORE"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "MLOAD"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "DUP2"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "SUB"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "ADD"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "SWAP1"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "REVERT"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "tag",
											"value": "332"
										},
										{
											"begin": 13384,
											"end": 13503,
											"name": "JUMPDEST"
										},
										{
											"begin": 13522,
											"end": 13532,
											"name": "CALLER"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13522,
											"end": 13550,
											"name": "DUP3"
										},
										{
											"begin": 13522,
											"end": 13550,
											"name": "AND"
										},
										{
											"begin": 13522,
											"end": 13550,
											"name": "EQ"
										},
										{
											"begin": 13522,
											"end": 13550,
											"name": "ISZERO"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "JUMPI"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "DUP1"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "DUP2"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "MSTORE"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "DUP3"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "ADD"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "MSTORE"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "DUP3"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "ADD"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "MSTORE"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "63616C6C657220616C7265616479206973206F776E6572000000000000000000"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "DUP3"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "ADD"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "MSTORE"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "SWAP1"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "MLOAD"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "SWAP1"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "DUP2"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "SWAP1"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "SUB"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "ADD"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "SWAP1"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "REVERT"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 13514,
											"end": 13578,
											"name": "JUMPDEST"
										},
										{
											"begin": 13589,
											"end": 13602,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "DUP1"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "DUP4"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "DUP2"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "AND"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "OR"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SWAP2"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "DUP3"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SWAP1"
										},
										{
											"begin": 13589,
											"end": 13619,
											"name": "SSTORE"
										},
										{
											"begin": 13661,
											"end": 13666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13661,
											"end": 13666,
											"name": "SLOAD"
										},
										{
											"begin": 13635,
											"end": 13682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13635,
											"end": 13682,
											"name": "MLOAD"
										},
										{
											"begin": 13668,
											"end": 13681,
											"name": "SWAP3"
										},
										{
											"begin": 13668,
											"end": 13681,
											"name": "DUP3"
										},
										{
											"begin": 13668,
											"end": 13681,
											"name": "AND"
										},
										{
											"begin": 13668,
											"end": 13681,
											"name": "SWAP3"
										},
										{
											"begin": 13661,
											"end": 13666,
											"name": "SWAP2"
										},
										{
											"begin": 13661,
											"end": 13666,
											"name": "AND"
										},
										{
											"begin": 13661,
											"end": 13666,
											"name": "SWAP1"
										},
										{
											"begin": 13635,
											"end": 13682,
											"name": "PUSH",
											"value": "F4E75B79500AB730F8A026ED3CBA6D55331BCB64C9E9F60C548E371356E5E3C0"
										},
										{
											"begin": 13635,
											"end": 13682,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1"
										},
										{
											"begin": 13635,
											"end": 13682,
											"name": "LOG3"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13690,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "JUMPDEST"
										},
										{
											"begin": 19013,
											"end": 19029,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 19013,
											"end": 19029,
											"name": "SLOAD"
										},
										{
											"begin": 19445,
											"end": 19457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19445,
											"end": 19457,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19013,
											"end": 19029,
											"name": "AND"
										},
										{
											"begin": 18999,
											"end": 19009,
											"name": "CALLER"
										},
										{
											"begin": 18999,
											"end": 19029,
											"name": "EQ"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "JUMPI"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP3"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP3"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "6F6E6C79537570706C79436F6E74726F6C6C6572000000000000000000000000"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP3"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MSTORE"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "MLOAD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "DUP2"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SUB"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "ADD"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "SWAP1"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "REVERT"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 18991,
											"end": 19054,
											"name": "JUMPDEST"
										},
										{
											"begin": 19490,
											"end": 19502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19490,
											"end": 19502,
											"name": "SLOAD"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "SWAP1"
										},
										{
											"begin": 19507,
											"end": 19513,
											"name": "DUP4"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19490,
											"end": 19506,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "AND"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 19490,
											"end": 19514,
											"name": "JUMPDEST"
										},
										{
											"begin": 19475,
											"end": 19487,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 19475,
											"end": 19514,
											"name": "SSTORE"
										},
										{
											"begin": 19563,
											"end": 19579,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 19563,
											"end": 19579,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19563,
											"end": 19579,
											"name": "AND"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "SWAP1"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "DUP2"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "MSTORE"
										},
										{
											"begin": 19554,
											"end": 19562,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "MSTORE"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "SWAP1"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "KECCAK256"
										},
										{
											"begin": 19554,
											"end": 19580,
											"name": "SLOAD"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "SWAP1"
										},
										{
											"begin": 19585,
											"end": 19591,
											"name": "DUP4"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19554,
											"end": 19584,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "AND"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 19554,
											"end": 19592,
											"name": "JUMPDEST"
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "DUP1"
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "SWAP1"
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "DUP2"
										},
										{
											"begin": 19534,
											"end": 19550,
											"name": "AND"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "SWAP1"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "DUP2"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "MSTORE"
										},
										{
											"begin": 19525,
											"end": 19533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "SWAP1"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "DUP2"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "MSTORE"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "SWAP2"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "DUP3"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "SWAP1"
										},
										{
											"begin": 19525,
											"end": 19551,
											"name": "KECCAK256"
										},
										{
											"begin": 19525,
											"end": 19592,
											"name": "SWAP5"
										},
										{
											"begin": 19525,
											"end": 19592,
											"name": "SWAP1"
										},
										{
											"begin": 19525,
											"end": 19592,
											"name": "SWAP5"
										},
										{
											"begin": 19525,
											"end": 19592,
											"name": "SSTORE"
										},
										{
											"begin": 19624,
											"end": 19640,
											"name": "SWAP2"
										},
										{
											"begin": 19624,
											"end": 19640,
											"name": "SLOAD"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "DUP3"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "MLOAD"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "DUP7"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "DUP2"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "MSTORE"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "SWAP3"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "MLOAD"
										},
										{
											"begin": 19624,
											"end": 19640,
											"name": "SWAP2"
										},
										{
											"begin": 19624,
											"end": 19640,
											"name": "AND"
										},
										{
											"begin": 19624,
											"end": 19640,
											"name": "SWAP3"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "PUSH",
											"value": "F5C174D57843E57FEA3C649FDDE37F015EF08750759CBEE88060390566A98797"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "SWAP3"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "DUP3"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "SWAP1"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "SUB"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "ADD"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "SWAP1"
										},
										{
											"begin": 19608,
											"end": 19649,
											"name": "LOG2"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "SLOAD"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "DUP1"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "MLOAD"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "DUP5"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "DUP2"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "MSTORE"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "SWAP1"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "SWAP1"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "SWAP3"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "AND"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "SWAP2"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19686,
											"end": 19702,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "SWAP2"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "SWAP1"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "DUP2"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "SWAP1"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "SUB"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "ADD"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "SWAP1"
										},
										{
											"begin": 19665,
											"end": 19711,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 19729,
											"end": 19733,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "SWAP2"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "SWAP1"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "POP"
										},
										{
											"begin": 19341,
											"end": 19741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "JUMPDEST"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "AND"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "DUP2"
										},
										{
											"begin": 3470,
											"end": 3508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "JUMPDEST"
										},
										{
											"begin": 4444,
											"end": 4445,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "DUP2"
										},
										{
											"begin": 4408,
											"end": 4445,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "JUMPDEST"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "AND"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3181,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "JUMPDEST"
										},
										{
											"begin": 29567,
											"end": 29590,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 29567,
											"end": 29590,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 29567,
											"end": 29590,
											"name": "AND"
										},
										{
											"begin": 29553,
											"end": 29563,
											"name": "CALLER"
										},
										{
											"begin": 29553,
											"end": 29590,
											"name": "EQ"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "JUMPI"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP2"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP3"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP3"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "6F6E6C794265746144656C656761746557686974656C69737465720000000000"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP3"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MSTORE"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "MLOAD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "DUP2"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SUB"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "ADD"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "SWAP1"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "REVERT"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 29531,
											"end": 29645,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "DUP2"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "AND"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "SWAP1"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "DUP2"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "MSTORE"
										},
										{
											"begin": 30384,
											"end": 30405,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "MSTORE"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "SWAP1"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "KECCAK256"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "SLOAD"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 30384,
											"end": 30412,
											"name": "AND"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "ISZERO"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "ISZERO"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "JUMPI"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "DUP1"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "DUP2"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "MSTORE"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "DUP3"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "ADD"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "MSTORE"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "DUP3"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "ADD"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "MSTORE"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "64656C6567617465206E6F742077686974656C69737465640000000000000000"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "DUP3"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "ADD"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "MSTORE"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "SWAP1"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "MLOAD"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "SWAP1"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "DUP2"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "SWAP1"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "SUB"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "ADD"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "SWAP1"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "REVERT"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 30376,
											"end": 30441,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "DUP2"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "AND"
										},
										{
											"begin": 30483,
											"end": 30488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "DUP2"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "DUP2"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "MSTORE"
										},
										{
											"begin": 30452,
											"end": 30473,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "MSTORE"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "DUP1"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "DUP3"
										},
										{
											"begin": 30452,
											"end": 30480,
											"name": "KECCAK256"
										},
										{
											"begin": 30452,
											"end": 30488,
											"name": "DUP1"
										},
										{
											"begin": 30452,
											"end": 30488,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 30452,
											"end": 30488,
											"name": "AND"
										},
										{
											"begin": 30452,
											"end": 30488,
											"name": "SWAP1"
										},
										{
											"begin": 30452,
											"end": 30488,
											"name": "SSTORE"
										},
										{
											"begin": 30504,
											"end": 30536,
											"name": "MLOAD"
										},
										{
											"begin": 30504,
											"end": 30536,
											"name": "PUSH",
											"value": "12ACB305BEC2ECC1E4568DECC9C8E0423749CEB6AE249EAEF4EF375EC174A49C"
										},
										{
											"begin": 30504,
											"end": 30536,
											"name": "SWAP2"
										},
										{
											"begin": 30483,
											"end": 30488,
											"name": "SWAP1"
										},
										{
											"begin": 30504,
											"end": 30536,
											"name": "LOG2"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "POP"
										},
										{
											"begin": 30259,
											"end": 30544,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "SWAP2"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "DUP3"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "AND"
										},
										{
											"begin": 12193,
											"end": 12200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "SWAP1"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "DUP2"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "MSTORE"
										},
										{
											"begin": 12225,
											"end": 12232,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "SWAP1"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "DUP2"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "MSTORE"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "DUP1"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "DUP4"
										},
										{
											"begin": 12225,
											"end": 12240,
											"name": "KECCAK256"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP4"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP1"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP5"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "AND"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "DUP3"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "MSTORE"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP2"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP1"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP2"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "MSTORE"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "KECCAK256"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SLOAD"
										},
										{
											"begin": 12225,
											"end": 12250,
											"name": "SWAP1"
										},
										{
											"begin": 12092,
											"end": 12258,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "JUMPDEST"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "SLOAD"
										},
										{
											"begin": 17671,
											"end": 17687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17671,
											"end": 17687,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16595,
											"end": 16614,
											"name": "AND"
										},
										{
											"begin": 16581,
											"end": 16591,
											"name": "CALLER"
										},
										{
											"begin": 16581,
											"end": 16614,
											"name": "EQ"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "JUMPI"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "6F6E6C79417373657450726F74656374696F6E526F6C65000000000000000000"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP3"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MSTORE"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "MLOAD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "DUP2"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SUB"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "ADD"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "SWAP1"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "REVERT"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 16573,
											"end": 16642,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "DUP3"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "AND"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "SWAP1"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "DUP2"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "MSTORE"
										},
										{
											"begin": 17621,
											"end": 17627,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "MSTORE"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "SWAP1"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "KECCAK256"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "SLOAD"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 17621,
											"end": 17634,
											"name": "AND"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "ISZERO"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "ISZERO"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH [tag]",
											"value": "347"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "JUMPI"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "DUP1"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "DUP2"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MSTORE"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "DUP3"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "ADD"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MSTORE"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "DUP3"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "ADD"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MSTORE"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "61646472657373206973206E6F742066726F7A656E0000000000000000000000"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "DUP3"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "ADD"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MSTORE"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "SWAP1"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "MLOAD"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "SWAP1"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "DUP2"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "SWAP1"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "SUB"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "ADD"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "SWAP1"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "REVERT"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "tag",
											"value": "347"
										},
										{
											"begin": 17613,
											"end": 17660,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "DUP2"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "AND"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "SWAP1"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "DUP2"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "MSTORE"
										},
										{
											"begin": 17690,
											"end": 17698,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "MSTORE"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "DUP2"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "KECCAK256"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "DUP1"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "SLOAD"
										},
										{
											"begin": 17716,
											"end": 17735,
											"name": "SWAP2"
										},
										{
											"begin": 17716,
											"end": 17735,
											"name": "SWAP1"
										},
										{
											"begin": 17716,
											"end": 17735,
											"name": "SSTORE"
										},
										{
											"begin": 17761,
											"end": 17773,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17761,
											"end": 17773,
											"name": "SLOAD"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "SWAP1"
										},
										{
											"begin": 17690,
											"end": 17705,
											"name": "DUP3"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17761,
											"end": 17777,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "AND"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 17761,
											"end": 17787,
											"name": "JUMPDEST"
										},
										{
											"begin": 17746,
											"end": 17758,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17746,
											"end": 17787,
											"name": "SSTORE"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "DUP4"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "AND"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "SWAP1"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "PUSH",
											"value": "FC5960F1C5A5D2B60F031BF534AF053B1BF7D9881989AFAEB8B1D164DB23AEDE"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "SWAP1"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "SWAP1"
										},
										{
											"begin": 17803,
											"end": 17828,
											"name": "LOG2"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "DUP1"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "MLOAD"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "DUP3"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "DUP2"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "MSTORE"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SWAP1"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "DUP5"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "AND"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SWAP2"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "PUSH",
											"value": "1B7E18241BECED0D7F41FBAB1EA8ED468732EDBCB74EC4420151654CA71C8A63"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SWAP2"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SWAP1"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "DUP2"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SWAP1"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SUB"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "ADD"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "SWAP1"
										},
										{
											"begin": 17844,
											"end": 17876,
											"name": "LOG2"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "DUP1"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "MLOAD"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "DUP3"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "DUP2"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "MSTORE"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "SWAP1"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "MLOAD"
										},
										{
											"begin": 17916,
											"end": 17917,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17916,
											"end": 17917,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "DUP6"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "AND"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "SWAP2"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "DUP2"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "SWAP1"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "SUB"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "ADD"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "SWAP1"
										},
										{
											"begin": 17892,
											"end": 17929,
											"name": "LOG3"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "POP"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "POP"
										},
										{
											"begin": 17529,
											"end": 17937,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "JUMPDEST"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "SLOAD"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "DUP2"
										},
										{
											"begin": 4238,
											"end": 4271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "AND"
										},
										{
											"begin": 18202,
											"end": 18206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "SWAP1"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "DUP2"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "MSTORE"
										},
										{
											"begin": 18226,
											"end": 18232,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "MSTORE"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "SWAP1"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "KECCAK256"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "SLOAD"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "AND"
										},
										{
											"begin": 18226,
											"end": 18239,
											"name": "SWAP1"
										},
										{
											"begin": 18148,
											"end": 18247,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "JUMPDEST"
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "SLOAD"
										},
										{
											"begin": 31786,
											"end": 31810,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31786,
											"end": 31810,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 31324,
											"end": 31337,
											"name": "AND"
										},
										{
											"begin": 31310,
											"end": 31320,
											"name": "CALLER"
										},
										{
											"begin": 31310,
											"end": 31337,
											"name": "EQ"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "JUMPI"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP2"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP3"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP3"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "6F6E6C7920466565436F6E74726F6C6C65720000000000000000000000000000"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP3"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MSTORE"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "MLOAD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "DUP2"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SUB"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "ADD"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "SWAP1"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "REVERT"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 31302,
											"end": 31360,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 31677,
											"end": 31707,
											"name": "DUP3"
										},
										{
											"begin": 31677,
											"end": 31707,
											"name": "AND"
										},
										{
											"begin": 31677,
											"end": 31707,
											"name": "ISZERO"
										},
										{
											"begin": 31677,
											"end": 31707,
											"name": "ISZERO"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "JUMPI"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP1"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP2"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MSTORE"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP3"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "ADD"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MSTORE"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP3"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "ADD"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MSTORE"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "63616E6E6F74207365742066656520726563697069656E7420746F2061646472"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP3"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "ADD"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MSTORE"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "657373207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP3"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "ADD"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MSTORE"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "SWAP1"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "MLOAD"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "SWAP1"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "DUP2"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "SWAP1"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "SUB"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "ADD"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "SWAP1"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "REVERT"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 31655,
											"end": 31775,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "DUP1"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "DUP4"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "DUP2"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "DUP4"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "AND"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "OR"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "SWAP3"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "DUP4"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "SWAP1"
										},
										{
											"begin": 31836,
											"end": 31867,
											"name": "SSTORE"
										},
										{
											"begin": 31883,
											"end": 31930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 31883,
											"end": 31930,
											"name": "MLOAD"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "SWAP2"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "DUP2"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "AND"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "SWAP3"
										},
										{
											"begin": 31917,
											"end": 31929,
											"name": "AND"
										},
										{
											"begin": 31917,
											"end": 31929,
											"name": "SWAP1"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "DUP3"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "SWAP1"
										},
										{
											"begin": 31883,
											"end": 31930,
											"name": "PUSH",
											"value": "15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721"
										},
										{
											"begin": 31883,
											"end": 31930,
											"name": "SWAP1"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 31813,
											"end": 31825,
											"name": "SWAP1"
										},
										{
											"begin": 31883,
											"end": 31930,
											"name": "LOG3"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "POP"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "POP"
										},
										{
											"begin": 31545,
											"end": 31938,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMPDEST"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "AND"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "DUP2"
										},
										{
											"begin": 3398,
											"end": 3429,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 667,
											"end": 674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 699,
											"end": 704,
											"name": "DUP3"
										},
										{
											"begin": 699,
											"end": 704,
											"name": "DUP3"
										},
										{
											"begin": 699,
											"end": 704,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 729,
											"name": "DUP4"
										},
										{
											"begin": 723,
											"end": 729,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 729,
											"name": "LT"
										},
										{
											"begin": 723,
											"end": 729,
											"name": "ISZERO"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "JUMPI"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "DUP1"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "REVERT"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 715,
											"end": 730,
											"name": "JUMPDEST"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "DUP1"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "JUMPDEST"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "SWAP3"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "SWAP2"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "POP"
										},
										{
											"begin": 609,
											"end": 759,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 1286,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 853,
											"end": 1286,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 918,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP4"
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "ISZERO"
										},
										{
											"begin": 1151,
											"end": 1198,
											"name": "ISZERO"
										},
										{
											"begin": 1151,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 1151,
											"end": 1198,
											"name": "JUMPI"
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1186,
											"name": "SWAP2"
										},
										{
											"begin": 1178,
											"end": 1186,
											"name": "POP"
										},
										{
											"begin": 1178,
											"end": 1186,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 1178,
											"end": 1186,
											"name": "JUMP"
										},
										{
											"begin": 1151,
											"end": 1198,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 1151,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "MUL"
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "DUP3"
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "DUP5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "JUMPI"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "INVALID"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "JUMPDEST"
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DIV"
										},
										{
											"begin": 1246,
											"end": 1256,
											"name": "EQ"
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "JUMPI"
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "DUP1"
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "REVERT"
										},
										{
											"begin": 1421,
											"end": 1724,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 1421,
											"end": 1724,
											"name": "JUMPDEST"
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "DUP1"
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "DUP4"
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "GT"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "JUMPI"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "DUP1"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "REVERT"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 1566,
											"end": 1580,
											"name": "JUMPDEST"
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "DUP3"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "DUP5"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "DUP2"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "ISZERO"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "ISZERO"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "JUMPI"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "INVALID"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "DIV"
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "SWAP5"
										},
										{
											"begin": 1421,
											"end": 1724,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1724,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23788,
											"end": 26330,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 23788,
											"end": 26330,
											"name": "JUMPDEST"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SLOAD"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "SWAP1"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "DUP2"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "SWAP1"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "DUP2"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "SWAP1"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "DUP2"
										},
										{
											"begin": 24040,
											"end": 24044,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "SWAP1"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "DIV"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15369,
											"end": 15375,
											"name": "AND"
										},
										{
											"begin": 15368,
											"end": 15375,
											"name": "ISZERO"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPI"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "876F99E759874A085884E6E71A9F6228292079DDBCCC024D1921F2C7370E10C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP3"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MSTORE"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "MLOAD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "DUP2"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SUB"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "ADD"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "SWAP1"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "REVERT"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 15360,
											"end": 15393,
											"name": "JUMPDEST"
										},
										{
											"begin": 24101,
											"end": 24111,
											"name": "CALLER"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "SWAP1"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "DUP2"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "MSTORE"
										},
										{
											"begin": 24079,
											"end": 24100,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "MSTORE"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "SWAP1"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "KECCAK256"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "SLOAD"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 24079,
											"end": 24112,
											"name": "AND"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ISZERO"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ISZERO"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH [tag]",
											"value": "366"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "JUMPI"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP1"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP2"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MSTORE"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP3"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ADD"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MSTORE"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP3"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ADD"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MSTORE"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "426574612066656174757265206F6E6C7920616363657074732077686974656C"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP3"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ADD"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MSTORE"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "69737465642064656C6567617465730000000000000000000000000000000000"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP3"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ADD"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MSTORE"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "SWAP1"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "MLOAD"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "SWAP1"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "DUP2"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "SWAP1"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "SUB"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "ADD"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "SWAP1"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "REVERT"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "tag",
											"value": "366"
										},
										{
											"begin": 24057,
											"end": 24187,
											"name": "JUMPDEST"
										},
										{
											"begin": 24228,
											"end": 24229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24220,
											"end": 24225,
											"name": "DUP9"
										},
										{
											"begin": 24220,
											"end": 24229,
											"name": "GT"
										},
										{
											"begin": 24220,
											"end": 24247,
											"name": "DUP1"
										},
										{
											"begin": 24220,
											"end": 24247,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 24220,
											"end": 24247,
											"name": "JUMPI"
										},
										{
											"begin": 24220,
											"end": 24247,
											"name": "POP"
										},
										{
											"begin": 24246,
											"end": 24247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24233,
											"end": 24243,
											"name": "DUP8"
										},
										{
											"begin": 24233,
											"end": 24247,
											"name": "GT"
										},
										{
											"begin": 24220,
											"end": 24247,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 24220,
											"end": 24247,
											"name": "JUMPDEST"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ISZERO"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ISZERO"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "JUMPI"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP1"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP2"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MSTORE"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP3"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ADD"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MSTORE"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP3"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ADD"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MSTORE"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "63616E6E6F74207472616E73666572207A65726F20746F6B656E732077697468"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP3"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ADD"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MSTORE"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "207A65726F207365727669636520666565000000000000000000000000000000"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP3"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ADD"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MSTORE"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "SWAP1"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "MLOAD"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "SWAP1"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "DUP2"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "SWAP1"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "SUB"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "ADD"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "SWAP1"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "REVERT"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 24198,
											"end": 24324,
											"name": "JUMPDEST"
										},
										{
											"begin": 24343,
											"end": 24355,
											"name": "NUMBER"
										},
										{
											"begin": 24343,
											"end": 24367,
											"name": "DUP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT"
										},
										{
											"begin": 24343,
											"end": 24367,
											"name": "ISZERO"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "JUMPI"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "DUP1"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "DUP2"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "MSTORE"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "DUP3"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "ADD"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "MSTORE"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "DUP3"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "ADD"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "MSTORE"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "7472616E73616374696F6E206578706972656400000000000000000000000000"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "DUP3"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "ADD"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "MSTORE"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "SWAP1"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "MLOAD"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "SWAP1"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "DUP2"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "SWAP1"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "SUB"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "ADD"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "SWAP1"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "REVERT"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 24335,
											"end": 24391,
											"name": "JUMPDEST"
										},
										{
											"begin": 24509,
											"end": 24575,
											"name": "PUSH",
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 24478,
											"end": 24575,
											"name": "DUP12"
										},
										{
											"begin": 24478,
											"end": 24575,
											"name": "GT"
										},
										{
											"begin": 24478,
											"end": 24575,
											"name": "ISZERO"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "JUMPI"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "DUP1"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "DUP2"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "MSTORE"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "DUP3"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "ADD"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "MSTORE"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "DUP3"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "ADD"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "MSTORE"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "7369676E617475726520696E636F727265637400000000000000000000000000"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "DUP3"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "ADD"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "MSTORE"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "SWAP1"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "MLOAD"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "SWAP1"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "DUP2"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "SWAP1"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "SUB"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "ADD"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "SWAP1"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "REVERT"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 24456,
											"end": 24622,
											"name": "JUMPDEST"
										},
										{
											"begin": 24641,
											"end": 24642,
											"name": "DUP10"
										},
										{
											"begin": 24641,
											"end": 24648,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 24641,
											"end": 24648,
											"name": "AND"
										},
										{
											"begin": 24646,
											"end": 24648,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 24641,
											"end": 24648,
											"name": "EQ"
										},
										{
											"begin": 24641,
											"end": 24659,
											"name": "DUP1"
										},
										{
											"begin": 24641,
											"end": 24659,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 24641,
											"end": 24659,
											"name": "JUMPI"
										},
										{
											"begin": 24641,
											"end": 24659,
											"name": "POP"
										},
										{
											"begin": 24652,
											"end": 24653,
											"name": "DUP10"
										},
										{
											"begin": 24652,
											"end": 24659,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 24652,
											"end": 24659,
											"name": "AND"
										},
										{
											"begin": 24657,
											"end": 24659,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 24652,
											"end": 24659,
											"name": "EQ"
										},
										{
											"begin": 24641,
											"end": 24659,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 24641,
											"end": 24659,
											"name": "JUMPDEST"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "ISZERO"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "ISZERO"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "JUMPI"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "DUP1"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "DUP2"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "MSTORE"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "DUP3"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "ADD"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "MSTORE"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "DUP3"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "ADD"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "MSTORE"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "7369676E617475726520696E636F727265637400000000000000000000000000"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "DUP3"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "ADD"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "MSTORE"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "SWAP1"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "MLOAD"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "SWAP1"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "DUP2"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "SWAP1"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "SUB"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "ADD"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "SWAP1"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "REVERT"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 24633,
											"end": 24683,
											"name": "JUMPDEST"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP1"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "MLOAD"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP1"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP3"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "ADD"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP3"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "MSTORE"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP2"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "MSTORE"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "PUSH",
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP1"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "DUP4"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "ADD"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "SWAP2"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "SWAP1"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "SWAP2"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "MSTORE"
										},
										{
											"begin": 24890,
											"end": 24908,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 24890,
											"end": 24908,
											"name": "SLOAD"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP4"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "MLOAD"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "PUSH",
											"value": "4265746144656C6567617465645472616E73666572286164647265737320746F"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "MSTORE"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "PUSH",
											"value": "2C75696E743235362076616C75652C75696E7432353620736572766963654665"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP5"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "ADD"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "MSTORE"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "PUSH",
											"value": "652C75696E74323536207365712C75696E7432353620646561646C696E652900"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP7"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "ADD"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "MSTORE"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP5"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "MLOAD"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "SWAP1"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "SUB"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "PUSH",
											"value": "5F"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "ADD"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "DUP2"
										},
										{
											"begin": 3997,
											"end": 4129,
											"name": "KECCAK256"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP5"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25089,
											"end": 25100,
											"name": "DUP15"
										},
										{
											"begin": 25089,
											"end": 25100,
											"name": "AND"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP7"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP14"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP13"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP2"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP12"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP3"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP12"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP6"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP2"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "ADD"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP5"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP6"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "MSTORE"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "DUP1"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "MLOAD"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "SWAP4"
										},
										{
											"begin": 24858,
											"end": 24871,
											"name": "SWAP5"
										},
										{
											"begin": 24890,
											"end": 24908,
											"name": "SWAP2"
										},
										{
											"begin": 24890,
											"end": 24908,
											"name": "SWAP4"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP3"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP3"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "SWAP2"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP1"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "DUP5"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "ADD"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP1"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "DUP1"
										},
										{
											"begin": 24959,
											"end": 25257,
											"name": "DUP4"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP4"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "DUP5"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP3"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "MLOAD"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP2"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP1"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP4"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "ADD"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "DUP2"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP1"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SUB"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "DUP2"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "KECCAK256"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP8"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "MLOAD"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP1"
										},
										{
											"begin": 24927,
											"end": 25276,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP4"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "ADD"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP4"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP8"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "ADD"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP4"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "377"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "377"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SWAP4"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "DUP5"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "ADD"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "SWAP3"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "SWAP2"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "SWAP1"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "ADD"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP5"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP6"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP4"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP2"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "ADD"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP5"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP2"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "ADD"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP2"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "MSTORE"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "DUP3"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "MLOAD"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP2"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP3"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "SWAP2"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "DUP5"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "ADD"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "SWAP1"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "DUP1"
										},
										{
											"begin": 24823,
											"end": 25291,
											"name": "DUP4"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "SWAP1"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "ADD"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "SWAP2"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "MLOAD"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "DUP1"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "SWAP2"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "SUB"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "SWAP1"
										},
										{
											"begin": 24799,
											"end": 25302,
											"name": "KECCAK256"
										},
										{
											"begin": 24784,
											"end": 25302,
											"name": "SWAP3"
										},
										{
											"begin": 24784,
											"end": 25302,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25339,
											"end": 25343,
											"name": "DUP4"
										},
										{
											"begin": 25345,
											"end": 25346,
											"name": "DUP12"
										},
										{
											"begin": 25348,
											"end": 25349,
											"name": "DUP15"
										},
										{
											"begin": 25351,
											"end": 25352,
											"name": "DUP15"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MLOAD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP2"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MSTORE"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ADD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MSTORE"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MLOAD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP1"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP6"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP2"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MSTORE"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ADD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP5"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP2"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MSTORE"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ADD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP4"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP2"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MSTORE"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ADD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP3"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "AND"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP2"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MSTORE"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ADD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "SWAP5"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MLOAD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP2"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "SUB"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "SWAP1"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP1"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP5"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "SUB"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "SWAP1"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "DUP6"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "GAS"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "STATICCALL"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "ADD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "MLOAD"
										},
										{
											"begin": 25329,
											"end": 25353,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25388,
											"end": 25407,
											"name": "DUP3"
										},
										{
											"begin": 25388,
											"end": 25407,
											"name": "AND"
										},
										{
											"begin": 25388,
											"end": 25407,
											"name": "ISZERO"
										},
										{
											"begin": 25388,
											"end": 25407,
											"name": "ISZERO"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "JUMPI"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP1"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP2"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MSTORE"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP3"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "ADD"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MSTORE"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "2D"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP3"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "ADD"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MSTORE"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "6572726F722064657465726D696E696E672066726F6D20616464726573732066"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP3"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "ADD"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MSTORE"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "726F6D207369676E617475726500000000000000000000000000000000000000"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP3"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "ADD"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MSTORE"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "SWAP1"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "MLOAD"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "SWAP1"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "DUP2"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "SWAP1"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "SUB"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "ADD"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "SWAP1"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "REVERT"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 25366,
											"end": 25480,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25499,
											"end": 25515,
											"name": "DUP10"
										},
										{
											"begin": 25499,
											"end": 25515,
											"name": "AND"
										},
										{
											"begin": 25499,
											"end": 25515,
											"name": "ISZERO"
										},
										{
											"begin": 25499,
											"end": 25515,
											"name": "ISZERO"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "JUMPI"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "DUP1"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "DUP2"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "MSTORE"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "DUP3"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "ADD"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "MSTORE"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "DUP3"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "ADD"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "MSTORE"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "63616E6E6F74207573652061646472657373207A65726F000000000000000000"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "DUP3"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "ADD"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "MSTORE"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "SWAP1"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "MLOAD"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "SWAP1"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "DUP2"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "SWAP1"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "SUB"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "ADD"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "SWAP1"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "REVERT"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 25491,
											"end": 25543,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "DUP10"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "AND"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "SWAP1"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "DUP2"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "MSTORE"
										},
										{
											"begin": 25577,
											"end": 25583,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "MSTORE"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "SWAP1"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "KECCAK256"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "SLOAD"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25577,
											"end": 25587,
											"name": "AND"
										},
										{
											"begin": 25576,
											"end": 25587,
											"name": "ISZERO"
										},
										{
											"begin": 25576,
											"end": 25605,
											"name": "DUP1"
										},
										{
											"begin": 25576,
											"end": 25605,
											"name": "ISZERO"
										},
										{
											"begin": 25576,
											"end": 25605,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 25576,
											"end": 25605,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "DUP3"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "AND"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "SWAP1"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "DUP2"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "MSTORE"
										},
										{
											"begin": 25592,
											"end": 25598,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "MSTORE"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "SWAP1"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "KECCAK256"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "SLOAD"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25592,
											"end": 25605,
											"name": "AND"
										},
										{
											"begin": 25591,
											"end": 25605,
											"name": "ISZERO"
										},
										{
											"begin": 25576,
											"end": 25605,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 25576,
											"end": 25605,
											"name": "JUMPDEST"
										},
										{
											"begin": 25576,
											"end": 25628,
											"name": "DUP1"
										},
										{
											"begin": 25576,
											"end": 25628,
											"name": "ISZERO"
										},
										{
											"begin": 25576,
											"end": 25628,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 25576,
											"end": 25628,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 25617,
											"end": 25627,
											"name": "CALLER"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "SWAP1"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "DUP2"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "MSTORE"
										},
										{
											"begin": 25610,
											"end": 25616,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "MSTORE"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "SWAP1"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "KECCAK256"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "SLOAD"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25610,
											"end": 25628,
											"name": "AND"
										},
										{
											"begin": 25609,
											"end": 25628,
											"name": "ISZERO"
										},
										{
											"begin": 25576,
											"end": 25628,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 25576,
											"end": 25628,
											"name": "JUMPDEST"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "ISZERO"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "ISZERO"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "JUMPI"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "DUP1"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "DUP2"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "MSTORE"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "DUP3"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "ADD"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "MSTORE"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "DUP3"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "ADD"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "834D376937710E138A4FB943EDB26D656FA6EA3CECFE10E80A0FDD4D89414CAC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "DUP3"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "ADD"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "MSTORE"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "SWAP1"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "MLOAD"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "SWAP1"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "DUP2"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "SWAP1"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "SUB"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "ADD"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "SWAP1"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "REVERT"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 25554,
											"end": 25670,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "DUP3"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "AND"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "SWAP1"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "DUP2"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "MSTORE"
										},
										{
											"begin": 25728,
											"end": 25736,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "MSTORE"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "SWAP1"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "KECCAK256"
										},
										{
											"begin": 25728,
											"end": 25743,
											"name": "SLOAD"
										},
										{
											"begin": 25703,
											"end": 25724,
											"name": "PUSH [tag]",
											"value": "388"
										},
										{
											"begin": 25703,
											"end": 25708,
											"name": "DUP10"
										},
										{
											"begin": 25713,
											"end": 25723,
											"name": "DUP10"
										},
										{
											"begin": 25703,
											"end": 25724,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25703,
											"end": 25712,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 25703,
											"end": 25724,
											"name": "AND"
										},
										{
											"begin": 25703,
											"end": 25724,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25703,
											"end": 25724,
											"name": "tag",
											"value": "388"
										},
										{
											"begin": 25703,
											"end": 25724,
											"name": "JUMPDEST"
										},
										{
											"begin": 25703,
											"end": 25743,
											"name": "GT"
										},
										{
											"begin": 25703,
											"end": 25743,
											"name": "ISZERO"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "JUMPI"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP1"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP2"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MSTORE"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP3"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "ADD"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MSTORE"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP3"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "ADD"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MSTORE"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "696E73756666696369656E742066756E6473206F7220626164207369676E6174"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP3"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "ADD"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MSTORE"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "7572650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP3"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "ADD"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MSTORE"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "SWAP1"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "MLOAD"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "SWAP1"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "DUP2"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "SWAP1"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "SUB"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "ADD"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "SWAP1"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "REVERT"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 25681,
											"end": 25806,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "DUP3"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "AND"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "SWAP1"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "DUP2"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "MSTORE"
										},
										{
											"begin": 25825,
											"end": 25833,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "MSTORE"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "SWAP1"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "KECCAK256"
										},
										{
											"begin": 25825,
											"end": 25840,
											"name": "SLOAD"
										},
										{
											"begin": 25825,
											"end": 25847,
											"name": "DUP7"
										},
										{
											"begin": 25825,
											"end": 25847,
											"name": "EQ"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "JUMPI"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "DUP1"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "DUP2"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "MSTORE"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "DUP3"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "ADD"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "MSTORE"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "DUP3"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "ADD"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "MSTORE"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "696E636F72726563742073657100000000000000000000000000000000000000"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "DUP3"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "ADD"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "MSTORE"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "SWAP1"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "MLOAD"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "SWAP1"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "DUP2"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "SWAP1"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "SUB"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "ADD"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "SWAP1"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "REVERT"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 25817,
											"end": 25865,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "DUP3"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "AND"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "SWAP1"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "DUP2"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "MSTORE"
										},
										{
											"begin": 25896,
											"end": 25904,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "MSTORE"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "SWAP1"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "KECCAK256"
										},
										{
											"begin": 25896,
											"end": 25911,
											"name": "SLOAD"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "PUSH [tag]",
											"value": "391"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "SWAP1"
										},
										{
											"begin": 25916,
											"end": 25917,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25896,
											"end": 25915,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "AND"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "tag",
											"value": "391"
										},
										{
											"begin": 25896,
											"end": 25918,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "DUP4"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "AND"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "SWAP1"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "DUP2"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "MSTORE"
										},
										{
											"begin": 25878,
											"end": 25886,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "MSTORE"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "SWAP1"
										},
										{
											"begin": 25878,
											"end": 25893,
											"name": "KECCAK256"
										},
										{
											"begin": 25878,
											"end": 25918,
											"name": "SSTORE"
										},
										{
											"begin": 25952,
											"end": 25979,
											"name": "PUSH [tag]",
											"value": "392"
										},
										{
											"begin": 25887,
											"end": 25892,
											"name": "DUP3"
										},
										{
											"begin": 25969,
											"end": 25971,
											"name": "DUP11"
										},
										{
											"begin": 25973,
											"end": 25978,
											"name": "DUP11"
										},
										{
											"begin": 25952,
											"end": 25961,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 25952,
											"end": 25979,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25952,
											"end": 25979,
											"name": "tag",
											"value": "392"
										},
										{
											"begin": 25952,
											"end": 25979,
											"name": "JUMPDEST"
										},
										{
											"begin": 25931,
											"end": 25979,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 25996,
											"end": 26011,
											"name": "DUP7"
										},
										{
											"begin": 25996,
											"end": 26011,
											"name": "ISZERO"
										},
										{
											"begin": 25992,
											"end": 26222,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 25992,
											"end": 26222,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "DUP3"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "AND"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "SWAP1"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "DUP2"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "MSTORE"
										},
										{
											"begin": 26046,
											"end": 26054,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "MSTORE"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "SWAP1"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "KECCAK256"
										},
										{
											"begin": 26046,
											"end": 26061,
											"name": "SLOAD"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "PUSH [tag]",
											"value": "394"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "SWAP1"
										},
										{
											"begin": 26066,
											"end": 26076,
											"name": "DUP9"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26046,
											"end": 26065,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "AND"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "tag",
											"value": "394"
										},
										{
											"begin": 26046,
											"end": 26077,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "DUP4"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "AND"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "SWAP1"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "DUP2"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "MSTORE"
										},
										{
											"begin": 26028,
											"end": 26036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "MSTORE"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "DUP1"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "DUP3"
										},
										{
											"begin": 26028,
											"end": 26043,
											"name": "KECCAK256"
										},
										{
											"begin": 26028,
											"end": 26077,
											"name": "SWAP3"
										},
										{
											"begin": 26028,
											"end": 26077,
											"name": "SWAP1"
										},
										{
											"begin": 26028,
											"end": 26077,
											"name": "SWAP3"
										},
										{
											"begin": 26028,
											"end": 26077,
											"name": "SSTORE"
										},
										{
											"begin": 26124,
											"end": 26134,
											"name": "CALLER"
										},
										{
											"begin": 26115,
											"end": 26135,
											"name": "DUP2"
										},
										{
											"begin": 26115,
											"end": 26135,
											"name": "MSTORE"
										},
										{
											"begin": 26115,
											"end": 26135,
											"name": "KECCAK256"
										},
										{
											"begin": 26115,
											"end": 26135,
											"name": "SLOAD"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "PUSH [tag]",
											"value": "395"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "SWAP1"
										},
										{
											"begin": 26140,
											"end": 26150,
											"name": "DUP9"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26115,
											"end": 26139,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "AND"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "tag",
											"value": "395"
										},
										{
											"begin": 26115,
											"end": 26151,
											"name": "JUMPDEST"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "CALLER"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "DUP2"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "DUP2"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "MSTORE"
										},
										{
											"begin": 26092,
											"end": 26100,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "SWAP1"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "DUP2"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "MSTORE"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "SWAP2"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "DUP3"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "SWAP1"
										},
										{
											"begin": 26092,
											"end": 26112,
											"name": "KECCAK256"
										},
										{
											"begin": 26092,
											"end": 26151,
											"name": "SWAP4"
										},
										{
											"begin": 26092,
											"end": 26151,
											"name": "SWAP1"
										},
										{
											"begin": 26092,
											"end": 26151,
											"name": "SWAP4"
										},
										{
											"begin": 26092,
											"end": 26151,
											"name": "SSTORE"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "DUP1"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "MLOAD"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "DUP11"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "DUP2"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "MSTORE"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "MLOAD"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "SWAP2"
										},
										{
											"begin": 26101,
											"end": 26111,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "DUP7"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "AND"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP3"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "DUP2"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SUB"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP2"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "ADD"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "SWAP1"
										},
										{
											"begin": 26171,
											"end": 26210,
											"name": "LOG3"
										},
										{
											"begin": 25992,
											"end": 26222,
											"name": "tag",
											"value": "393"
										},
										{
											"begin": 25992,
											"end": 26222,
											"name": "JUMPDEST"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "MLOAD"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP3"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP2"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "MSTORE"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP2"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "ADD"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP9"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "MSTORE"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP3"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "ADD"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP10"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "MSTORE"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP13"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "AND"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP3"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP6"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "AND"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP2"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "PUSH",
											"value": "E526C2818BE85606AB8E0EA3F317C198EF15BAABBB4430BCF2D836EED3C7769B"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP2"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "DUP2"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SUB"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "ADD"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "SWAP1"
										},
										{
											"begin": 26239,
											"end": 26300,
											"name": "LOG3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 26318,
											"end": 26322,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 26318,
											"end": 26322,
											"name": "SWAP12"
										},
										{
											"begin": 23788,
											"end": 26330,
											"name": "SWAP11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 23788,
											"end": 26330,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 531,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 381,
											"end": 531,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "DUP1"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP4"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP4"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "GT"
										},
										{
											"begin": 467,
											"end": 473,
											"name": "ISZERO"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "PUSH [tag]",
											"value": "397"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "JUMPI"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "REVERT"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "tag",
											"value": "397"
										},
										{
											"begin": 459,
											"end": 474,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SUB"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP1"
										},
										{
											"begin": 381,
											"end": 531,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12266,
											"end": 12897,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 12266,
											"end": 12897,
											"name": "JUMPDEST"
										},
										{
											"begin": 12381,
											"end": 12388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12401,
											"end": 12413,
											"name": "DUP1"
										},
										{
											"begin": 12444,
											"end": 12462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12416,
											"end": 12433,
											"name": "PUSH [tag]",
											"value": "399"
										},
										{
											"begin": 12426,
											"end": 12432,
											"name": "DUP5"
										},
										{
											"begin": 12416,
											"end": 12425,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 12416,
											"end": 12433,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12416,
											"end": 12433,
											"name": "tag",
											"value": "399"
										},
										{
											"begin": 12416,
											"end": 12433,
											"name": "JUMPDEST"
										},
										{
											"begin": 12401,
											"end": 12433,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12465,
											"end": 12481,
											"name": "PUSH [tag]",
											"value": "400"
										},
										{
											"begin": 12465,
											"end": 12471,
											"name": "DUP5"
										},
										{
											"begin": 12401,
											"end": 12433,
											"name": "DUP4"
										},
										{
											"begin": 12465,
											"end": 12481,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12465,
											"end": 12475,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 12465,
											"end": 12481,
											"name": "AND"
										},
										{
											"begin": 12465,
											"end": 12481,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12465,
											"end": 12481,
											"name": "tag",
											"value": "400"
										},
										{
											"begin": 12465,
											"end": 12481,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "DUP8"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "AND"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "DUP2"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "MSTORE"
										},
										{
											"begin": 12510,
											"end": 12518,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "MSTORE"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "SWAP1"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "KECCAK256"
										},
										{
											"begin": 12510,
											"end": 12525,
											"name": "SLOAD"
										},
										{
											"begin": 12444,
											"end": 12481,
											"name": "SWAP1"
										},
										{
											"begin": 12444,
											"end": 12481,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "PUSH [tag]",
											"value": "401"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "SWAP1"
										},
										{
											"begin": 12530,
											"end": 12536,
											"name": "DUP6"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12510,
											"end": 12529,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "AND"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "tag",
											"value": "401"
										},
										{
											"begin": 12510,
											"end": 12537,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "DUP1"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "DUP9"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "AND"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "SWAP1"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "DUP2"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "MSTORE"
										},
										{
											"begin": 12492,
											"end": 12500,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "MSTORE"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "DUP1"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "DUP3"
										},
										{
											"begin": 12492,
											"end": 12507,
											"name": "KECCAK256"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "SWAP4"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "SWAP1"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "SWAP4"
										},
										{
											"begin": 12492,
											"end": 12537,
											"name": "SSTORE"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "SWAP1"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "DUP8"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "AND"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "DUP2"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "MSTORE"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "KECCAK256"
										},
										{
											"begin": 12564,
											"end": 12577,
											"name": "SLOAD"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "SWAP1"
										},
										{
											"begin": 12582,
											"end": 12592,
											"name": "DUP3"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12564,
											"end": 12581,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "AND"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "tag",
											"value": "402"
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "DUP1"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "DUP8"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "AND"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "DUP2"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "DUP2"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "MSTORE"
										},
										{
											"begin": 12548,
											"end": 12556,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "SWAP1"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "DUP2"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "MSTORE"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "SWAP2"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "DUP3"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "SWAP1"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "KECCAK256"
										},
										{
											"begin": 12548,
											"end": 12593,
											"name": "SWAP5"
										},
										{
											"begin": 12548,
											"end": 12593,
											"name": "SWAP1"
										},
										{
											"begin": 12548,
											"end": 12593,
											"name": "SWAP5"
										},
										{
											"begin": 12548,
											"end": 12593,
											"name": "SSTORE"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "DUP1"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "MLOAD"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "DUP6"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "DUP2"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "MSTORE"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP1"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "MLOAD"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "SWAP2"
										},
										{
											"begin": 12548,
											"end": 12561,
											"name": "SWAP4"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP3"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "DUP11"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "AND"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP3"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP2"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "DUP3"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP1"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SUB"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "ADD"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "SWAP1"
										},
										{
											"begin": 12609,
											"end": 12641,
											"name": "LOG3"
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "SLOAD"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "DUP1"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "MLOAD"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "DUP5"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "DUP2"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "MSTORE"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SWAP1"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "SWAP3"
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "DUP4"
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "AND"
										},
										{
											"begin": 12673,
											"end": 12685,
											"name": "SWAP3"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "DUP10"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "AND"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SWAP2"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SWAP1"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "DUP2"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SWAP1"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SUB"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "ADD"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "SWAP1"
										},
										{
											"begin": 12657,
											"end": 12692,
											"name": "LOG3"
										},
										{
											"begin": 12714,
											"end": 12715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "DUP3"
										},
										{
											"begin": 12707,
											"end": 12715,
											"name": "GT"
										},
										{
											"begin": 12703,
											"end": 12860,
											"name": "ISZERO"
										},
										{
											"begin": 12703,
											"end": 12860,
											"name": "PUSH [tag]",
											"value": "403"
										},
										{
											"begin": 12703,
											"end": 12860,
											"name": "JUMPI"
										},
										{
											"begin": 12766,
											"end": 12778,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12766,
											"end": 12778,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12766,
											"end": 12778,
											"name": "AND"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "SWAP1"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "DUP2"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "MSTORE"
										},
										{
											"begin": 12757,
											"end": 12765,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "MSTORE"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "SWAP1"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "KECCAK256"
										},
										{
											"begin": 12757,
											"end": 12779,
											"name": "SLOAD"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "SWAP1"
										},
										{
											"begin": 12784,
											"end": 12788,
											"name": "DUP4"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12757,
											"end": 12783,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "AND"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 12757,
											"end": 12789,
											"name": "JUMPDEST"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "DUP1"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "SWAP1"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "DUP2"
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "AND"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "SWAP1"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "DUP2"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "MSTORE"
										},
										{
											"begin": 12732,
											"end": 12740,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "SWAP1"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "DUP2"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "MSTORE"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "SWAP2"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "DUP3"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "SWAP1"
										},
										{
											"begin": 12732,
											"end": 12754,
											"name": "KECCAK256"
										},
										{
											"begin": 12732,
											"end": 12789,
											"name": "SWAP5"
										},
										{
											"begin": 12732,
											"end": 12789,
											"name": "SWAP1"
										},
										{
											"begin": 12732,
											"end": 12789,
											"name": "SWAP5"
										},
										{
											"begin": 12732,
											"end": 12789,
											"name": "SSTORE"
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "SWAP2"
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "SLOAD"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "DUP3"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "MLOAD"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "DUP7"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "DUP2"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "MSTORE"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP3"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "MLOAD"
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "SWAP1"
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "DUP3"
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "AND"
										},
										{
											"begin": 12829,
											"end": 12841,
											"name": "SWAP4"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP2"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "DUP11"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "AND"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP3"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "PUSH",
											"value": "F228DE527FC1B9843BAAC03B9A04565473A263375950E63435D4138464386F46"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP3"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP1"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "DUP3"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP1"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SUB"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "ADD"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "SWAP1"
										},
										{
											"begin": 12809,
											"end": 12848,
											"name": "LOG3"
										},
										{
											"begin": 12703,
											"end": 12860,
											"name": "tag",
											"value": "403"
										},
										{
											"begin": 12703,
											"end": 12860,
											"name": "JUMPDEST"
										},
										{
											"begin": 12879,
											"end": 12889,
											"name": "SWAP6"
										},
										{
											"begin": 12266,
											"end": 12897,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12266,
											"end": 12897,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"834D376937710E138A4FB943EDB26D656FA6EA3CECFE10E80A0FDD4D89414CAC": "616464726573732066726f7a656e000000000000000000000000000000000000",
										"876F99E759874A085884E6E71A9F6228292079DDBCCC024D1921F2C7370E10C7": "7768656e4e6f7450617573656400000000000000000000000000000000000000",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"E8E4944059266C653CCA10F9830A9FEE32F8D74FFBC3FE2ECADB38D10605F91E": "6f6e6c794f776e65720000000000000000000000000000000000000000000000"
									}
								}
							}
						},
						"methodIdentifiers": {
							"EIP712_DOMAIN_HASH()": "e306f779",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"assetProtectionRole()": "0a91b601",
							"balanceOf(address)": "70a08231",
							"betaDelegateWhitelister()": "c4f62fee",
							"betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256)": "21ab11f7",
							"betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[])": "1b670561",
							"claimOwnership()": "4e71e0c8",
							"decimals()": "313ce567",
							"decreaseSupply(uint256)": "98e52f9a",
							"disregardProposeOwner()": "03acb448",
							"feeController()": "6999b377",
							"feeDecimals()": "cc0f1786",
							"feeParts()": "57526b3f",
							"feeRate()": "978bbdb9",
							"feeRecipient()": "46904840",
							"freeze(address)": "8d1fdf2f",
							"getFeeFor(uint256)": "0abe469a",
							"increaseSupply(uint256)": "b921e163",
							"initialize()": "8129fc1c",
							"initializeDomainSeparator()": "2ff79161",
							"isFrozen(address)": "e5839836",
							"isWhitelistedBetaDelegate(address)": "a7d87ed0",
							"name()": "06fdde03",
							"nextSeqOf(address)": "89f72c21",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proposeOwner(address)": "b5ed298a",
							"proposedOwner()": "d153b60c",
							"reclaimPAXG()": "08abdeba",
							"setAssetProtectionRole(address)": "8ceed9cb",
							"setBetaDelegateWhitelister(address)": "97d60d56",
							"setFeeController(address)": "3ed4c678",
							"setFeeRate(uint256)": "45596e2e",
							"setFeeRecipient(address)": "e74b981b",
							"setSupplyController(address)": "52875bc3",
							"supplyController()": "e7ba1012",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unfreeze(address)": "45c8b1a6",
							"unpause()": "3f4ba83a",
							"unwhitelistBetaDelegate(address)": "d990c618",
							"whitelistBetaDelegate(address)": "ac69275c",
							"wipeFrozenAddress(address)": "e2f72f03"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"disregardProposeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimPAXG\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"assetProtectionRole\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"getFeeFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"to\",\"type\":\"address[]\"},{\"name\":\"value\",\"type\":\"uint256[]\"},{\"name\":\"serviceFee\",\"type\":\"uint256[]\"},{\"name\":\"seq\",\"type\":\"uint256[]\"},{\"name\":\"deadline\",\"type\":\"uint256[]\"}],\"name\":\"betaDelegatedTransferBatch\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sig\",\"type\":\"bytes\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"serviceFee\",\"type\":\"uint256\"},{\"name\":\"seq\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"betaDelegatedTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initializeDomainSeparator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFeeController\",\"type\":\"address\"}],\"name\":\"setFeeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFeeRate\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newSupplyController\",\"type\":\"address\"}],\"name\":\"setSupplyController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeParts\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"nextSeqOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newAssetProtectionRole\",\"type\":\"address\"}],\"name\":\"setAssetProtectionRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newWhitelister\",\"type\":\"address\"}],\"name\":\"setBetaDelegateWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"decreaseSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isWhitelistedBetaDelegate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"whitelistBetaDelegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"proposeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"increaseSupply\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"betaDelegateWhitelister\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeDecimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"unwhitelistBetaDelegate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"wipeFrozenAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newFeeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"supplyController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"currentOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldProposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferDisregarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AddressFrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AddressUnfrozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"FrozenAddressWiped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldAssetProtectionRole\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newAssetProtectionRole\",\"type\":\"address\"}],\"name\":\"AssetProtectionRoleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupplyIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SupplyDecreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldSupplyController\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newSupplyController\",\"type\":\"address\"}],\"name\":\"SupplyControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"seq\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"serviceFee\",\"type\":\"uint256\"}],\"name\":\"BetaDelegatedTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldWhitelister\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newWhitelister\",\"type\":\"address\"}],\"name\":\"BetaDelegateWhitelisterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"newDelegate\",\"type\":\"address\"}],\"name\":\"BetaDelegateWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldDelegate\",\"type\":\"address\"}],\"name\":\"BetaDelegateUnwhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldFeeRate\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"newFeeRate\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldFeeController\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newFeeController\",\"type\":\"address\"}],\"name\":\"FeeControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"oldFeeRecipient\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSet\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\\r\",\"params\":{\"_owner\":\"address The address which owns the funds.\\r\",\"_spender\":\"address The address which will spend the funds.\\r\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\\r\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r Beware that changing an allowance with this method brings the risk that someone may use both the old\\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\",\"params\":{\"_spender\":\"The address which will spend the funds.\\r\",\"_value\":\"The amount of tokens to be spent.\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"_addr\":\"The address to query the the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256)\":{\"details\":\"Performs a transfer on behalf of the from address, identified by its signature on the delegatedTransfer msg.\\r Splits a signature byte array into r,s,v for convenience.\\r\",\"params\":{\"deadline\":\"a block number after which the pre-signed transaction has expired.\\r\",\"seq\":\"a sequencing number included by the from address specific to this contract to protect from replays.\\r\",\"serviceFee\":\"an optional ERC20 service fee paid to the executor of betaDelegatedTransfer by the from address.\\r\",\"sig\":\"the signature of the delgatedTransfer msg.\\r\",\"to\":\"The address to transfer to.\\r\",\"value\":\"The amount to be transferred.\\r\"},\"return\":\"A boolean that indicates if the operation was successful.\\r\"},\"betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[])\":{\"details\":\"Performs an atomic batch of transfers on behalf of the from addresses, identified by their signatures.\\r Lack of nested array support in arguments requires all arguments to be passed as equal size arrays where\\r delegated transfer number i is the combination of all arguments at index i\\r\",\"params\":{\"deadline\":\"block numbers after which the pre-signed transactions have expired.\\r\",\"r\":\"the r signatures of the delgatedTransfer msg.\\r\",\"s\":\"the s signatures of the delgatedTransfer msg.\\r\",\"seq\":\"sequencing numbers included by the from address specific to this contract to protect from replays.\\r\",\"serviceFee\":\"optional ERC20 service fees paid to the delegate of betaDelegatedTransfer by the from address.\\r\",\"to\":\"The addresses to transfer to.\\r\",\"v\":\"the v signatures of the delgatedTransfer msg.\\r\",\"value\":\"The amounts to be transferred.\\r\"},\"return\":\"A boolean that indicates if the operation was successful.\\r\"},\"claimOwnership()\":{\"details\":\"Allows the proposed owner to complete transferring control of the contract to the proposedOwner.\\r\"},\"decreaseSupply(uint256)\":{\"details\":\"Decreases the total supply by burning the specified number of tokens from the supply controller account.\\r\",\"params\":{\"_value\":\"The number of tokens to remove.\\r\"},\"return\":\"A boolean that indicates if the operation was successful.\\r\"},\"disregardProposeOwner()\":{\"details\":\"Allows the current owner or proposed owner to cancel transferring control of the contract to a proposedOwner\\r\"},\"freeze(address)\":{\"details\":\"Freezes an address balance from being transferred.\\r\",\"params\":{\"_addr\":\"The new address to freeze.\\r\"}},\"getFeeFor(uint256)\":{\"details\":\"Gets a fee for a given value\\r ex: given feeRate = 200 and feeParts = 1,000,000 then getFeeFor(10000) = 2\\r\",\"params\":{\"_value\":\"The amount to get the fee for.\\r\"}},\"increaseSupply(uint256)\":{\"details\":\"Increases the total supply by minting the specified number of tokens to the supply controller account.\\r\",\"params\":{\"_value\":\"The number of tokens to add.\\r\"},\"return\":\"A boolean that indicates if the operation was successful.\\r\"},\"initialize()\":{\"details\":\"sets 0 initial tokens, the owner, the supplyController,\\r the fee controller and fee recipient.\\r this serves as the constructor for the proxy but compiles to the\\r memory model of the Implementation contract.\\r\"},\"initializeDomainSeparator()\":{\"details\":\"To be called when upgrading the contract using upgradeAndCall to add delegated transfers\\r\"},\"isFrozen(address)\":{\"details\":\"Gets whether the address is currently frozen.\\r\",\"params\":{\"_addr\":\"The address to check if frozen.\\r\"},\"return\":\"A bool representing whether the given address is frozen.\\r\"},\"isWhitelistedBetaDelegate(address)\":{\"details\":\"Gets whether the address is currently whitelisted for betaDelegateTransfer.\\r\",\"params\":{\"_addr\":\"The address to check if whitelisted.\\r\"},\"return\":\"A bool representing whether the given address is whitelisted.\\r\"},\"nextSeqOf(address)\":{\"details\":\"returns the next seq for a target address.\\r The transactor must submit nextSeqOf(transactor) in the next transaction for it to be valid.\\r Note: that the seq context is specific to this smart contract.\\r\",\"params\":{\"target\":\"The target address.\\r\"},\"return\":\"the seq.\\r\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"proposeOwner(address)\":{\"details\":\"Allows the current owner to begin transferring control of the contract to a proposedOwner\\r\",\"params\":{\"_proposedOwner\":\"The address to transfer ownership to.\\r\"}},\"reclaimPAXG()\":{\"details\":\"Reclaim all PAXG at the contract address.\\r This sends the PAXG tokens that this contract add holding to the owner.\\r Note: this is not affected by freeze constraints.\\r\"},\"setAssetProtectionRole(address)\":{\"details\":\"Sets a new asset protection role address.\\r\",\"params\":{\"_newAssetProtectionRole\":\"The new address allowed to freeze/unfreeze addresses and seize their tokens.\\r\"}},\"setBetaDelegateWhitelister(address)\":{\"details\":\"Sets a new betaDelegate whitelister.\\r\",\"params\":{\"_newWhitelister\":\"The address allowed to whitelist betaDelegates.\\r\"}},\"setFeeController(address)\":{\"details\":\"Sets a new fee controller address.\\r\",\"params\":{\"_newFeeController\":\"The address allowed to set the fee rate and the fee recipient.\\r\"}},\"setFeeRate(uint256)\":{\"details\":\"Sets a new fee rate.\\r\",\"params\":{\"_newFeeRate\":\"The new fee rate to collect as transfer fees for transfers.\\r\"}},\"setFeeRecipient(address)\":{\"details\":\"Sets a new fee recipient address.\\r\",\"params\":{\"_newFeeRecipient\":\"The address allowed to collect transfer fees for transfers.\\r\"}},\"setSupplyController(address)\":{\"details\":\"Sets a new supply controller address.\\r\",\"params\":{\"_newSupplyController\":\"The address allowed to burn/mint tokens to control supply.\\r\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\\r\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address from msg.sender\\r Transfer additionally sends the fee to the fee controller\\r Note: the use of Safemath ensures that _value is nonnegative.\\r\",\"params\":{\"_to\":\"The address to transfer to.\\r\",\"_value\":\"The amount to be transferred.\\r\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\\r\",\"params\":{\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}},\"unfreeze(address)\":{\"details\":\"Unfreezes an address balance allowing transfer.\\r\",\"params\":{\"_addr\":\"The new address to unfreeze.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"},\"unwhitelistBetaDelegate(address)\":{\"details\":\"Unwhitelists an address to disallow calling BetaDelegatedTransfer.\\r\",\"params\":{\"_addr\":\"The new address to whitelist.\\r\"}},\"whitelistBetaDelegate(address)\":{\"details\":\"Whitelists an address to allow calling BetaDelegatedTransfer.\\r\",\"params\":{\"_addr\":\"The new address to whitelist.\\r\"}},\"wipeFrozenAddress(address)\":{\"details\":\"Wipes the balance of a frozen address, burning the tokens\\r and setting the approval to zero.\\r\",\"params\":{\"_addr\":\"The new frozen address to wipe.\\r\"}}},\"title\":\"PAXGImplementation\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/PAXG/PAXGImplementation.sol\":\"PAXGImplementation\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/PAXG/PAXGImplementation.sol\":{\"keccak256\":\"0xc0a99e784f40c754bb13cd8bf849bff3db7dd51c0e526d5d6ae4d02acdc71a9a\",\"urls\":[\"bzzr://7f251d5341006c5e367bdf5add486c47062da9f0f99a480dddb0ce722cfc0d35\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":237:1727  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/PAXG/PAXGImplementation.sol\":237:1727  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820045e4be37bdaac5c6ad7fc6f45cf93e007d4b2a41efb8df189b90d01899ac23b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820045e4be37bdaac5c6ad7fc6f45cf93e007d4b2a41efb8df189b90d01899ac23b0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIV 0x5e 0x4b 0xe3 PUSH28 0xDAAC5C6AD7FC6F45CF93E007D4B2A41EFB8DF189B90D01899AC23B00 0x29 ",
							"sourceMap": "237:1490:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820045e4be37bdaac5c6ad7fc6f45cf93e007d4b2a41efb8df189b90d01899ac23b0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIV 0x5e 0x4b 0xe3 PUSH28 0xDAAC5C6AD7FC6F45CF93E007D4B2A41EFB8DF189B90D01899AC23B00 0x29 ",
							"sourceMap": "237:1490:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 237,
									"end": 1727,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 237,
									"end": 1727,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820045e4be37bdaac5c6ad7fc6f45cf93e007d4b2a41efb8df189b90d01899ac23b0029",
									".code": [
										{
											"begin": 237,
											"end": 1727,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "ADDRESS"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "EQ"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "MSTORE"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "DUP1"
										},
										{
											"begin": 237,
											"end": 1727,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/PAXG/PAXGImplementation.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/PAXG/PAXGImplementation.sol\":{\"keccak256\":\"0xc0a99e784f40c754bb13cd8bf849bff3db7dd51c0e526d5d6ae4d02acdc71a9a\",\"urls\":[\"bzzr://7f251d5341006c5e367bdf5add486c47062da9f0f99a480dddb0ce722cfc0d35\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/tokens/PAXG/PAXGImplementation.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/PAXG/PAXGImplementation.sol",
					"exportedSymbols": {
						"PAXGImplementation": [
							1855
						],
						"SafeMath": [
							107
						]
					},
					"id": 1856,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "448:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 11,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 12,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "472:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1873,
														"src": "459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "459:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "459:15:0"
											},
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 24,
														"src": "485:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 16,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 18,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "497:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "485:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "522:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 23,
												"nodeType": "Return",
												"src": "515:8:0"
											}
										]
									},
									"documentation": "@dev Subtracts two numbers, reverts on overflow (i.e. if subtrahend is greater than minuend).\r",
									"id": 25,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "394:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "405:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "393:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "439:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "438:9:0"
									},
									"scope": 107,
									"src": "381:150:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "676:83:0",
										"statements": [
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 48,
														"src": "687:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 34,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 36,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "699:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 37,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "703:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "699:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "687:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "728:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1873,
														"src": "715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "715:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "750:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 47,
												"nodeType": "Return",
												"src": "743:8:0"
											}
										]
									},
									"documentation": "@dev Adds two numbers, reverts on overflow.\r",
									"id": 49,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "622:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "633:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "621:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "666:9:0"
									},
									"scope": 107,
									"src": "609:150:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "920:366:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 58,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1155:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1160:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1155:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 64,
												"nodeType": "IfStatement",
												"src": "1151:47:0",
												"trueBody": {
													"id": 63,
													"nodeType": "Block",
													"src": "1163:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1185:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 57,
															"id": 62,
															"nodeType": "Return",
															"src": "1178:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "1210:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 65,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1210:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1222:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1226:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1210:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 72,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "1246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 75,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1255:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1246:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1873,
														"src": "1238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1238:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 66,
													"src": "1277:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 80,
												"nodeType": "Return",
												"src": "1270:8:0"
											}
										]
									},
									"documentation": "@dev Multiplies two unsigned integers, reverts on overflow.\r",
									"id": 82,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "866:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "877:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "865:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:9:0"
									},
									"scope": 107,
									"src": "853:433:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1488:236:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "1574:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1578:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1574:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1873,
														"src": "1566:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1566:14:0"
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "1591:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 97,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 99,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1603:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 100,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1607:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1603:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1591:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 98,
													"src": "1715:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 90,
												"id": 104,
												"nodeType": "Return",
												"src": "1708:8:0"
											}
										]
									},
									"documentation": "@dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\r",
									"id": 106,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1445:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1433:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1478:9:0"
									},
									"scope": 107,
									"src": "1421:303:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1856,
							"src": "237:1490:0"
						},
						{
							"id": 108,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "1776:23:0"
						},
						{
							"id": 109,
							"literals": [
								"experimental",
								"v0.5.0"
							],
							"nodeType": "PragmaDirective",
							"src": "1801:29:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title PAXGImplementation\r\n@dev this contract is a Pausable ERC20 token with Burn and Mint\r\ncontrolled by a central SupplyController. By implementing PaxosImplementation\r\nthis contract also includes external methods for setting\r\na new implementation contract for the Proxy.\r\nNOTE: The storage defined here will actually be held in the Proxy\r\ncontract and all calls to this contract should be made through\r\nthe proxy, including admin actions done as owner or supplyController.\r\nAny call to transfer against this contract should fail\r\nwith insufficient funds since no tokens will be issued there.\r",
							"fullyImplemented": true,
							"id": 1855,
							"linearizedBaseContracts": [
								1855
							],
							"name": "PAXGImplementation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 112,
									"libraryName": {
										"contractScope": null,
										"id": 110,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 107,
										"src": "2544:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$107",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2538:27:0",
									"typeName": {
										"id": 111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2557:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 115,
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "2634:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 113,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2634:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2661:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 119,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "2700:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 118,
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2708:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2700:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 117,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2719:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 121,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "2752:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 124,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "2788:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 122,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2788:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "5061786f7320476f6c64",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2818:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a3e5c1bd54113bf3c60b8e38453551857c5370276f34d899286630d8ebf99ea6",
											"typeString": "literal_string \"Paxos Gold\""
										},
										"value": "Paxos Gold"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 127,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "2860:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 125,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2860:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "50415847",
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2892:6:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_de44649a6513182d82aeab5e881fdc66e5d5952e54f879dacc865ed226a90e71",
											"typeString": "literal_string \"PAXG\""
										},
										"value": "PAXG"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 130,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "2938:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 128,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2938:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2971:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 136,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3034:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 135,
										"keyType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3042:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3034:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 134,
											"keyType": {
												"id": 132,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3061:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3053:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3072:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 138,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3126:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 137,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3126:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 140,
									"name": "proposedOwner",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3153:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 143,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3215:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 141,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3215:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3236:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 145,
									"name": "assetProtectionRole",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3280:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 144,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3280:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 149,
									"name": "frozen",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3321:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 148,
										"keyType": {
											"id": 146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3329:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3321:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 147,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3340:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 151,
									"name": "supplyController",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3398:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3398:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 153,
									"name": "betaDelegateWhitelister",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3470:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 152,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3470:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 157,
									"name": "betaDelegateWhitelist",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3515:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 156,
										"keyType": {
											"id": 154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3523:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3515:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 155,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3534:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 161,
									"name": "nextSeqs",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3577:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 160,
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3585:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3577:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3596:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 164,
									"name": "EIP191_HEADER",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3669:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 162,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3669:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "1901",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3710:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
											"typeString": "literal_string \"\u0019\u0001\""
										},
										"value": "\u0019\u0001"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 169,
									"name": "EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3778:137:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 165,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3778:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c6164647265737320766572696679696e67436f6e747261637429",
												"id": 167,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "3861:53:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ee552a4f357a6d8ecee15fed74927d873616e6da31fd672327acf0916acc174a",
													"typeString": "literal_string \"EIP712Domain(string name,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ee552a4f357a6d8ecee15fed74927d873616e6da31fd672327acf0916acc174a",
													"typeString": "literal_string \"EIP712Domain(string name,address verifyingContract)\""
												}
											],
											"id": 166,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1864,
											"src": "3851:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
												"typeString": "function () pure returns (bytes32)"
											}
										},
										"id": 168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3851:64:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 174,
									"name": "EIP712_DELEGATED_TRANSFER_SCHEMA_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "3922:207:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 170,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3922:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "4265746144656c6567617465645472616e73666572286164647265737320746f2c75696e743235362076616c75652c75696e7432353620736572766963654665652c75696e74323536207365712c75696e7432353620646561646c696e6529",
												"id": 172,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4021:97:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_07b32f4970a891d55ce8499ae7227495961bcefbb70cc2d7730c3d5f4b25c0cf",
													"typeString": "literal_string \"BetaDelegatedTransfer(address to,uint256 value,uint256 serviceFee,uint256 seq,uint256 deadline)\""
												},
												"value": "BetaDelegatedTransfer(address to,uint256 value,uint256 serviceFee,uint256 seq,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_07b32f4970a891d55ce8499ae7227495961bcefbb70cc2d7730c3d5f4b25c0cf",
													"typeString": "literal_string \"BetaDelegatedTransfer(address to,uint256 value,uint256 serviceFee,uint256 seq,uint256 deadline)\""
												}
											],
											"id": 171,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1864,
											"src": "3997:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
												"typeString": "function () pure returns (bytes32)"
											}
										},
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3997:132:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 176,
									"name": "EIP712_DOMAIN_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "4238:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 175,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4238:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 179,
									"name": "feeDecimals",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "4408:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 177,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "4408:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "36",
										"id": 178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4444:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6_by_1",
											"typeString": "int_const 6"
										},
										"value": "6"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 182,
									"name": "feeParts",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "4585:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 180,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030303030",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4620:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 184,
									"name": "feeRate",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "4634:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4634:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 186,
									"name": "feeController",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "4663:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 185,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4663:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 188,
									"name": "feeRecipient",
									"nodeType": "VariableDeclaration",
									"scope": 1855,
									"src": "4698:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4698:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": "EVENTS\r",
									"id": 196,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4811:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4833:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4853:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4810:57:0"
									},
									"src": "4796:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 204,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4922:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4954:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "4988:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4911:97:0"
									},
									"src": "4897:112:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 210,
									"name": "OwnershipTransferProposed",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"indexed": true,
												"name": "currentOwner",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5082:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"name": "proposedOwner",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "5121:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5071:86:0"
									},
									"src": "5040:118:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 214,
									"name": "OwnershipTransferDisregarded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"name": "oldProposedOwner",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5199:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5198:34:0"
									},
									"src": "5164:69:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 220,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"indexed": true,
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "5276:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "5311:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5265:77:0"
									},
									"src": "5239:104:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 222,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5386:2:0"
									},
									"src": "5375:14:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 224,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5408:2:0"
									},
									"src": "5395:16:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 228,
									"name": "AddressFrozen",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5471:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5470:22:0"
									},
									"src": "5451:42:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 232,
									"name": "AddressUnfrozen",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5521:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5520:22:0"
									},
									"src": "5499:44:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 236,
									"name": "FrozenAddressWiped",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5574:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5573:22:0"
									},
									"src": "5549:47:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 242,
									"name": "AssetProtectionRoleSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"indexed": true,
												"name": "oldAssetProtectionRole",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "5641:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": true,
												"name": "newAssetProtectionRole",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "5690:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5630:105:0"
									},
									"src": "5602:134:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 248,
									"name": "SupplyIncreased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5796:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5795:35:0"
									},
									"src": "5774:57:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 254,
									"name": "SupplyDecreased",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5859:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5881:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5858:37:0"
									},
									"src": "5837:59:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 260,
									"name": "SupplyControllerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"name": "oldSupplyController",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5938:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"name": "newSupplyController",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5984:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5927:99:0"
									},
									"src": "5902:125:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 272,
									"name": "BetaDelegatedTransfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6107:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6138:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6167:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"indexed": false,
												"name": "seq",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6191:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": false,
												"name": "serviceFee",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6213:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6096:142:0"
									},
									"src": "6069:170:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 278,
									"name": "BetaDelegateWhitelisterSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"indexed": true,
												"name": "oldWhitelister",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6288:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"indexed": true,
												"name": "newWhitelister",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6329:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6277:89:0"
									},
									"src": "6245:122:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 282,
									"name": "BetaDelegateWhitelisted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"name": "newDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "6403:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6402:29:0"
									},
									"src": "6373:59:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 286,
									"name": "BetaDelegateUnwhitelisted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"indexed": true,
												"name": "oldDelegate",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "6470:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6469:29:0"
									},
									"src": "6438:61:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 294,
									"name": "FeeCollected",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6556:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6578:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6555:57:0"
									},
									"src": "6537:76:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 300,
									"name": "FeeRateSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"name": "oldFeeRate",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "6636:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": true,
												"name": "newFeeRate",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "6664:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6635:56:0"
									},
									"src": "6619:73:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 306,
									"name": "FeeControllerSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"name": "oldFeeController",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6731:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "newFeeController",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "6774:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6720:93:0"
									},
									"src": "6698:116:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 312,
									"name": "FeeRecipientSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"name": "oldFeeRecipient",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6852:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"name": "newFeeRecipient",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6894:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6841:91:0"
									},
									"src": "6820:113:0"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "7310:401:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7329:12:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "7330:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616c726561647920696e697469616c697a6564",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7343:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fad3ee6d344e662108f49bced409fae87c3af64246556bdd23a34dddc7e1adc",
																"typeString": "literal_string \"already initialized\""
															},
															"value": "already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fad3ee6d344e662108f49bced409fae87c3af64246556bdd23a34dddc7e1adc",
																"typeString": "literal_string \"already initialized\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "7321:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "7321:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 321,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "7376:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 322,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "7384:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7384:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7376:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "7376:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 326,
														"name": "proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "7405:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7429:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7421:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7405:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "7405:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 332,
														"name": "assetProtectionRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "7442:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7472:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7442:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "7442:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 338,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "7485:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7500:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7485:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "7485:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 342,
														"name": "supplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "7512:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 343,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "7531:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7531:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7512:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "7512:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 347,
														"name": "feeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "7552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7562:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7552:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "7552:11:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 351,
														"name": "feeController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "7574:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 352,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "7590:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7590:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7574:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "7574:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 356,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "7611:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 357,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "7626:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7611:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "7611:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 361,
														"name": "initializeDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "7647:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7647:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "7647:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 364,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "7685:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7699:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7685:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "7685:18:0"
											}
										]
									},
									"documentation": "@dev sets 0 initial tokens, the owner, the supplyController,\r\nthe fee controller and fee recipient.\r\nthis serves as the constructor for the proxy but compiles to the\r\nmemory model of the Implementation contract.\r",
									"id": 369,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7300:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7310:0:0"
									},
									"scope": 1855,
									"src": "7281:430:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "7994:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 372,
														"name": "initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "8005:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8005:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "8005:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "8028:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "8028:7:0"
											}
										]
									},
									"documentation": "The constructor is used here to ensure that the implementation\r\ncontract is initialized. An uncontrolled implementation\r\ncontract might lead to misleading state\r\nfor users who accidentally interact with it.\r",
									"id": 379,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7984:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7994:0:0"
									},
									"scope": 1855,
									"src": "7973:70:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8215:325:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 382,
														"name": "EIP712_DOMAIN_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "8286:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 386,
																		"name": "EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "8389:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 389,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 124,
																						"src": "8459:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 388,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8453:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8453:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 387,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "8443:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																				"typeString": "function () pure returns (bytes32)"
																			}
																		},
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8443:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 394,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1885,
																						"src": "8500:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PAXGImplementation_$1855",
																							"typeString": "contract PAXGImplementation"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_PAXGImplementation_$1855",
																							"typeString": "contract PAXGImplementation"
																						}
																					],
																					"id": 393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8492:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8492:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8484:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": "bytes32"
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8484:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 384,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1857,
																		"src": "8331:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8331:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8331:190:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 383,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "8307:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																"typeString": "function () pure returns (bytes32)"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8307:225:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "8286:246:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8286:246:0"
											}
										]
									},
									"documentation": "@dev To be called when upgrading the contract using upgradeAndCall to add delegated transfers\r",
									"id": 402,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "initializeDomainSeparator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8205:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8215:0:0"
									},
									"scope": 1855,
									"src": "8171:369:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "8704:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 407,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 121,
													"src": "8722:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "8715:19:0"
											}
										]
									},
									"documentation": "@dev Total number of tokens in existence\r",
									"id": 410,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8671:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "8695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8694:9:0"
									},
									"scope": 1855,
									"src": "8651:91:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "9185:294:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 422,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "9204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9219:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9211:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9211:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9204:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207472616e7366657220746f2061646472657373207a65726f",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9223:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db9c562c85edac902590d123803abe3813b4133eb5797fab2be40fa5a604d131",
																"typeString": "literal_string \"cannot transfer to address zero\""
															},
															"value": "cannot transfer to address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db9c562c85edac902590d123803abe3813b4133eb5797fab2be40fa5a604d131",
																"typeString": "literal_string \"cannot transfer to address zero\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "9196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9196:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9196:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9276:12:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 431,
																		"name": "frozen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "9277:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 433,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 432,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "9284:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9277:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9292:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 435,
																		"name": "frozen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "9293:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 438,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 436,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "9300:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "9300:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9293:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9276:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616464726573732066726f7a656e",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9313:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															},
															"value": "address frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															}
														],
														"id": 430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "9268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9268:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "9268:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 445,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "9349:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 446,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "9359:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 449,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 447,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "9368:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9368:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9359:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9349:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e73756666696369656e742066756e6473",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9381:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															},
															"value": "insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "9341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9341:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "9341:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "9425:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9425:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 457,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "9437:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 458,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "9442:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "9415:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9415:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "9415:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9467:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 420,
												"id": 462,
												"nodeType": "Return",
												"src": "9460:11:0"
											}
										]
									},
									"documentation": "@dev Transfer token to a specified address from msg.sender\r\nTransfer additionally sends the fee to the fee controller\r\nNote: the use of Safemath ensures that _value is nonnegative.\r\n@param _to The address to transfer to.\r\n@param _value The amount to be transferred.\r",
									"id": 464,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 417,
											"modifierName": {
												"argumentTypes": null,
												"id": 416,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 869,
												"src": "9142:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9142:13:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "9088:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "9101:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9087:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "9174:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9173:6:0"
									},
									"scope": 1855,
									"src": "9070:409:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "9767:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 471,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "9785:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 473,
													"indexExpression": {
														"argumentTypes": null,
														"id": 472,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "9794:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9785:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 470,
												"id": 474,
												"nodeType": "Return",
												"src": "9778:22:0"
											}
										]
									},
									"documentation": "@dev Gets the balance of the specified address.\r\n@param _addr The address to query the the balance of.\r\n@return An uint256 representing the amount owned by the passed address.\r",
									"id": 476,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "9722:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9721:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "9758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9757:9:0"
									},
									"scope": 1855,
									"src": "9703:105:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "10271:501:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 490,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10290:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10305:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10297:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10290:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207472616e7366657220746f2061646472657373207a65726f",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10309:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db9c562c85edac902590d123803abe3813b4133eb5797fab2be40fa5a604d131",
																"typeString": "literal_string \"cannot transfer to address zero\""
															},
															"value": "cannot transfer to address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db9c562c85edac902590d123803abe3813b4133eb5797fab2be40fa5a604d131",
																"typeString": "literal_string \"cannot transfer to address zero\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "10282:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10282:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "10282:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "10376:12:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 499,
																			"name": "frozen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "10377:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 501,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 500,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "10384:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10377:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "10392:14:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 503,
																			"name": "frozen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "10393:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 505,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 504,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "10400:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10393:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10376:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10410:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 508,
																		"name": "frozen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "10411:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 509,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "10418:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10418:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10411:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10376:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616464726573732066726f7a656e",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10444:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															},
															"value": "address frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "10354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10354:117:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "10354:117:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 518,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "10490:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 519,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "10500:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 521,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 520,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "10509:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10500:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10490:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e73756666696369656e742066756e6473",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10517:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															},
															"value": "insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "10482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10482:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "10482:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 527,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "10557:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 528,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "10567:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 530,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 529,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "10575:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10567:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 533,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 531,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "10582:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10582:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10567:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10557:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e73756666696369656e7420616c6c6f77616e6365",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10595:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																"typeString": "literal_string \"insufficient allowance\""
															},
															"value": "insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20dbb1b88f187125d7e634b087bca125fe84cb7576ed5ae599f7ade955801583",
																"typeString": "literal_string \"insufficient allowance\""
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "10549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10549:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "10549:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 538,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "10633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 542,
															"indexExpression": {
																"argumentTypes": null,
																"id": 539,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10641:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10633:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 543,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "10648:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10648:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10633:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 551,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "10693:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 544,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "10662:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 546,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 545,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "10670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10662:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 547,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "10677:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10677:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10662:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "10662:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10662:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10633:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "10633:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 556,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "10721:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 557,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10728:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 558,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "10733:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "10711:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10711:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "10711:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10760:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 488,
												"id": 562,
												"nodeType": "Return",
												"src": "10753:11:0"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r",
									"id": 564,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 485,
											"modifierName": {
												"argumentTypes": null,
												"id": 484,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 869,
												"src": "10242:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10242:13:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10167:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10191:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10213:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10156:78:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10264:6:0"
									},
									"scope": 1855,
									"src": "10135:637:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "11540:211:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "11559:17:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 576,
																		"name": "frozen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "11560:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 578,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 577,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "11567:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11560:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "11580:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 580,
																		"name": "frozen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "11581:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 583,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 581,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "11588:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11588:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11581:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11559:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616464726573732066726f7a656e",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11601:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															},
															"value": "address frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "11551:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11551:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "11551:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 589,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "11629:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 593,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 590,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "11637:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11637:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11629:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 594,
														"indexExpression": {
															"argumentTypes": null,
															"id": 592,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "11649:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11629:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 595,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "11661:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11629:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "11629:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "11692:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11692:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "11704:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 602,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "11714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 598,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "11683:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11683:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "11678:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11739:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 574,
												"id": 606,
												"nodeType": "Return",
												"src": "11732:11:0"
											}
										]
									},
									"documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\nBeware that changing an allowance with this method brings the risk that someone may use both the old\r\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n@param _spender The address which will spend the funds.\r\n@param _value The amount of tokens to be spent.\r",
									"id": 608,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 571,
											"modifierName": {
												"argumentTypes": null,
												"id": 570,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 869,
												"src": "11497:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11497:13:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11438:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11456:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11437:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "11529:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11528:6:0"
									},
									"scope": 1855,
									"src": "11421:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "12207:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 617,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "12225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 619,
														"indexExpression": {
															"argumentTypes": null,
															"id": 618,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "12233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12225:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 621,
													"indexExpression": {
														"argumentTypes": null,
														"id": 620,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "12241:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12225:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 616,
												"id": 622,
												"nodeType": "Return",
												"src": "12218:32:0"
											}
										]
									},
									"documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\r\n@param _owner address The address which owns the funds.\r\n@param _spender address The address which will spend the funds.\r\n@return A uint256 specifying the amount of tokens still available for the spender.\r",
									"id": 624,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "12111:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "12127:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12110:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "12193:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12192:9:0"
									},
									"scope": 1855,
									"src": "12092:166:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "12390:507:0",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"name": "_fee",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "12401:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 638,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "12426:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "getFeeFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "12416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12416:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12401:32:0"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"name": "_principle",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "12444:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 645,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "12476:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 643,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "12465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "12465:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12465:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12444:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 648,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "12492:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 650,
														"indexExpression": {
															"argumentTypes": null,
															"id": 649,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "12501:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12492:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 655,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "12530:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 651,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "12510:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 653,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 652,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "12519:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12510:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "12510:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12510:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12492:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "12492:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 659,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "12548:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 661,
														"indexExpression": {
															"argumentTypes": null,
															"id": 660,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "12557:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12548:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 666,
																"name": "_principle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "12582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 662,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "12564:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 664,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 663,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "12573:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12564:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "12564:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12564:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12548:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "12548:45:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 671,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "12618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 672,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "12625:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 673,
															"name": "_principle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "12630:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "12609:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12609:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "EmitStatement",
												"src": "12604:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 677,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "12666:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "12673:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 679,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "12687:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "12657:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12657:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "EmitStatement",
												"src": "12652:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 682,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "12707:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12714:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12707:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 703,
												"nodeType": "IfStatement",
												"src": "12703:157:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "12717:143:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 685,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "12732:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 687,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 686,
																		"name": "feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "12741:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12732:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 692,
																			"name": "_fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "12784:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 688,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "12757:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 690,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 689,
																				"name": "feeRecipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 188,
																				"src": "12766:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12757:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "12757:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12757:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12732:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 695,
															"nodeType": "ExpressionStatement",
															"src": "12732:57:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 697,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "12822:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 698,
																		"name": "feeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "12829:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 699,
																		"name": "_fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "12843:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 696,
																	"name": "FeeCollected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "12809:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12809:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "EmitStatement",
															"src": "12804:44:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 704,
													"name": "_principle",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 642,
													"src": "12879:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 634,
												"id": 705,
												"nodeType": "Return",
												"src": "12872:17:0"
											}
										]
									},
									"documentation": null,
									"id": 707,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "12295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "12319:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "12341:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12284:78:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "12381:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12380:9:0"
									},
									"scope": 1855,
									"src": "12266:631:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "13041:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 710,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "13060:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13060:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 712,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "13074:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13060:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c794f776e6572",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13081:11:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0f5652c1a65ed7aab563ec92201f225ad4f21da65ab92358467716dd724ffbe",
																"typeString": "literal_string \"onlyOwner\""
															},
															"value": "onlyOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f0f5652c1a65ed7aab563ec92201f225ad4f21da65ab92358467716dd724ffbe",
																"typeString": "literal_string \"onlyOwner\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "13052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13052:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "13052:41:0"
											},
											{
												"id": 717,
												"nodeType": "PlaceholderStatement",
												"src": "13104:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.\r",
									"id": 719,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13038:2:0"
									},
									"src": "13020:93:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "13373:317:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 727,
																"name": "_proposedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "13406:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13432:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13424:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13424:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13406:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207472616e73666572206f776e65727368697020746f2061646472657373207a65726f",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13449:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b7f9bf623894af7a3ea470eb6041f3d620af128815038c469f134bc85f850e6",
																"typeString": "literal_string \"cannot transfer ownership to address zero\""
															},
															"value": "cannot transfer ownership to address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b7f9bf623894af7a3ea470eb6041f3d620af128815038c469f134bc85f850e6",
																"typeString": "literal_string \"cannot transfer ownership to address zero\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "13384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13384:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "13384:119:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 736,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "13522:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13522:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 738,
																"name": "_proposedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "13536:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13522:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616c6c657220616c7265616479206973206f776e6572",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13552:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2590c15c54f9e39032275e805e4bf35f0569c8750b84ab3e30808a9ea4398bbc",
																"typeString": "literal_string \"caller already is owner\""
															},
															"value": "caller already is owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2590c15c54f9e39032275e805e4bf35f0569c8750b84ab3e30808a9ea4398bbc",
																"typeString": "literal_string \"caller already is owner\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "13514:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13514:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "13514:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 743,
														"name": "proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "13589:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 744,
														"name": "_proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "13605:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13589:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "13589:30:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "13661:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 749,
															"name": "proposedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "13668:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 747,
														"name": "OwnershipTransferProposed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "13635:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13635:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "EmitStatement",
												"src": "13630:52:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to begin transferring control of the contract to a proposedOwner\r\n@param _proposedOwner The address to transfer ownership to.\r",
									"id": 753,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 724,
											"modifierName": {
												"argumentTypes": null,
												"id": 723,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 719,
												"src": "13363:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13363:9:0"
										}
									],
									"name": "proposeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "_proposedOwner",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "13332:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13331:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13373:0:0"
									},
									"scope": 1855,
									"src": "13310:380:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "13878:445:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 757,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "13911:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13911:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 759,
																	"name": "proposedOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "13925:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13911:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 761,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "13942:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13942:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 763,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "13956:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13942:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "13911:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c792070726f706f7365644f776e6572206f72206f776e6572",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13976:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00c2bdfd5ea23350af109de8a3a8fbf9ea39189a036fa9aeb3df28948452c762",
																"typeString": "literal_string \"only proposedOwner or owner\""
															},
															"value": "only proposedOwner or owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00c2bdfd5ea23350af109de8a3a8fbf9ea39189a036fa9aeb3df28948452c762",
																"typeString": "literal_string \"only proposedOwner or owner\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "13889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13889:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "13889:127:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 770,
																"name": "proposedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "14049:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14074:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14066:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14066:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14049:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e206f6e6c792064697372656761726420612070726f706f736564206f776e65722074686174207761732070726576696f75736c7920736574",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14091:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3a67d58fb0816d50b6ac737e0009da0bf4dfcc39348727e157304ab190a928d",
																"typeString": "literal_string \"can only disregard a proposed owner that was previously set\""
															},
															"value": "can only disregard a proposed owner that was previously set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3a67d58fb0816d50b6ac737e0009da0bf4dfcc39348727e157304ab190a928d",
																"typeString": "literal_string \"can only disregard a proposed owner that was previously set\""
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "14027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14027:136:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "14027:136:0"
											},
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"name": "_oldProposedOwner",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "14174:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14174:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"argumentTypes": null,
													"id": 780,
													"name": "proposedOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "14202:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14174:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 782,
														"name": "proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "14226:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14250:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14242:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14242:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14226:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "14226:26:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 789,
															"name": "_oldProposedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "14297:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 788,
														"name": "OwnershipTransferDisregarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "14268:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14268:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "EmitStatement",
												"src": "14263:52:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner or proposed owner to cancel transferring control of the contract to a proposedOwner\r",
									"id": 793,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "disregardProposeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13868:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13878:0:0"
									},
									"scope": 1855,
									"src": "13838:485:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "14492:235:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 797,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "14511:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14511:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 799,
																"name": "proposedOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "14525:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14511:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7950726f706f7365644f776e6572",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14540:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d71f088ca8b7815eb54cb4faa3303f06370a19bca2da8e3e7befb188a741f3ef",
																"typeString": "literal_string \"onlyProposedOwner\""
															},
															"value": "onlyProposedOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d71f088ca8b7815eb54cb4faa3303f06370a19bca2da8e3e7befb188a741f3ef",
																"typeString": "literal_string \"onlyProposedOwner\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "14503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14503:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "14503:57:0"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"name": "_oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "14571:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14571:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"argumentTypes": null,
													"id": 806,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "14591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14571:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 808,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "14607:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 809,
														"name": "proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "14615:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14607:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "14607:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 812,
														"name": "proposedOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "14639:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14663:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14655:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14639:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "14639:26:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "_oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "14702:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 820,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "14713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 818,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "14681:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14681:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "EmitStatement",
												"src": "14676:43:0"
											}
										]
									},
									"documentation": "@dev Allows the proposed owner to complete transferring control of the contract to the proposedOwner.\r",
									"id": 824,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "claimOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14482:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14492:0:0"
									},
									"scope": 1855,
									"src": "14459:268:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "14988:186:0",
										"statements": [
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"name": "_balance",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "14999:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 829,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 834,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 831,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "15018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 833,
													"indexExpression": {
														"argumentTypes": null,
														"id": 832,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "15027:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PAXGImplementation_$1855",
															"typeString": "contract PAXGImplementation"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15018:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14999:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 835,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "15043:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 837,
														"indexExpression": {
															"argumentTypes": null,
															"id": 836,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "15052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PAXGImplementation_$1855",
																"typeString": "contract PAXGImplementation"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15043:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15060:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15043:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "15043:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 841,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "15072:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 843,
														"indexExpression": {
															"argumentTypes": null,
															"id": 842,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "15081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15072:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 848,
																"name": "_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "15110:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 844,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "15090:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 846,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 845,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "15099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15090:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "15090:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15090:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15072:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "15072:47:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 853,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "15144:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PAXGImplementation_$1855",
																"typeString": "contract PAXGImplementation"
															}
														},
														{
															"argumentTypes": null,
															"id": 854,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "15150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 855,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "15157:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_PAXGImplementation_$1855",
																"typeString": "contract PAXGImplementation"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "15135:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15135:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "EmitStatement",
												"src": "15130:36:0"
											}
										]
									},
									"documentation": "@dev Reclaim all PAXG at the contract address.\r\nThis sends the PAXG tokens that this contract add holding to the owner.\r\nNote: this is not affected by freeze constraints.\r",
									"id": 859,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 827,
											"modifierName": {
												"argumentTypes": null,
												"id": 826,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 719,
												"src": "14978:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14978:9:0"
										}
									],
									"name": "reclaimPAXG",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14966:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14988:0:0"
									},
									"scope": 1855,
									"src": "14946:228:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "15349:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15368:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 862,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "15369:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7768656e4e6f74506175736564",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15377:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9b20c98176dbf60c9f92354aebb9359ec4aa99f5ed95221126e89e3364bce1a",
																"typeString": "literal_string \"whenNotPaused\""
															},
															"value": "whenNotPaused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9b20c98176dbf60c9f92354aebb9359ec4aa99f5ed95221126e89e3364bce1a",
																"typeString": "literal_string \"whenNotPaused\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "15360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15360:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "15360:33:0"
											},
											{
												"id": 867,
												"nodeType": "PlaceholderStatement",
												"src": "15404:1:0"
											}
										]
									},
									"documentation": "@dev Modifier to make a function callable only when the contract is not paused.\r",
									"id": 869,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15346:2:0"
									},
									"src": "15324:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "15539:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "15558:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 875,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "15559:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616c726561647920706175736564",
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15567:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e44cdf99b474d3ac8cd8be04fddd55b50ebf6bccca0daac4252cccb8bbba898b",
																"typeString": "literal_string \"already paused\""
															},
															"value": "already paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e44cdf99b474d3ac8cd8be04fddd55b50ebf6bccca0daac4252cccb8bbba898b",
																"typeString": "literal_string \"already paused\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "15550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15550:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "15550:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 880,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "15595:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15604:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "15595:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "15595:13:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 884,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "15624:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "EmitStatement",
												"src": "15619:12:0"
											}
										]
									},
									"documentation": "@dev called by the owner to pause, triggers stopped state\r",
									"id": 888,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 872,
											"modifierName": {
												"argumentTypes": null,
												"id": 871,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 719,
												"src": "15529:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15529:9:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15519:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15539:0:0"
									},
									"scope": 1855,
									"src": "15505:134:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "15770:104:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 894,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "15789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616c726561647920756e706175736564",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15797:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87f758c6c4e8d889d504c8ff845a9eaa56e3ff9a2919552c567ce45c85898467",
																"typeString": "literal_string \"already unpaused\""
															},
															"value": "already unpaused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87f758c6c4e8d889d504c8ff845a9eaa56e3ff9a2919552c567ce45c85898467",
																"typeString": "literal_string \"already unpaused\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "15781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15781:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "15781:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 898,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "15827:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15836:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "15827:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "15827:14:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 902,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "15857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15857:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "EmitStatement",
												"src": "15852:14:0"
											}
										]
									},
									"documentation": "@dev called by the owner to unpause, returns to normal state\r",
									"id": 906,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 891,
											"modifierName": {
												"argumentTypes": null,
												"id": 890,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 719,
												"src": "15760:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15760:9:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15750:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15770:0:0"
									},
									"scope": 1855,
									"src": "15734:140:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "16184:335:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 912,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "16217:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16217:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 914,
																	"name": "assetProtectionRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16231:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16217:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 916,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "16254:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "16254:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 918,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "16268:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16254:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16217:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920617373657450726f74656374696f6e526f6c65206f72204f776e6572",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16288:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c85fc3a3c68a886daae2c79ed126d4f5f7aec404d68dd6ec8126b4048b2c949",
																"typeString": "literal_string \"only assetProtectionRole or Owner\""
															},
															"value": "only assetProtectionRole or Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c85fc3a3c68a886daae2c79ed126d4f5f7aec404d68dd6ec8126b4048b2c949",
																"typeString": "literal_string \"only assetProtectionRole or Owner\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "16195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16195:139:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "16195:139:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 925,
															"name": "assetProtectionRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "16387:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 926,
															"name": "_newAssetProtectionRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "16421:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 924,
														"name": "AssetProtectionRoleSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "16350:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16350:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "EmitStatement",
												"src": "16345:110:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 929,
														"name": "assetProtectionRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "16466:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 930,
														"name": "_newAssetProtectionRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "16488:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16466:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "16466:45:0"
											}
										]
									},
									"documentation": "@dev Sets a new asset protection role address.\r\n@param _newAssetProtectionRole The new address allowed to freeze/unfreeze addresses and seize their tokens.\r",
									"id": 934,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setAssetProtectionRole",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "_newAssetProtectionRole",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "16144:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16143:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16184:0:0"
									},
									"scope": 1855,
									"src": "16112:407:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "16562:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 937,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "16581:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 939,
																"name": "assetProtectionRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "16595:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16581:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c79417373657450726f74656374696f6e526f6c65",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16616:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad7fb871a536137e6a892ee9bda41c8206250ae6b7656e8814c5e4790deeff6a",
																"typeString": "literal_string \"onlyAssetProtectionRole\""
															},
															"value": "onlyAssetProtectionRole"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad7fb871a536137e6a892ee9bda41c8206250ae6b7656e8814c5e4790deeff6a",
																"typeString": "literal_string \"onlyAssetProtectionRole\""
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "16573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16573:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "16573:69:0"
											},
											{
												"id": 944,
												"nodeType": "PlaceholderStatement",
												"src": "16653:1:0"
											}
										]
									},
									"documentation": null,
									"id": 946,
									"name": "onlyAssetProtectionRole",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16559:2:0"
									},
									"src": "16527:135:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "16862:135:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16881:14:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 954,
																	"name": "frozen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "16882:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 956,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 955,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "16889:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16882:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6164647265737320616c72656164792066726f7a656e",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16897:24:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a8ecf8f5166171cb5ab9771ea80ad900c7306d33c3ed2846cd30f39650b6c62a",
																"typeString": "literal_string \"address already frozen\""
															},
															"value": "address already frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a8ecf8f5166171cb5ab9771ea80ad900c7306d33c3ed2846cd30f39650b6c62a",
																"typeString": "literal_string \"address already frozen\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "16873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16873:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "16873:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 961,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "16933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 963,
														"indexExpression": {
															"argumentTypes": null,
															"id": 962,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "16940:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16933:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16949:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16933:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "16933:20:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 968,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "16983:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 967,
														"name": "AddressFrozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "16969:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16969:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "EmitStatement",
												"src": "16964:25:0"
											}
										]
									},
									"documentation": "@dev Freezes an address balance from being transferred.\r\n@param _addr The new address to freeze.\r",
									"id": 972,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 951,
											"modifierName": {
												"argumentTypes": null,
												"id": 950,
												"name": "onlyAssetProtectionRole",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 946,
												"src": "16838:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16838:23:0"
										}
									],
									"name": "freeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "16816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16815:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16862:0:0"
									},
									"scope": 1855,
									"src": "16800:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "17198:139:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 980,
																"name": "frozen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "17217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 982,
															"indexExpression": {
																"argumentTypes": null,
																"id": 981,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "17224:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17217:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6164647265737320616c726561647920756e66726f7a656e",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17232:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_956214c66e89ad9524ba32119e7e850f999c8fac61a8e1319addcaba81212817",
																"typeString": "literal_string \"address already unfrozen\""
															},
															"value": "address already unfrozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_956214c66e89ad9524ba32119e7e850f999c8fac61a8e1319addcaba81212817",
																"typeString": "literal_string \"address already unfrozen\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "17209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17209:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "17209:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 986,
															"name": "frozen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "17270:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 988,
														"indexExpression": {
															"argumentTypes": null,
															"id": 987,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "17277:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17270:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17286:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "17270:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "17270:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 993,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "17323:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 992,
														"name": "AddressUnfrozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "17307:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17307:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "EmitStatement",
												"src": "17302:27:0"
											}
										]
									},
									"documentation": "@dev Unfreezes an address balance allowing transfer.\r\n@param _addr The new address to unfreeze.\r",
									"id": 997,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 977,
											"modifierName": {
												"argumentTypes": null,
												"id": 976,
												"name": "onlyAssetProtectionRole",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 946,
												"src": "17174:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17174:23:0"
										}
									],
									"name": "unfreeze",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "17152:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17151:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17198:0:0"
									},
									"scope": 1855,
									"src": "17134:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "17602:335:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1005,
																"name": "frozen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "17621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1007,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1006,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "17628:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17621:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "61646472657373206973206e6f742066726f7a656e",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17636:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24624bba72dabafd119e071e97a350335520236d4ff8847c92ab95c25311a045",
																"typeString": "literal_string \"address is not frozen\""
															},
															"value": "address is not frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24624bba72dabafd119e071e97a350335520236d4ff8847c92ab95c25311a045",
																"typeString": "literal_string \"address is not frozen\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "17613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17613:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "17613:47:0"
											},
											{
												"assignments": [
													1012
												],
												"declarations": [
													{
														"constant": false,
														"id": 1012,
														"name": "_balance",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "17671:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1011,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1013,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "17690:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1015,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1014,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "17699:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17690:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17671:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1017,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "17716:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1019,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1018,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "17725:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17716:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17734:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17716:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "17716:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1023,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "17746:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1026,
																"name": "_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "17778:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1024,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "17761:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "17761:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17761:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17746:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "17746:41:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1031,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "17822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1030,
														"name": "FrozenAddressWiped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "17803:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17803:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "EmitStatement",
												"src": "17798:30:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1035,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "17860:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1036,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "17867:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"name": "SupplyDecreased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "17844:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17844:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "EmitStatement",
												"src": "17839:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1040,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "17901:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17916:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17908:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1044,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "17920:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1039,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "17892:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17892:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1046,
												"nodeType": "EmitStatement",
												"src": "17887:42:0"
											}
										]
									},
									"documentation": "@dev Wipes the balance of a frozen address, burning the tokens\r\nand setting the approval to zero.\r\n@param _addr The new frozen address to wipe.\r",
									"id": 1048,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1002,
											"modifierName": {
												"argumentTypes": null,
												"id": 1001,
												"name": "onlyAssetProtectionRole",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 946,
												"src": "17578:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17578:23:0"
										}
									],
									"name": "wipeFrozenAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "17556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17555:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17602:0:0"
									},
									"scope": 1855,
									"src": "17529:408:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "18208:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1055,
														"name": "frozen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "18226:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1057,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1056,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "18233:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18226:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1058,
												"nodeType": "Return",
												"src": "18219:20:0"
											}
										]
									},
									"documentation": "@dev Gets whether the address is currently frozen.\r\n@param _addr The address to check if frozen.\r\n@return A bool representing whether the given address is frozen.\r",
									"id": 1060,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isFrozen",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "18166:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18165:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "18202:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18201:6:0"
									},
									"scope": 1855,
									"src": "18148:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "18524:416:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1066,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "18557:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "18557:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1068,
																	"name": "supplyController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "18571:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "18557:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1070,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "18591:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "18591:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1072,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "18605:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "18591:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18557:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920537570706c79436f6e74726f6c6c6572206f72204f776e6572",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18625:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25af0925b7e2d1b3bfca8b5398cd3c610d1879d3913a9bb31f0da000eea9d34a",
																"typeString": "literal_string \"only SupplyController or Owner\""
															},
															"value": "only SupplyController or Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25af0925b7e2d1b3bfca8b5398cd3c610d1879d3913a9bb31f0da000eea9d34a",
																"typeString": "literal_string \"only SupplyController or Owner\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "18535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18535:133:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "18535:133:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1079,
																"name": "_newSupplyController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "18701:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18733:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18725:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18725:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18701:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f742073657420737570706c7920636f6e74726f6c6c657220746f2061646472657373207a65726f",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18750:46:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3389222fec1b2d143798e03394d6ffbb1a7f93bf080a8bafa78d3f63257c7a72",
																"typeString": "literal_string \"cannot set supply controller to address zero\""
															},
															"value": "cannot set supply controller to address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3389222fec1b2d143798e03394d6ffbb1a7f93bf080a8bafa78d3f63257c7a72",
																"typeString": "literal_string \"cannot set supply controller to address zero\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "18679:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18679:128:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "18679:128:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1088,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "18843:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1089,
															"name": "_newSupplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "18861:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1087,
														"name": "SupplyControllerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "18823:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18823:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "EmitStatement",
												"src": "18818:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1092,
														"name": "supplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "18893:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1093,
														"name": "_newSupplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "18912:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18893:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "18893:39:0"
											}
										]
									},
									"documentation": "@dev Sets a new supply controller address.\r\n@param _newSupplyController The address allowed to burn/mint tokens to control supply.\r",
									"id": 1097,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setSupplyController",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"name": "_newSupplyController",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "18487:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18486:30:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18524:0:0"
									},
									"scope": 1855,
									"src": "18458:482:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "18980:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "18999:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "18999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1102,
																"name": "supplyController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "19013:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18999:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c79537570706c79436f6e74726f6c6c6572",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19031:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67ebe8d85bb10d4b23b8c58ef6e51e10d9e377ac46c9a1e9d5656b809c003b49",
																"typeString": "literal_string \"onlySupplyController\""
															},
															"value": "onlySupplyController"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67ebe8d85bb10d4b23b8c58ef6e51e10d9e377ac46c9a1e9d5656b809c003b49",
																"typeString": "literal_string \"onlySupplyController\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "18991:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18991:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "18991:63:0"
											},
											{
												"id": 1107,
												"nodeType": "PlaceholderStatement",
												"src": "19065:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1109,
									"name": "onlySupplyController",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18977:2:0"
									},
									"src": "18948:126:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "19464:277:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1118,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "19475:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1121,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "19507:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1119,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "19490:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "19490:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19490:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19475:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "19475:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1125,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "19525:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1127,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1126,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "19534:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19525:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1132,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "19585:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1128,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "19554:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1130,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1129,
																	"name": "supplyController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "19563:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19554:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "19554:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19554:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19525:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "19525:67:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1137,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "19624:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1138,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "19642:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "SupplyIncreased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "19608:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19608:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "19603:46:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19682:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19674:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19674:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1145,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "19686:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1146,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "19704:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1141,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "19665:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19665:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "EmitStatement",
												"src": "19660:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19729:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1117,
												"id": 1150,
												"nodeType": "Return",
												"src": "19722:11:0"
											}
										]
									},
									"documentation": "@dev Increases the total supply by minting the specified number of tokens to the supply controller account.\r\n@param _value The number of tokens to add.\r\n@return A boolean that indicates if the operation was successful.\r",
									"id": 1152,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1114,
											"modifierName": {
												"argumentTypes": null,
												"id": 1113,
												"name": "onlySupplyController",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1109,
												"src": "19406:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "19406:20:0"
										}
									],
									"name": "increaseSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "19365:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19364:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "19445:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19444:14:0"
									},
									"scope": 1855,
									"src": "19341:400:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "20136:354:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1162,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "20155:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1163,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "20165:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1165,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1164,
																	"name": "supplyController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "20174:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20165:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20155:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f75676820737570706c79",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20193:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bdbb229c2b4d7b9162c1056b42b042e34273be1286e40d34f09b97d74d710934",
																"typeString": "literal_string \"not enough supply\""
															},
															"value": "not enough supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bdbb229c2b4d7b9162c1056b42b042e34273be1286e40d34f09b97d74d710934",
																"typeString": "literal_string \"not enough supply\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "20147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20147:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "20147:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1170,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "20224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1171,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "20233:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20224:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1177,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "20284:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1173,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "20253:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1175,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1174,
																	"name": "supplyController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "20262:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20253:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "20253:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20253:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20224:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "20224:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1181,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "20302:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1184,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "20334:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1182,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "20317:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 25,
															"src": "20317:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20317:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20302:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "20302:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1189,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "20373:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1190,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "20391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"name": "SupplyDecreased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "20357:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20357:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "EmitStatement",
												"src": "20352:46:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1194,
															"name": "supplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "20423:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20449:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20441:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20441:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1198,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "20453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "20414:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20414:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "EmitStatement",
												"src": "20409:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20478:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1160,
												"id": 1202,
												"nodeType": "Return",
												"src": "20471:11:0"
											}
										]
									},
									"documentation": "@dev Decreases the total supply by burning the specified number of tokens from the supply controller account.\r\n@param _value The number of tokens to remove.\r\n@return A boolean that indicates if the operation was successful.\r",
									"id": 1204,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1157,
											"modifierName": {
												"argumentTypes": null,
												"id": 1156,
												"name": "onlySupplyController",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1109,
												"src": "20078:20:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20078:20:0"
										}
									],
									"name": "decreaseSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "20037:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20036:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "20117:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20116:14:0"
									},
									"scope": 1855,
									"src": "20013:477:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "20927:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1211,
														"name": "nextSeqs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "20945:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1213,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1212,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "20954:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20945:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1214,
												"nodeType": "Return",
												"src": "20938:23:0"
											}
										]
									},
									"documentation": "@dev returns the next seq for a target address.\r\nThe transactor must submit nextSeqOf(transactor) in the next transaction for it to be valid.\r\nNote: that the seq context is specific to this smart contract.\r\n@param target The target address.\r\n@return the seq.\r",
									"id": 1216,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "nextSeqOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "20881:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20880:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "20918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20917:9:0"
									},
									"scope": 1855,
									"src": "20862:107:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "21952:609:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "21971:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "21971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3635",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21985:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "21971:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7369676e61747572652073686f756c642068617665206c656e677468203635",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21989:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebcbacbd99fb356f78f28f650123438c2174f8eca3073b9eea6bfa2fd4400c61",
																"typeString": "literal_string \"signature should have length 65\""
															},
															"value": "signature should have length 65"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebcbacbd99fb356f78f28f650123438c2174f8eca3073b9eea6bfa2fd4400c61",
																"typeString": "literal_string \"signature should have length 65\""
															}
														],
														"id": 1233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "21963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21963:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "21963:60:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "22034:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1241,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "22034:9:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "22054:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1244,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "22054:9:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"name": "v",
														"nodeType": "VariableDeclaration",
														"scope": 1267,
														"src": "22074:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1247,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "22074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "22074:7:0"
											},
											{
												"externalReferences": [
													{
														"r": {
															"declaration": 1242,
															"isOffset": false,
															"isSlot": false,
															"src": "22116:1:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 1218,
															"isOffset": false,
															"isSlot": false,
															"src": "22131:3:0",
															"valueSize": 1
														}
													},
													{
														"s": {
															"declaration": 1245,
															"isOffset": false,
															"isSlot": false,
															"src": "22154:1:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 1218,
															"isOffset": false,
															"isSlot": false,
															"src": "22169:3:0",
															"valueSize": 1
														}
													},
													{
														"v": {
															"declaration": 1248,
															"isOffset": false,
															"isSlot": false,
															"src": "22192:1:0",
															"valueSize": 1
														}
													},
													{
														"sig": {
															"declaration": 1218,
															"isOffset": false,
															"isSlot": false,
															"src": "22215:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 1250,
												"nodeType": "InlineAssembly",
												"operations": "{\n    r := mload(add(sig, 32))\n    s := mload(add(sig, 64))\n    v := byte(0, mload(add(sig, 96)))\n}",
												"src": "22092:161:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1253,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "22309:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1254,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "22329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1255,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "22349:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1256,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "22369:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "22390:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1258,
																	"name": "serviceFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "22414:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1259,
																	"name": "seq",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "22443:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1260,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "22465:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1252,
																"name": "_betaDelegatedTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "22268:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint8_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (bytes32,bytes32,uint8,address,uint256,uint256,uint256,uint256) returns (bool)"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22268:220:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6661696c6564207472616e73666572",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22503:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f667146b1fed3dc351a835be47873d2af5047fca45340230dd7447bc845f7a2c",
																"typeString": "literal_string \"failed transfer\""
															},
															"value": "failed transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f667146b1fed3dc351a835be47873d2af5047fca45340230dd7447bc845f7a2c",
																"typeString": "literal_string \"failed transfer\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "22246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22246:285:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "22246:285:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22549:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1232,
												"id": 1266,
												"nodeType": "Return",
												"src": "22542:11:0"
											}
										]
									},
									"documentation": "@dev Performs a transfer on behalf of the from address, identified by its signature on the delegatedTransfer msg.\r\nSplits a signature byte array into r,s,v for convenience.\r\n@param sig the signature of the delgatedTransfer msg.\r\n@param to The address to transfer to.\r\n@param value The amount to be transferred.\r\n@param serviceFee an optional ERC20 service fee paid to the executor of betaDelegatedTransfer by the from address.\r\n@param seq a sequencing number included by the from address specific to this contract to protect from replays.\r\n@param deadline a block number after which the pre-signed transaction has expired.\r\n@return A boolean that indicates if the operation was successful.\r",
									"id": 1268,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "betaDelegatedTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"name": "sig",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21790:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21810:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21831:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"name": "serviceFee",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21855:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"name": "seq",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21884:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21906:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21779:150:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "21946:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21945:6:0"
									},
									"scope": 1855,
									"src": "21749:812:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "24046:2284:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1292,
																"name": "betaDelegateWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "24079:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1295,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1293,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "24101:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "24101:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "24079:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "426574612066656174757265206f6e6c7920616363657074732077686974656c69737465642064656c656761746573",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24127:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1349741b60c39d333f2c255cb7726af24751eedcf5ad525b62df0f6201eec501",
																"typeString": "literal_string \"Beta feature only accepts whitelisted delegates\""
															},
															"value": "Beta feature only accepts whitelisted delegates"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1349741b60c39d333f2c255cb7726af24751eedcf5ad525b62df0f6201eec501",
																"typeString": "literal_string \"Beta feature only accepts whitelisted delegates\""
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "24057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24057:130:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "24057:130:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "24220:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24228:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "24220:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1303,
																	"name": "serviceFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "24233:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24246:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "24233:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24220:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207472616e73666572207a65726f20746f6b656e732077697468207a65726f207365727669636520666565",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24262:51:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bffa3ca865435b7bd0b78f6a6787cac74a131733961cb79a3cdb92cc3fe25d9",
																"typeString": "literal_string \"cannot transfer zero tokens with zero service fee\""
															},
															"value": "cannot transfer zero tokens with zero service fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bffa3ca865435b7bd0b78f6a6787cac74a131733961cb79a3cdb92cc3fe25d9",
																"typeString": "literal_string \"cannot transfer zero tokens with zero service fee\""
															}
														],
														"id": 1299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "24198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24198:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "24198:126:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1311,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "24343:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "24343:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1313,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1284,
																"src": "24359:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24343:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e73616374696f6e2065787069726564",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24369:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c243f27a5f6b62e63cfb4a033b0d6c9f68d36eb35996422affa6705236403d79",
																"typeString": "literal_string \"transaction expired\""
															},
															"value": "transaction expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c243f27a5f6b62e63cfb4a033b0d6c9f68d36eb35996422affa6705236403d79",
																"typeString": "literal_string \"transaction expired\""
															}
														],
														"id": 1310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "24335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24335:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "24335:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1320,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "24486:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24478:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24509:66:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...7168"
																},
																"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
															},
															"src": "24478:97:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7369676e617475726520696e636f7272656374",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24590:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c570bbe843212f15dfb4f688a7e443d305ade20ef3048ccae5b14c81be1a36d8",
																"typeString": "literal_string \"signature incorrect\""
															},
															"value": "signature incorrect"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c570bbe843212f15dfb4f688a7e443d305ade20ef3048ccae5b14c81be1a36d8",
																"typeString": "literal_string \"signature incorrect\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "24456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24456:166:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "24456:166:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1328,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "24641:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3237",
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24646:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "24641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1331,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "24652:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3238",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24657:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"src": "24652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24641:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7369676e617475726520696e636f7272656374",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24661:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c570bbe843212f15dfb4f688a7e443d305ade20ef3048ccae5b14c81be1a36d8",
																"typeString": "literal_string \"signature incorrect\""
															},
															"value": "signature incorrect"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c570bbe843212f15dfb4f688a7e443d305ade20ef3048ccae5b14c81be1a36d8",
																"typeString": "literal_string \"signature incorrect\""
															}
														],
														"id": 1327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "24633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24633:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "24633:50:0"
											},
											{
												"assignments": [
													1339
												],
												"declarations": [
													{
														"constant": false,
														"id": 1339,
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"scope": 1493,
														"src": "24784:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1338,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "24784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1343,
																	"name": "EIP191_HEADER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "24858:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1344,
																	"name": "EIP712_DOMAIN_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "24890:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1348,
																					"name": "EIP712_DELEGATED_TRANSFER_SCHEMA_HASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "25025:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1350,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1276,
																							"src": "25097:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1349,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25089:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": "bytes32"
																					},
																					"id": 1351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "25089:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1352,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "25127:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1353,
																					"name": "serviceFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "25159:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1354,
																					"name": "seq",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1282,
																					"src": "25196:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1355,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "25226:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1346,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1857,
																					"src": "24959:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "24959:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24959:298:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1345,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "24927:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																			"typeString": "function () pure returns (bytes32)"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24927:349:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1341,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "24823:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "24823:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24823:468:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1340,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "24799:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24799:503:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24784:518:0"
											},
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"name": "_from",
														"nodeType": "VariableDeclaration",
														"scope": 1493,
														"src": "25313:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1361,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25313:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1364,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "25339:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1365,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "25345:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 1366,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "25348:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 1367,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "25351:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1363,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "25329:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25329:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25313:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1371,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "25388:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25405:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25397:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25397:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25388:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6572726f722064657465726d696e696e672066726f6d20616464726573732066726f6d207369676e6174757265",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25422:47:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45ac9dcd7b4325b576cdcf8d126a0643d257c9c3e51ba3f2e11c2be0e256312c",
																"typeString": "literal_string \"error determining from address from signature\""
															},
															"value": "error determining from address from signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45ac9dcd7b4325b576cdcf8d126a0643d257c9c3e51ba3f2e11c2be0e256312c",
																"typeString": "literal_string \"error determining from address from signature\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "25366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25366:114:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "25366:114:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1380,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "25499:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25513:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25499:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207573652061646472657373207a65726f",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25517:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79d8b31d3f6f933a09c06c7f552bf4a0a9d2f549b833a673a4d64621cb7ae01c",
																"typeString": "literal_string \"cannot use address zero\""
															},
															"value": "cannot use address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79d8b31d3f6f933a09c06c7f552bf4a0a9d2f549b833a673a4d64621cb7ae01c",
																"typeString": "literal_string \"cannot use address zero\""
															}
														],
														"id": 1379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "25491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25491:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "25491:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25576:11:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1389,
																			"name": "frozen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "25577:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1391,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1390,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "25584:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "25577:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "25591:14:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1393,
																			"name": "frozen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "25592:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1395,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1394,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "25599:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "25592:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "25576:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "25609:19:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1398,
																		"name": "frozen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "25610:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1401,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1399,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "25617:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "25617:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25610:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25576:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616464726573732066726f7a656e",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25643:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															},
															"value": "address frozen"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869ab312b8f3da31a590d7aaa63453ebdba2cbfa388e92430dfabceb4515d6a9",
																"typeString": "literal_string \"address frozen\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "25554:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25554:116:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "25554:116:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1410,
																		"name": "serviceFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "25713:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1278,
																		"src": "25703:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 49,
																	"src": "25703:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25703:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1412,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "25728:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1414,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1413,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "25737:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25728:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25703:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e73756666696369656e742066756e6473206f7220626164207369676e6174757265",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25758:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_756064f5dbafd35b8fb338aab80d554acd560f1b7b0fdfce01b1291a5fa50771",
																"typeString": "literal_string \"insufficient funds or bad signature\""
															},
															"value": "insufficient funds or bad signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_756064f5dbafd35b8fb338aab80d554acd560f1b7b0fdfce01b1291a5fa50771",
																"typeString": "literal_string \"insufficient funds or bad signature\""
															}
														],
														"id": 1407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "25681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25681:125:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "25681:125:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1420,
																	"name": "nextSeqs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "25825:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1422,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1421,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "25834:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25825:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1423,
																"name": "seq",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "25844:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25825:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e636f727265637420736571",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25849:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0641f7caa0a15b6b0535123014240b639766985b02947b207b4111835903e6d8",
																"typeString": "literal_string \"incorrect seq\""
															},
															"value": "incorrect seq"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0641f7caa0a15b6b0535123014240b639766985b02947b207b4111835903e6d8",
																"typeString": "literal_string \"incorrect seq\""
															}
														],
														"id": 1419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "25817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25817:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "25817:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1428,
															"name": "nextSeqs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "25878:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1430,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1429,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "25887:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25878:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25916:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1431,
																	"name": "nextSeqs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "25896:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1433,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1432,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "25905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "25896:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "25896:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25896:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25878:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "25878:40:0"
											},
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"name": "_principle",
														"nodeType": "VariableDeclaration",
														"scope": 1493,
														"src": "25931:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1446,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1442,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "25962:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1443,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "25969:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "25973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1441,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "25952:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,address,uint256) returns (uint256)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25952:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25931:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1447,
														"name": "serviceFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "25996:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26010:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25996:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1482,
												"nodeType": "IfStatement",
												"src": "25992:230:0",
												"trueBody": {
													"id": 1481,
													"nodeType": "Block",
													"src": "26013:209:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1450,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "26028:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1452,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1451,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "26037:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26028:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1457,
																			"name": "serviceFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "26066:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1453,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "26046:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1455,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1454,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "26055:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "26046:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 25,
																		"src": "26046:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26046:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26028:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1460,
															"nodeType": "ExpressionStatement",
															"src": "26028:49:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1461,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "26092:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1464,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1462,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "26101:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "26101:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26092:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1470,
																			"name": "serviceFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "26140:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1465,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "26115:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1468,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1466,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1870,
																					"src": "26124:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "26124:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "26115:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 49,
																		"src": "26115:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26115:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26092:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "26092:59:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1475,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "26180:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1476,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "26187:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "26187:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1478,
																		"name": "serviceFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "26199:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1474,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "26171:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26171:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1480,
															"nodeType": "EmitStatement",
															"src": "26166:44:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1484,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "26261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "26268:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1486,
															"name": "_principle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "26272:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1487,
															"name": "seq",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "26284:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1488,
															"name": "serviceFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "26289:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1483,
														"name": "BetaDelegatedTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "26239:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26239:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "EmitStatement",
												"src": "26234:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26318:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1290,
												"id": 1492,
												"nodeType": "Return",
												"src": "26311:11:0"
											}
										]
									},
									"documentation": "@dev Performs a transfer on behalf of the from address, identified by its signature on the betaDelegatedTransfer msg.\r\nNote: both the delegate and transactor sign in the service fees. The transactor, however,\r\nhas no control over the gas price, and therefore no control over the transaction time.\r\nBeta prefix chosen to avoid a name clash with an emerging standard in ERC865 or elsewhere.\r\nInternal to the contract - see betaDelegatedTransfer and betaDelegatedTransferBatch.\r\n@param r the r signature of the delgatedTransfer msg.\r\n@param s the s signature of the delgatedTransfer msg.\r\n@param v the v signature of the delgatedTransfer msg.\r\n@param to The address to transfer to.\r\n@param value The amount to be transferred.\r\n@param serviceFee an optional ERC20 service fee paid to the delegate of betaDelegatedTransfer by the from address.\r\n@param seq a sequencing number included by the from address specific to this contract to protect from replays.\r\n@param deadline a block number after which the pre-signed transaction has expired.\r\n@return A boolean that indicates if the operation was successful.\r",
									"id": 1494,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1287,
											"modifierName": {
												"argumentTypes": null,
												"id": 1286,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 869,
												"src": "24017:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "24017:13:0"
										}
									],
									"name": "_betaDelegatedTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23830:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23850:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23870:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1273,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "23870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23888:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"name": "serviceFee",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23933:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"name": "seq",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23962:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "23984:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23819:188:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "24040:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24040:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24039:6:0"
									},
									"scope": 1855,
									"src": "23788:2542:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "27624:885:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1524,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "27657:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																					"typeString": "bytes32[] memory"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "27657:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1526,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1500,
																				"src": "27669:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																					"typeString": "bytes32[] memory"
																				}
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "27669:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27657:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1529,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1497,
																				"src": "27698:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																					"typeString": "bytes32[] memory"
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "27698:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1531,
																				"name": "v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "27710:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																					"typeString": "uint8[] memory"
																				}
																			},
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "27710:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27698:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "27657:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1535,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "27739:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "27739:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1537,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "27751:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "27751:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27739:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "27657:103:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1541,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "27781:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "27781:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1543,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "27793:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "27793:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27781:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "27657:148:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c656e677468206d69736d61746368",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27820:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd",
																"typeString": "literal_string \"length mismatch\""
															},
															"value": "length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd",
																"typeString": "literal_string \"length mismatch\""
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "27635:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27635:213:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "27635:213:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1551,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "27881:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "27881:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1553,
																			"name": "serviceFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "27893:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "27893:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27881:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1556,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1497,
																			"src": "27931:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "27931:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1558,
																			"name": "seq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1515,
																			"src": "27943:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "27943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "27931:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "27881:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1562,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "27974:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "27974:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1564,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "27986:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "27986:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27974:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "27881:120:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c656e677468206d69736d61746368",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28016:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd",
																"typeString": "literal_string \"length mismatch\""
															},
															"value": "length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01533ac81325c721faf446ceccaf9f197991bc2ad752fe9d846afddbc44cdcdd",
																"typeString": "literal_string \"length mismatch\""
															}
														],
														"id": 1550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "27859:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27859:185:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "27859:185:0"
											},
											{
												"body": {
													"id": 1612,
													"nodeType": "Block",
													"src": "28096:384:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1584,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1497,
																					"src": "28182:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1586,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1585,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28184:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28182:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1587,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1500,
																					"src": "28209:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 1589,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1588,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28211:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28209:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1590,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1503,
																					"src": "28236:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																						"typeString": "uint8[] memory"
																					}
																				},
																				"id": 1592,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1591,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28238:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28236:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1593,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "28263:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1595,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1594,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28266:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28263:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1596,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1509,
																					"src": "28291:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1598,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1597,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28297:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28291:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1599,
																					"name": "serviceFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "28322:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1601,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1600,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28333:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28322:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1602,
																					"name": "seq",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1515,
																					"src": "28358:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1604,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1603,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28362:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28358:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1605,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "28387:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1607,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1606,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "28396:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "28387:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1583,
																			"name": "_betaDelegatedTransfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "28137:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_uint8_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (bytes32,bytes32,uint8,address,uint256,uint256,uint256,uint256) returns (bool)"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28137:280:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "6661696c6564207472616e73666572",
																		"id": 1609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28436:17:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f667146b1fed3dc351a835be47873d2af5047fca45340230dd7447bc845f7a2c",
																			"typeString": "literal_string \"failed transfer\""
																		},
																		"value": "failed transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f667146b1fed3dc351a835be47873d2af5047fca45340230dd7447bc845f7a2c",
																			"typeString": "literal_string \"failed transfer\""
																		}
																	],
																	"id": 1582,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1873,
																		1874
																	],
																	"referencedDeclaration": 1874,
																	"src": "28111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28111:357:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1611,
															"nodeType": "ExpressionStatement",
															"src": "28111:357:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1575,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "28077:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1576,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "28081:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "28081:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28077:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1613,
												"initializationExpression": {
													"assignments": [
														1572
													],
													"declarations": [
														{
															"constant": false,
															"id": 1572,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1613,
															"src": "28062:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1571,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "28062:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1574,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28074:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "28062:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "28091:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1579,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "28091:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1581,
													"nodeType": "ExpressionStatement",
													"src": "28091:3:0"
												},
												"nodeType": "ForStatement",
												"src": "28057:423:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28497:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1522,
												"id": 1615,
												"nodeType": "Return",
												"src": "28490:11:0"
											}
										]
									},
									"documentation": "@dev Performs an atomic batch of transfers on behalf of the from addresses, identified by their signatures.\r\nLack of nested array support in arguments requires all arguments to be passed as equal size arrays where\r\ndelegated transfer number i is the combination of all arguments at index i\r\n@param r the r signatures of the delgatedTransfer msg.\r\n@param s the s signatures of the delgatedTransfer msg.\r\n@param v the v signatures of the delgatedTransfer msg.\r\n@param to The addresses to transfer to.\r\n@param value The amounts to be transferred.\r\n@param serviceFee optional ERC20 service fees paid to the delegate of betaDelegatedTransfer by the from address.\r\n@param seq sequencing numbers included by the from address specific to this contract to protect from replays.\r\n@param deadline block numbers after which the pre-signed transactions have expired.\r\n@return A boolean that indicates if the operation was successful.\r",
									"id": 1617,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "betaDelegatedTransferBatch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27408:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1495,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "27408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1496,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27408:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27430:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1498,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "27430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1499,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27430:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27452:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1501,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "27452:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1502,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27472:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1504,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1505,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27472:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1507,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1508,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27495:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"name": "serviceFee",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27521:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1510,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27521:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1511,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27521:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"name": "seq",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27552:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1513,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1514,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27552:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27576:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1516,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1517,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "27576:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27397:204:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "27618:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27617:6:0"
									},
									"scope": 1855,
									"src": "27362:1147:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "28869:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1624,
														"name": "betaDelegateWhitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "28887:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1626,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1625,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "28909:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28887:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1623,
												"id": 1627,
												"nodeType": "Return",
												"src": "28880:35:0"
											}
										]
									},
									"documentation": "@dev Gets whether the address is currently whitelisted for betaDelegateTransfer.\r\n@param _addr The address to check if whitelisted.\r\n@return A bool representing whether the given address is whitelisted.\r",
									"id": 1629,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isWhitelistedBetaDelegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "28795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28794:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "28858:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28857:6:0"
									},
									"scope": 1855,
									"src": "28760:163:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "29146:327:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1635,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "29179:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "29179:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1637,
																	"name": "betaDelegateWhitelister",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "29193:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "29179:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1639,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "29220:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "29220:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1641,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "29234:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "29220:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "29179:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c792057686974656c6973746572206f72204f776e6572",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29254:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da26297cc116624c8fcea7cd4e2b6ea90cb8f99ccc3ee095f203b8a5d66efe4e",
																"typeString": "literal_string \"only Whitelister or Owner\""
															},
															"value": "only Whitelister or Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da26297cc116624c8fcea7cd4e2b6ea90cb8f99ccc3ee095f203b8a5d66efe4e",
																"typeString": "literal_string \"only Whitelister or Owner\""
															}
														],
														"id": 1634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "29157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29157:135:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "29157:135:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1647,
														"name": "betaDelegateWhitelister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "29303:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1648,
														"name": "_newWhitelister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "29329:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29303:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "29303:41:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1652,
															"name": "betaDelegateWhitelister",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "29401:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1653,
															"name": "_newWhitelister",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "29439:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1651,
														"name": "BetaDelegateWhitelisterSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "29360:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29360:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "EmitStatement",
												"src": "29355:110:0"
											}
										]
									},
									"documentation": "@dev Sets a new betaDelegate whitelister.\r\n@param _newWhitelister The address allowed to whitelist betaDelegates.\r",
									"id": 1657,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setBetaDelegateWhitelister",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"name": "_newWhitelister",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "29114:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29113:25:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29146:0:0"
									},
									"scope": 1855,
									"src": "29078:395:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "29520:145:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1660,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "29553:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "29553:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1662,
																"name": "betaDelegateWhitelister",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "29567:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29553:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c794265746144656c656761746557686974656c6973746572",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29605:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee3687b540cb3e9ba1b262b73b70cefee15c3f943588aba3035edba4a505319e",
																"typeString": "literal_string \"onlyBetaDelegateWhitelister\""
															},
															"value": "onlyBetaDelegateWhitelister"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee3687b540cb3e9ba1b262b73b70cefee15c3f943588aba3035edba4a505319e",
																"typeString": "literal_string \"onlyBetaDelegateWhitelister\""
															}
														],
														"id": 1659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "29531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29531:114:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "29531:114:0"
											},
											{
												"id": 1667,
												"nodeType": "PlaceholderStatement",
												"src": "29656:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1669,
									"name": "onlyBetaDelegateWhitelister",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29517:2:0"
									},
									"src": "29481:184:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "29921:181:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "29940:29:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1677,
																	"name": "betaDelegateWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "29941:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1679,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1678,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "29963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29941:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64656c656761746520616c72656164792077686974656c6973746564",
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29971:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_690aa9f6545210b959c46c202a9ac268fa8c9605e03353bf52fa84d5ebe1e1b1",
																"typeString": "literal_string \"delegate already whitelisted\""
															},
															"value": "delegate already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_690aa9f6545210b959c46c202a9ac268fa8c9605e03353bf52fa84d5ebe1e1b1",
																"typeString": "literal_string \"delegate already whitelisted\""
															}
														],
														"id": 1676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "29932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29932:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "29932:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1684,
															"name": "betaDelegateWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "30013:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1686,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1685,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "30035:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30013:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30044:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "30013:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "30013:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1691,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "30088:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1690,
														"name": "BetaDelegateWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "30064:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30064:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "EmitStatement",
												"src": "30059:35:0"
											}
										]
									},
									"documentation": "@dev Whitelists an address to allow calling BetaDelegatedTransfer.\r\n@param _addr The new address to whitelist.\r",
									"id": 1695,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1674,
											"modifierName": {
												"argumentTypes": null,
												"id": 1673,
												"name": "onlyBetaDelegateWhitelister",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1669,
												"src": "29888:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "29888:27:0"
										}
									],
									"name": "whitelistBetaDelegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "29848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29847:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29921:0:0"
									},
									"scope": 1855,
									"src": "29817:285:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "30365:179:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1703,
																"name": "betaDelegateWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "30384:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1705,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1704,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1697,
																"src": "30406:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30384:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64656c6567617465206e6f742077686974656c6973746564",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30414:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bfcc685bab9ac9ccb2de35f462bb3bda449b18558833da5e28c67a6dead185e",
																"typeString": "literal_string \"delegate not whitelisted\""
															},
															"value": "delegate not whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bfcc685bab9ac9ccb2de35f462bb3bda449b18558833da5e28c67a6dead185e",
																"typeString": "literal_string \"delegate not whitelisted\""
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "30376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30376:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "30376:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1709,
															"name": "betaDelegateWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "30452:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1711,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1710,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "30474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "30452:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30483:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "30452:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "30452:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1716,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "30530:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1715,
														"name": "BetaDelegateUnwhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "30504:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30504:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "EmitStatement",
												"src": "30499:37:0"
											}
										]
									},
									"documentation": "@dev Unwhitelists an address to disallow calling BetaDelegatedTransfer.\r\n@param _addr The new address to whitelist.\r",
									"id": 1720,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1700,
											"modifierName": {
												"argumentTypes": null,
												"id": 1699,
												"name": "onlyBetaDelegateWhitelister",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1669,
												"src": "30332:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "30332:27:0"
										}
									],
									"name": "unwhitelistBetaDelegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "30292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30291:15:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30365:0:0"
									},
									"scope": 1855,
									"src": "30259:285:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "30813:441:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1726,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "30846:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "30846:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1728,
																	"name": "feeController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "30860:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "30846:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1730,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "30877:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "30877:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1732,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "30891:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "30877:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "30846:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920466565436f6e74726f6c6c6572206f72204f776e6572",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30911:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23ab9c12daa464ce5b050757cf01873aa546ff651c2d7f93dd7cfe9b2fa82973",
																"typeString": "literal_string \"only FeeController or Owner\""
															},
															"value": "only FeeController or Owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23ab9c12daa464ce5b050757cf01873aa546ff651c2d7f93dd7cfe9b2fa82973",
																"typeString": "literal_string \"only FeeController or Owner\""
															}
														],
														"id": 1725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "30824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30824:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "30824:127:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1739,
																"name": "_newFeeController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "30984:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31013:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31005:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31005:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30984:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207365742066656520636f6e74726f6c6c657220746f2061646472657373207a65726f",
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31030:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f5e8f4afc2052baee1c2f2f9d523eb6908a6df3686d67cf29e0c245943ddcf4",
																"typeString": "literal_string \"cannot set fee controller to address zero\""
															},
															"value": "cannot set fee controller to address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f5e8f4afc2052baee1c2f2f9d523eb6908a6df3686d67cf29e0c245943ddcf4",
																"typeString": "literal_string \"cannot set fee controller to address zero\""
															}
														],
														"id": 1738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "30962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30962:122:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "30962:122:0"
											},
											{
												"assignments": [
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"name": "_oldFeeController",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "31095:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1747,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"argumentTypes": null,
													"id": 1749,
													"name": "feeController",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "31123:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31095:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1751,
														"name": "feeController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "31147:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1752,
														"name": "_newFeeController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "31163:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31147:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1754,
												"nodeType": "ExpressionStatement",
												"src": "31147:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1756,
															"name": "_oldFeeController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "31213:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1757,
															"name": "feeController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "31232:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1755,
														"name": "FeeControllerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "31196:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31196:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "EmitStatement",
												"src": "31191:55:0"
											}
										]
									},
									"documentation": "@dev Sets a new fee controller address.\r\n@param _newFeeController The address allowed to set the fee rate and the fee recipient.\r",
									"id": 1761,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setFeeController",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"name": "_newFeeController",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "30779:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30778:27:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30813:0:0"
									},
									"scope": 1855,
									"src": "30753:501:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "31291:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1764,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "31310:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "31310:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1766,
																"name": "feeController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "31324:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31310:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920466565436f6e74726f6c6c6572",
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31339:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d46d7d0240285fa1f83edc752e0a77732bf2c79a658b14f8483c8654dddaf1ae",
																"typeString": "literal_string \"only FeeController\""
															},
															"value": "only FeeController"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d46d7d0240285fa1f83edc752e0a77732bf2c79a658b14f8483c8654dddaf1ae",
																"typeString": "literal_string \"only FeeController\""
															}
														],
														"id": 1763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "31302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31302:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "31302:58:0"
											},
											{
												"id": 1771,
												"nodeType": "PlaceholderStatement",
												"src": "31371:1:0"
											}
										]
									},
									"documentation": null,
									"id": 1773,
									"name": "onlyFeeController",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31288:2:0"
									},
									"src": "31262:118:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "31644:294:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1781,
																"name": "_newFeeRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "31677:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31705:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31697:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31677:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207365742066656520726563697069656e7420746f2061646472657373207a65726f",
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31722:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dab308cb3007ebae34df652fae2aa042c1ca3cab6cfe3e5f6bc520ae3deaf4dc",
																"typeString": "literal_string \"cannot set fee recipient to address zero\""
															},
															"value": "cannot set fee recipient to address zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dab308cb3007ebae34df652fae2aa042c1ca3cab6cfe3e5f6bc520ae3deaf4dc",
																"typeString": "literal_string \"cannot set fee recipient to address zero\""
															}
														],
														"id": 1780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "31655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31655:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "31655:120:0"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"name": "_oldFeeRecipient",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "31786:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1789,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"argumentTypes": null,
													"id": 1791,
													"name": "feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 188,
													"src": "31813:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31786:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1793,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "31836:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1794,
														"name": "_newFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "31851:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31836:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "31836:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1798,
															"name": "_oldFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "31899:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1799,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "31917:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1797,
														"name": "FeeRecipientSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "31883:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31883:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1801,
												"nodeType": "EmitStatement",
												"src": "31878:52:0"
											}
										]
									},
									"documentation": "@dev Sets a new fee recipient address.\r\n@param _newFeeRecipient The address allowed to collect transfer fees for transfers.\r",
									"id": 1803,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1778,
											"modifierName": {
												"argumentTypes": null,
												"id": 1777,
												"name": "onlyFeeController",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1773,
												"src": "31621:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "31621:17:0"
										}
									],
									"name": "setFeeRecipient",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"name": "_newFeeRecipient",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "31570:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31569:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31644:0:0"
									},
									"scope": 1855,
									"src": "31545:393:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "32151:205:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1811,
																"name": "_newFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "32170:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1812,
																"name": "feeParts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "32185:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32170:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e6e6f74207365742066656520726174652061626f76652031303025",
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32195:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4c31a8a1c504a0d11a7a8b8643b33e88cade97471a39b2110e94bd49a541333",
																"typeString": "literal_string \"cannot set fee rate above 100%\""
															},
															"value": "cannot set fee rate above 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4c31a8a1c504a0d11a7a8b8643b33e88cade97471a39b2110e94bd49a541333",
																"typeString": "literal_string \"cannot set fee rate above 100%\""
															}
														],
														"id": 1810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1873,
															1874
														],
														"referencedDeclaration": 1874,
														"src": "32162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32162:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "32162:66:0"
											},
											{
												"assignments": [
													1818
												],
												"declarations": [
													{
														"constant": false,
														"id": 1818,
														"name": "_oldFeeRate",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "32239:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1817,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"argumentTypes": null,
													"id": 1819,
													"name": "feeRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 184,
													"src": "32261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32239:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1821,
														"name": "feeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "32279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1822,
														"name": "_newFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "32289:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32279:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "32279:21:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1826,
															"name": "_oldFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "32327:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1827,
															"name": "feeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "32340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1825,
														"name": "FeeRateSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "32316:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32316:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "EmitStatement",
												"src": "32311:37:0"
											}
										]
									},
									"documentation": "@dev Sets a new fee rate.\r\n@param _newFeeRate The new fee rate to collect as transfer fees for transfers.\r",
									"id": 1831,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 1808,
											"modifierName": {
												"argumentTypes": null,
												"id": 1807,
												"name": "onlyFeeController",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1773,
												"src": "32133:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "32133:17:0"
										}
									],
									"name": "setFeeRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"name": "_newFeeRate",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "32105:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32104:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32151:0:0"
									},
									"scope": 1855,
									"src": "32085:271:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "32625:124:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1838,
														"name": "feeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "32640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32651:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32640:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "32636:53:0",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "32654:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32676:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1837,
															"id": 1842,
															"nodeType": "Return",
															"src": "32669:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1850,
															"name": "feeParts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "32732:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1847,
																	"name": "feeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "32719:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1845,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "32708:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 82,
																"src": "32708:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32708:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "32708:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32708:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1837,
												"id": 1852,
												"nodeType": "Return",
												"src": "32701:40:0"
											}
										]
									},
									"documentation": "@dev Gets a fee for a given value\r\nex: given feeRate = 200 and feeParts = 1,000,000 then getFeeFor(10000) = 2\r\n@param _value The amount to get the fee for.\r",
									"id": 1854,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getFeeFor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "32579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32578:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "32616:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32615:9:0"
									},
									"scope": 1855,
									"src": "32560:189:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1856,
							"src": "2470:30282:0"
						}
					],
					"src": "116:32638:0"
				},
				"id": 0
			}
		}
	}
}